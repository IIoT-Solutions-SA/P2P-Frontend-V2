import {
  require_build,
  require_cookieHandler,
  require_dateProvider,
  require_error,
  require_normalisedURLDomain,
  require_normalisedURLPath,
  require_recipe,
  require_recipeModule,
  require_session,
  require_session2,
  require_utils,
  require_windowHandler,
  require_windowHandler2
} from "./chunk-VTGDAHUI.js";
import {
  require_jsx_runtime
} from "./chunk-MJNCUEZK.js";
import {
  require_react
} from "./chunk-UGC3UZ7L.js";
import {
  __commonJS
} from "./chunk-G3PMV62Z.js";

// node_modules/supertokens-website/utils/error/index.js
var require_error2 = __commonJS({
  "node_modules/supertokens-website/utils/error/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_error();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-web-js/lib/build/error.js
var require_error3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/error.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var error_1 = require_error2();
    exports.default = error_1.STGeneralError;
  }
});

// node_modules/supertokens-website/utils/cookieHandler/index.js
var require_cookieHandler2 = __commonJS({
  "node_modules/supertokens-website/utils/cookieHandler/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_cookieHandler());
  }
});

// node_modules/supertokens-web-js/lib/build/cookieHandler/index.js
var require_cookieHandler3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/cookieHandler/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CookieHandlerReference = void 0;
    var cookieHandler_1 = require_cookieHandler2();
    Object.defineProperty(exports, "CookieHandlerReference", {
      enumerable: true,
      get: function() {
        return cookieHandler_1.CookieHandlerReference;
      }
    });
  }
});

// node_modules/supertokens-web-js/lib/build/postSuperTokensInitCallbacks.js
var require_postSuperTokensInitCallbacks = __commonJS({
  "node_modules/supertokens-web-js/lib/build/postSuperTokensInitCallbacks.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PostSuperTokensInitCallbacks = void 0;
    var PostSuperTokensInitCallbacks = (
      /** @class */
      function() {
        function PostSuperTokensInitCallbacks2() {
        }
        PostSuperTokensInitCallbacks2.addPostInitCallback = function(cb) {
          PostSuperTokensInitCallbacks2.postInitCallbacks.push(cb);
        };
        PostSuperTokensInitCallbacks2.runPostInitCallbacks = function() {
          for (var _i = 0, _a = PostSuperTokensInitCallbacks2.postInitCallbacks; _i < _a.length; _i++) {
            var cb = _a[_i];
            cb();
          }
        };
        PostSuperTokensInitCallbacks2.postInitCallbacks = [];
        return PostSuperTokensInitCallbacks2;
      }()
    );
    exports.PostSuperTokensInitCallbacks = PostSuperTokensInitCallbacks;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/recipeModule/utils.js
var require_utils2 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/recipeModule/utils.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normaliseRecipeModuleConfig = void 0;
    function normaliseRecipeModuleConfig(config) {
      var _this = this;
      var preAPIHook = config.preAPIHook;
      if (preAPIHook === void 0) {
        preAPIHook = function(context) {
          return __awaiter(_this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, context];
            });
          });
        };
      }
      var postAPIHook = config.postAPIHook;
      if (postAPIHook === void 0) {
        postAPIHook = function() {
          return __awaiter(_this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [
                2
                /*return*/
              ];
            });
          });
        };
      }
      return {
        recipeId: config.recipeId,
        appInfo: config.appInfo,
        clientType: config.clientType,
        preAPIHook,
        postAPIHook
      };
    }
    exports.normaliseRecipeModuleConfig = normaliseRecipeModuleConfig;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/authRecipe/utils.js
var require_utils3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/authRecipe/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normaliseAuthRecipe = void 0;
    var utils_1 = require_utils2();
    function normaliseAuthRecipe(config) {
      return (0, utils_1.normaliseRecipeModuleConfig)(config);
    }
    exports.normaliseAuthRecipe = normaliseAuthRecipe;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/multitenancy/utils.js
var require_utils4 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/multitenancy/utils.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normaliseUserInput = void 0;
    var utils_1 = require_utils3();
    function normaliseUserInput(config) {
      var override = __assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return __assign(__assign({}, (0, utils_1.normaliseAuthRecipe)(config)), { override });
    }
    exports.normaliseUserInput = normaliseUserInput;
  }
});

// node_modules/supertokens-web-js/lib/build/version.js
var require_version = __commonJS({
  "node_modules/supertokens-web-js/lib/build/version.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.supported_fdi = exports.package_version = void 0;
    exports.package_version = "0.15.0";
    exports.supported_fdi = ["3.1", "4.0", "4.1"];
  }
});

// node_modules/supertokens-web-js/lib/build/querier.js
var require_querier = __commonJS({
  "node_modules/supertokens-web-js/lib/build/querier.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var normalisedURLPath_1 = require_normalisedURLPath();
    var version_1 = require_version();
    var error_1 = require_error3();
    var Querier = (
      /** @class */
      function() {
        function Querier2(recipeId, appInfo) {
          var _this = this;
          this.recipeId = recipeId;
          this.appInfo = appInfo;
          this.get = function(tenantId, path, config, queryParams, preAPIHook, postAPIHook) {
            return __awaiter(_this, void 0, void 0, function() {
              var result, jsonBody;
              return __generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    return [
                      4,
                      this.fetch(
                        this.getFullUrl(tenantId, path, queryParams),
                        __assign({ method: "GET" }, config),
                        preAPIHook,
                        postAPIHook
                      )
                    ];
                  case 1:
                    result = _b.sent();
                    return [4, this.getResponseJsonOrThrowGeneralError(result)];
                  case 2:
                    jsonBody = _b.sent();
                    return [
                      2,
                      {
                        jsonBody,
                        fetchResponse: result
                      }
                    ];
                }
              });
            });
          };
          this.post = function(tenantId, path, config, preAPIHook, postAPIHook) {
            return __awaiter(_this, void 0, void 0, function() {
              var result, jsonBody;
              return __generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    if (config.body === void 0) {
                      throw new Error("Post request must have a body");
                    }
                    return [
                      4,
                      this.fetch(
                        this.getFullUrl(tenantId, path),
                        __assign({ method: "POST" }, config),
                        preAPIHook,
                        postAPIHook
                      )
                    ];
                  case 1:
                    result = _b.sent();
                    return [4, this.getResponseJsonOrThrowGeneralError(result)];
                  case 2:
                    jsonBody = _b.sent();
                    return [
                      2,
                      {
                        jsonBody,
                        fetchResponse: result
                      }
                    ];
                }
              });
            });
          };
          this.delete = function(tenantId, path, config, preAPIHook, postAPIHook) {
            return __awaiter(_this, void 0, void 0, function() {
              var result, jsonBody;
              return __generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    return [
                      4,
                      this.fetch(
                        this.getFullUrl(tenantId, path),
                        __assign({ method: "DELETE" }, config),
                        preAPIHook,
                        postAPIHook
                      )
                    ];
                  case 1:
                    result = _b.sent();
                    return [4, this.getResponseJsonOrThrowGeneralError(result)];
                  case 2:
                    jsonBody = _b.sent();
                    return [
                      2,
                      {
                        jsonBody,
                        fetchResponse: result
                      }
                    ];
                }
              });
            });
          };
          this.put = function(tenantId, path, config, preAPIHook, postAPIHook) {
            return __awaiter(_this, void 0, void 0, function() {
              var result, jsonBody;
              return __generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    return [
                      4,
                      this.fetch(
                        this.getFullUrl(tenantId, path),
                        __assign({ method: "PUT" }, config),
                        preAPIHook,
                        postAPIHook
                      )
                    ];
                  case 1:
                    result = _b.sent();
                    return [4, this.getResponseJsonOrThrowGeneralError(result)];
                  case 2:
                    jsonBody = _b.sent();
                    return [
                      2,
                      {
                        jsonBody,
                        fetchResponse: result
                      }
                    ];
                }
              });
            });
          };
          this.fetch = function(url, config, preAPIHook, postAPIHook) {
            return __awaiter(_this, void 0, void 0, function() {
              var headers, _b, requestInit, modifiedUrl, result, reponseForPostAPI;
              return __generator(this, function(_c) {
                switch (_c.label) {
                  case 0:
                    if (config === void 0) {
                      headers = {};
                    } else {
                      headers = config.headers;
                    }
                    return [
                      4,
                      this.callPreAPIHook({
                        preAPIHook,
                        url,
                        requestInit: __assign(__assign({}, config), {
                          headers: __assign(__assign({}, headers), {
                            "fdi-version": version_1.supported_fdi.join(","),
                            "Content-Type": "application/json",
                            rid: this.recipeId
                          })
                        })
                      })
                    ];
                  case 1:
                    _b = _c.sent(), requestInit = _b.requestInit, modifiedUrl = _b.url;
                    return [4, fetch(modifiedUrl, requestInit)];
                  case 2:
                    result = _c.sent();
                    if (result.status >= 300) {
                      throw result;
                    }
                    if (!(postAPIHook !== void 0)) return [3, 4];
                    reponseForPostAPI = result.clone();
                    return [
                      4,
                      postAPIHook({
                        requestInit,
                        url,
                        fetchResponse: reponseForPostAPI
                      })
                    ];
                  case 3:
                    _c.sent();
                    _c.label = 4;
                  case 4:
                    return [2, result];
                }
              });
            });
          };
          this.callPreAPIHook = function(context) {
            return __awaiter(_this, void 0, void 0, function() {
              var result;
              return __generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    if (context.preAPIHook === void 0) {
                      return [
                        2,
                        {
                          url: context.url,
                          requestInit: context.requestInit
                        }
                      ];
                    }
                    return [
                      4,
                      context.preAPIHook({
                        url: context.url,
                        requestInit: context.requestInit
                      })
                    ];
                  case 1:
                    result = _b.sent();
                    return [2, result];
                }
              });
            });
          };
          this.getFullUrl = function(tenantId, pathStr, queryParams) {
            var basePath = _this.appInfo.apiBasePath.getAsStringDangerous();
            if (tenantId !== void 0 && tenantId !== "public") {
              basePath = "".concat(basePath, "/").concat(tenantId);
            }
            var path = new normalisedURLPath_1.default(pathStr);
            var fullUrl = "".concat(_this.appInfo.apiDomain.getAsStringDangerous()).concat(basePath).concat(path.getAsStringDangerous());
            if (queryParams === void 0) {
              return fullUrl;
            }
            return fullUrl + "?" + new URLSearchParams(queryParams);
          };
          this.getResponseJsonOrThrowGeneralError = function(response) {
            return __awaiter(_this, void 0, void 0, function() {
              var json, message;
              return __generator(this, function(_b) {
                switch (_b.label) {
                  case 0:
                    return [4, response.clone().json()];
                  case 1:
                    json = _b.sent();
                    if (json.status === "GENERAL_ERROR") {
                      message = json.message === void 0 ? "No Error Message Provided" : json.message;
                      throw new error_1.default(message);
                    }
                    return [2, json];
                }
              });
            });
          };
        }
        var _a;
        _a = Querier2;
        Querier2.preparePreAPIHook = function(_b) {
          var recipePreAPIHook = _b.recipePreAPIHook, action = _b.action, options = _b.options, userContext = _b.userContext;
          return function(context) {
            return __awaiter(void 0, void 0, void 0, function() {
              var postRecipeHookContext;
              return __generator(_a, function(_b2) {
                switch (_b2.label) {
                  case 0:
                    return [
                      4,
                      recipePreAPIHook(
                        __assign(__assign({}, context), { action, userContext })
                      )
                    ];
                  case 1:
                    postRecipeHookContext = _b2.sent();
                    if (options === void 0 || options.preAPIHook === void 0) {
                      return [2, postRecipeHookContext];
                    }
                    return [
                      2,
                      options.preAPIHook({
                        url: postRecipeHookContext.url,
                        requestInit: postRecipeHookContext.requestInit,
                        userContext
                      })
                    ];
                }
              });
            });
          };
        };
        Querier2.preparePostAPIHook = function(_b) {
          var recipePostAPIHook = _b.recipePostAPIHook, action = _b.action, userContext = _b.userContext;
          return function(context) {
            return __awaiter(void 0, void 0, void 0, function() {
              return __generator(_a, function(_b2) {
                switch (_b2.label) {
                  case 0:
                    return [
                      4,
                      recipePostAPIHook(
                        __assign(__assign({}, context), { userContext, action })
                      )
                    ];
                  case 1:
                    _b2.sent();
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          };
        };
        return Querier2;
      }()
    );
    exports.default = Querier;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/multitenancy/recipeImplementation.js
var require_recipeImplementation = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/multitenancy/recipeImplementation.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getRecipeImplementation = void 0;
    var querier_1 = require_querier();
    var utils_1 = require_utils();
    function getRecipeImplementation(recipeImplInput) {
      var querier = new querier_1.default(recipeImplInput.recipeId, recipeImplInput.appInfo);
      return {
        getTenantId: function() {
          var queryParam = (0, utils_1.getQueryParams)("tenantId");
          if ((queryParam === null || queryParam === void 0 ? void 0 : queryParam.trim()) === "") {
            return void 0;
          }
          return queryParam;
        },
        getLoginMethods: function(_a) {
          var tenantId = _a.tenantId, options = _a.options, userContext = _a.userContext;
          return __awaiter(this, void 0, void 0, function() {
            var queryParams, _b, jsonBody, fetchResponse, firstFactors;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  queryParams = {};
                  if (recipeImplInput.clientType !== void 0) {
                    queryParams.clientType = recipeImplInput.clientType;
                  }
                  return [
                    4,
                    querier.get(
                      tenantId,
                      "/loginmethods",
                      {},
                      queryParams,
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "GET_LOGIN_METHODS",
                        options,
                        userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "GET_LOGIN_METHODS",
                        userContext
                      })
                    )
                  ];
                case 1:
                  _b = _c.sent(), jsonBody = _b.jsonBody, fetchResponse = _b.fetchResponse;
                  if (jsonBody.firstFactors === void 0) {
                    firstFactors = [];
                    if (jsonBody.emailPassword.enabled) {
                      firstFactors.push("emailpassword");
                    }
                    if (jsonBody.thirdParty.enabled) {
                      firstFactors.push("thirdparty");
                    }
                    if (jsonBody.passwordless.enabled) {
                      firstFactors.push("otp-email");
                      firstFactors.push("otp-phone");
                      firstFactors.push("link-email");
                      firstFactors.push("link-phone");
                    }
                  } else {
                    firstFactors = jsonBody.firstFactors;
                  }
                  return [
                    2,
                    {
                      status: "OK",
                      thirdParty: {
                        providers: jsonBody.thirdParty.providers
                      },
                      firstFactors,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        }
      };
    }
    exports.default = getRecipeImplementation;
    exports.getRecipeImplementation = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/authRecipe/index.js
var require_authRecipe = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/authRecipe/index.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var recipeModule_1 = require_recipeModule();
    var recipe_1 = require_recipe();
    var AuthRecipe = (
      /** @class */
      function(_super) {
        __extends(AuthRecipe2, _super);
        function AuthRecipe2(config) {
          var _this = _super.call(this, config) || this;
          _this.signOut = function(input) {
            return __awaiter(_this, void 0, void 0, function() {
              return __generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [
                      4,
                      recipe_1.default.getInstanceOrThrow().signOut({
                        userContext: input.userContext
                      })
                    ];
                  case 1:
                    return [2, _a.sent()];
                }
              });
            });
          };
          return _this;
        }
        return AuthRecipe2;
      }(recipeModule_1.default)
    );
    exports.default = AuthRecipe;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/multitenancy/recipe.js
var require_recipe2 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/multitenancy/recipe.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Recipe = void 0;
    var utils_1 = require_utils4();
    var supertokens_js_override_1 = require_build();
    var recipeImplementation_1 = require_recipeImplementation();
    var utils_2 = require_utils();
    var authRecipe_1 = require_authRecipe();
    var Recipe = (
      /** @class */
      function(_super) {
        __extends(Recipe2, _super);
        function Recipe2(config) {
          var _this = _super.call(this, (0, utils_1.normaliseUserInput)(config)) || this;
          var builder = new supertokens_js_override_1.default(
            (0, recipeImplementation_1.default)({
              recipeId: _this.config.recipeId,
              appInfo: _this.config.appInfo,
              clientType: _this.config.clientType,
              preAPIHook: _this.config.preAPIHook,
              postAPIHook: _this.config.postAPIHook
            })
          );
          _this.recipeImplementation = builder.override(_this.config.override.functions).build();
          return _this;
        }
        Recipe2.init = function(config) {
          return function(appInfo, clientType) {
            Recipe2.instance = new Recipe2(
              __assign(__assign({}, config), { recipeId: Recipe2.RECIPE_ID, appInfo, clientType })
            );
            return Recipe2.instance;
          };
        };
        Recipe2.getInstanceOrThrow = function() {
          if (Recipe2.instance === void 0) {
            var error = "No instance of Multitenancy found. Ensure that 'SuperTokens.init' method has been called.";
            error = (0, utils_2.checkForSSRErrorAndAppendIfNeeded)(error);
            throw Error(error);
          }
          return Recipe2.instance;
        };
        Recipe2.reset = function() {
          if (!(0, utils_2.isTest)()) {
            return;
          }
          Recipe2.instance = void 0;
          return;
        };
        Recipe2.RECIPE_ID = "multitenancy";
        return Recipe2;
      }(authRecipe_1.default)
    );
    exports.Recipe = Recipe;
    exports.default = Recipe;
  }
});

// node_modules/supertokens-website/utils/dateProvider/index.js
var require_dateProvider2 = __commonJS({
  "node_modules/supertokens-website/utils/dateProvider/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_dateProvider());
  }
});

// node_modules/supertokens-web-js/lib/build/dateProvider/index.js
var require_dateProvider3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/dateProvider/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.DateProviderReference = void 0;
    var dateProvider_1 = require_dateProvider2();
    Object.defineProperty(exports, "DateProviderReference", {
      enumerable: true,
      get: function() {
        return dateProvider_1.DateProviderReference;
      }
    });
  }
});

// node_modules/supertokens-web-js/lib/build/supertokens.js
var require_supertokens = __commonJS({
  "node_modules/supertokens-web-js/lib/build/supertokens.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var utils_1 = require_utils();
    var cookieHandler_1 = require_cookieHandler3();
    var windowHandler_1 = require_windowHandler2();
    var postSuperTokensInitCallbacks_1 = require_postSuperTokensInitCallbacks();
    var recipe_1 = require_recipe2();
    var dateProvider_1 = require_dateProvider3();
    var SuperTokens = (
      /** @class */
      function() {
        function SuperTokens2(config) {
          var _this = this;
          this.recipeList = [];
          this.appInfo = (0, utils_1.normaliseInputAppInfoOrThrowError)(config.appInfo);
          if (config.recipeList === void 0 || config.recipeList.length === 0) {
            throw new Error(
              "Please provide at least one recipe to the supertokens.init function call. See https://supertokens.io/docs/emailpassword/quick-setup/frontend"
            );
          }
          var enableDebugLogs = false;
          if (config.enableDebugLogs !== void 0) {
            enableDebugLogs = config.enableDebugLogs;
          }
          var multitenancyFound = false;
          this.recipeList = config.recipeList.map(function(recipe) {
            var recipeInstance = recipe(_this.appInfo, config.clientType, enableDebugLogs);
            if (recipeInstance.config.recipeId === recipe_1.Recipe.RECIPE_ID) {
              multitenancyFound = true;
            }
            return recipeInstance;
          });
          if (!multitenancyFound) {
            this.recipeList.push(recipe_1.Recipe.init()(this.appInfo, config.clientType, enableDebugLogs));
          }
        }
        SuperTokens2.init = function(config) {
          cookieHandler_1.CookieHandlerReference.init(config.cookieHandler);
          windowHandler_1.WindowHandlerReference.init(config.windowHandler);
          dateProvider_1.DateProviderReference.init(config.dateProvider);
          if (SuperTokens2.instance !== void 0) {
            console.warn("SuperTokens was already initialized");
            return;
          }
          SuperTokens2.instance = new SuperTokens2(config);
          postSuperTokensInitCallbacks_1.PostSuperTokensInitCallbacks.runPostInitCallbacks();
        };
        SuperTokens2.getInstanceOrThrow = function() {
          if (SuperTokens2.instance === void 0) {
            var error = "SuperTokens must be initialized before calling this method.";
            error = (0, utils_1.checkForSSRErrorAndAppendIfNeeded)(error);
            throw new Error(error);
          }
          return SuperTokens2.instance;
        };
        SuperTokens2.reset = function() {
          if (!(0, utils_1.isTest)()) {
            console.warn("Calling reset() is only supported during testing");
            return;
          }
          recipe_1.Recipe.reset();
          SuperTokens2.instance = void 0;
          return;
        };
        return SuperTokens2;
      }()
    );
    exports.default = SuperTokens;
  }
});

// node_modules/supertokens-web-js/lib/build/index.js
var require_build2 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.init = void 0;
    var supertokens_1 = require_supertokens();
    var SuperTokensAPIWrapper = (
      /** @class */
      function() {
        function SuperTokensAPIWrapper2() {
        }
        SuperTokensAPIWrapper2.init = function(config) {
          supertokens_1.default.init(config);
        };
        return SuperTokensAPIWrapper2;
      }()
    );
    exports.default = SuperTokensAPIWrapper;
    exports.init = SuperTokensAPIWrapper.init;
  }
});

// node_modules/supertokens-web-js/index.js
var require_supertokens_web_js = __commonJS({
  "node_modules/supertokens-web-js/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_build2());
  }
});

// node_modules/supertokens-web-js/utils/cookieHandler/index.js
var require_cookieHandler4 = __commonJS({
  "node_modules/supertokens-web-js/utils/cookieHandler/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_cookieHandler3();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js
var require_postSuperTokensInitCallbacks2 = __commonJS({
  "node_modules/supertokens-web-js/utils/postSuperTokensInitCallbacks.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_postSuperTokensInitCallbacks());
  }
});

// node_modules/supertokens-web-js/utils/windowHandler/index.js
var require_windowHandler3 = __commonJS({
  "node_modules/supertokens-web-js/utils/windowHandler/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_windowHandler2());
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/multitenancy/allowedDomainsClaim.js
var require_allowedDomainsClaim = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/multitenancy/allowedDomainsClaim.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AllowedDomainsClaim = exports.AllowedDomainsClaimClass = void 0;
    var windowHandler_1 = require_windowHandler();
    var session_1 = require_session();
    var AllowedDomainsClaimClass = (
      /** @class */
      function(_super) {
        __extends(AllowedDomainsClaimClass2, _super);
        function AllowedDomainsClaimClass2() {
          var _this = _super.call(this, {
            id: "st-t-dmns",
            refresh: function() {
              return __awaiter(_this, void 0, void 0, function() {
                return __generator(this, function(_a) {
                  return [
                    2
                    /*return*/
                  ];
                });
              });
            },
            defaultMaxAgeInSeconds: Number.MAX_SAFE_INTEGER
          }) || this;
          _this.validators = __assign(__assign({}, _this.validators), {
            hasAccessToCurrentDomain: function() {
              return {
                id: _this.id,
                refresh: _this.refresh,
                shouldRefresh: function() {
                  return false;
                },
                validate: function(payload, userContext) {
                  return __awaiter(_this, void 0, void 0, function() {
                    var currentDomain, includesValidator;
                    return __generator(this, function(_a) {
                      currentDomain = windowHandler_1.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHostName();
                      includesValidator = this.validators.includes(
                        currentDomain,
                        Number.MAX_SAFE_INTEGER,
                        this.id
                      );
                      return [2, includesValidator.validate(payload, userContext)];
                    });
                  });
                }
              };
            }
          });
          return _this;
        }
        return AllowedDomainsClaimClass2;
      }(session_1.PrimitiveArrayClaim)
    );
    exports.AllowedDomainsClaimClass = AllowedDomainsClaimClass;
    exports.AllowedDomainsClaim = new AllowedDomainsClaimClass();
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/multitenancy/index.js
var require_multitenancy = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/multitenancy/index.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AllowedDomainsClaim = exports.getTenantId = exports.getLoginMethods = exports.init = void 0;
    var utils_1 = require_utils();
    var allowedDomainsClaim_1 = require_allowedDomainsClaim();
    Object.defineProperty(exports, "AllowedDomainsClaim", {
      enumerable: true,
      get: function() {
        return allowedDomainsClaim_1.AllowedDomainsClaim;
      }
    });
    var recipe_1 = require_recipe2();
    var RecipeWrapper = (
      /** @class */
      function() {
        function RecipeWrapper2() {
        }
        RecipeWrapper2.init = function(config) {
          return recipe_1.default.init(config);
        };
        RecipeWrapper2.getLoginMethods = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.getLoginMethods(
            __assign(__assign({}, input), {
              userContext: (0, utils_1.getNormalisedUserContext)(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        RecipeWrapper2.getTenantId = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId(
            __assign(__assign({}, input), {
              userContext: (0, utils_1.getNormalisedUserContext)(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        RecipeWrapper2.AllowedDomainsClaim = allowedDomainsClaim_1.AllowedDomainsClaim;
        return RecipeWrapper2;
      }()
    );
    exports.default = RecipeWrapper;
    var init = RecipeWrapper.init;
    exports.init = init;
    var getLoginMethods = RecipeWrapper.getLoginMethods;
    exports.getLoginMethods = getLoginMethods;
    var getTenantId = RecipeWrapper.getTenantId;
    exports.getTenantId = getTenantId;
  }
});

// node_modules/supertokens-web-js/recipe/multitenancy/index.js
var require_multitenancy2 = __commonJS({
  "node_modules/supertokens-web-js/recipe/multitenancy/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_multitenancy());
  }
});

// node_modules/supertokens-web-js/utils/index.js
var require_utils5 = __commonJS({
  "node_modules/supertokens-web-js/utils/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_utils();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-web-js/utils/normalisedURLDomain.js
var require_normalisedURLDomain2 = __commonJS({
  "node_modules/supertokens-web-js/utils/normalisedURLDomain.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_normalisedURLDomain();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-web-js/utils/normalisedURLPath.js
var require_normalisedURLPath2 = __commonJS({
  "node_modules/supertokens-web-js/utils/normalisedURLPath.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_normalisedURLPath();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-auth-react/lib/build/genericComponentOverrideContext.js
var require_genericComponentOverrideContext = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/genericComponentOverrideContext.js"(exports) {
    "use strict";
    var SuperTokensWebJS = require_supertokens_web_js();
    var cookieHandler = require_cookieHandler4();
    var postSuperTokensInitCallbacks = require_postSuperTokensInitCallbacks2();
    var windowHandler = require_windowHandler3();
    var MultitenancyWebJS = require_multitenancy2();
    var utils = require_utils5();
    var React = require_react();
    var STGeneralError = require_error3();
    var NormalisedURLDomain = require_normalisedURLDomain2();
    var NormalisedURLPath = require_normalisedURLPath2();
    var jsxRuntime = require_jsx_runtime();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var SuperTokensWebJS__default = _interopDefault(SuperTokensWebJS);
    var MultitenancyWebJS__default = _interopDefault(MultitenancyWebJS);
    var React__default = _interopDefault(React);
    var STGeneralError__default = _interopDefault(STGeneralError);
    var NormalisedURLDomain__default = _interopDefault(NormalisedURLDomain);
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var extendStatics = function(d, b) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
        d2.__proto__ = b2;
      } || function(d2, b2) {
        for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
      };
      return extendStatics(d, b);
    };
    function __extends(d, b) {
      if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
      extendStatics(d, b);
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    exports.__assign = function() {
      exports.__assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return exports.__assign.apply(this, arguments);
    };
    function __rest(s, e) {
      var t = {};
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
        }
      return t;
    }
    function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    }
    function __generator(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g = Object.create((typeof Iterator === "function" ? Iterator : Object).prototype);
      return g.next = verb(0), g["throw"] = verb(1), g["return"] = verb(2), typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    }
    function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    }
    var RECIPE_ID_QUERY_PARAM = "rid";
    var TENANT_ID_QUERY_PARAM = "tenantId";
    var DEFAULT_API_BASE_PATH = "/auth";
    var DEFAULT_WEBSITE_BASE_PATH = "/auth";
    var ST_ROOT_ID = "supertokens-root";
    var SSR_ERROR = "\nIf you are trying to use this method doing server-side-rendering, please make sure you move this method inside a componentDidMount method or useEffect hook.";
    var package_version = "0.49.1";
    var SUPERTOKENS_DEBUG_NAMESPACE = "com.supertokens.auth-react";
    var __debugLogsEnabled = false;
    function enableLogging() {
      __debugLogsEnabled = true;
    }
    function logDebugMessage(message) {
      if (__debugLogsEnabled) {
        console.log(
          "".concat(SUPERTOKENS_DEBUG_NAMESPACE, ' {t: "').concat((/* @__PURE__ */ new Date()).toISOString(), '", message: "').concat(message, '", supertokens-auth-react-ver: "').concat(package_version, '"}')
        );
      }
    }
    function getRecipeIdFromSearch(search) {
      var urlParams = new URLSearchParams(search);
      return urlParams.get(RECIPE_ID_QUERY_PARAM);
    }
    function clearQueryParams(paramNames) {
      var newURL = new URL(windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHref());
      for (var _i = 0, paramNames_1 = paramNames; _i < paramNames_1.length; _i++) {
        var param = paramNames_1[_i];
        newURL.searchParams.delete(param);
      }
      windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.history.replaceState(
        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.history.getState(),
        "",
        newURL.toString()
      );
    }
    function updateQueryParam(name, value) {
      var newURL = new URL(windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHref());
      newURL.searchParams.set(name, value);
      windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.history.replaceState(
        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.history.getState(),
        "",
        newURL.toString()
      );
    }
    function clearErrorQueryParam() {
      clearQueryParams(["error", "message"]);
    }
    function getQueryParams(param) {
      var urlParams = new URLSearchParams(
        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getSearch()
      );
      return urlParams.get(param);
    }
    function getURLHash() {
      return windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHash().substr(1);
    }
    function getRedirectToPathFromURL() {
      var redirectToPath = getQueryParams("redirectToPath");
      if (redirectToPath === null) {
        return void 0;
      } else {
        try {
          var url = void 0;
          try {
            url = new URL(redirectToPath);
          } catch (error) {
            var fakeDomain = redirectToPath.startsWith("/") ? "http://localhost" : "http://localhost/";
            url = new URL("".concat(fakeDomain).concat(redirectToPath));
          }
          var normalisedURLPath = new NormalisedURLPath__default.default(redirectToPath).getAsStringDangerous();
          var pathQueryParams = url.search || "";
          var pathHash = url.hash || "";
          var pathWithQueryParamsAndHash = normalisedURLPath + pathQueryParams + pathHash;
          if (normalisedURLPath.length === 0 && pathWithQueryParamsAndHash.length > 0 && !pathWithQueryParamsAndHash.startsWith("/")) {
            return "/" + pathWithQueryParamsAndHash;
          }
          return pathWithQueryParamsAndHash;
        } catch (_a) {
          return void 0;
        }
      }
    }
    function getTenantIdFromQueryParams() {
      var _a;
      return (_a = getQueryParams(TENANT_ID_QUERY_PARAM)) !== null && _a !== void 0 ? _a : void 0;
    }
    function getDefaultRedirectionURLForPath(config, defaultPath, context, extraQueryParams) {
      var redirectPath = config.appInfo.websiteBasePath.appendPath(new NormalisedURLPath__default.default(defaultPath)).getAsStringDangerous();
      var queryParams = new URLSearchParams();
      if (context.tenantIdFromQueryParams !== void 0) {
        queryParams.set(TENANT_ID_QUERY_PARAM, context.tenantIdFromQueryParams);
      }
      if (extraQueryParams !== void 0) {
        Object.entries(extraQueryParams).forEach(function(_a) {
          var key = _a[0], value = _a[1];
          if (value !== void 0) {
            queryParams.set(key, value);
          }
        });
      }
      if (queryParams.toString() !== "") {
        return "".concat(redirectPath, "?").concat(queryParams.toString());
      }
      return redirectPath;
    }
    function isTest() {
      try {
        return process.env.TEST_MODE === "testing" || process.env.REACT_APP_TEST_MODE === "testing";
      } catch (err) {
        return false;
      }
    }
    function normaliseInputAppInfoOrThrowError(appInfo) {
      if (appInfo === void 0) {
        throw new Error("Please provide the appInfo object when calling supertokens.init");
      }
      if (appInfo.apiDomain === void 0) {
        throw new Error("Please provide your apiDomain inside the appInfo object when calling supertokens.init");
      }
      if (appInfo.appName === void 0) {
        throw new Error("Please provide your appName inside the appInfo object when calling supertokens.init");
      }
      if (appInfo.websiteDomain === void 0) {
        throw new Error("Please provide your websiteDomain inside the appInfo object when calling supertokens.init");
      }
      var apiGatewayPath = new NormalisedURLPath__default.default("");
      if (appInfo.apiGatewayPath !== void 0) {
        apiGatewayPath = new NormalisedURLPath__default.default(appInfo.apiGatewayPath);
      }
      return {
        appName: appInfo.appName,
        apiDomain: new NormalisedURLDomain__default.default(appInfo.apiDomain),
        websiteDomain: new NormalisedURLDomain__default.default(appInfo.websiteDomain),
        apiBasePath: apiGatewayPath.appendPath(
          getNormalisedURLPathOrDefault(DEFAULT_API_BASE_PATH, appInfo.apiBasePath)
        ),
        websiteBasePath: getNormalisedURLPathOrDefault(DEFAULT_WEBSITE_BASE_PATH, appInfo.websiteBasePath)
      };
    }
    function getNormalisedURLPathOrDefault(defaultPath, path) {
      if (path !== void 0) {
        return new NormalisedURLPath__default.default(path);
      } else {
        return new NormalisedURLPath__default.default(defaultPath);
      }
    }
    function validateForm(inputs, configFormFields) {
      return __awaiter(this, void 0, void 0, function() {
        var validationErrors, _loop_1, i;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              validationErrors = [];
              if (configFormFields.length !== inputs.length) {
                throw Error("Are you sending too many / too few formFields?");
              }
              _loop_1 = function(i2) {
                var field, input, value, error;
                return __generator(this, function(_b) {
                  switch (_b.label) {
                    case 0:
                      field = configFormFields[i2];
                      input = inputs.find(function(i3) {
                        return i3.id === field.id;
                      });
                      value = input.value;
                      if (input.id === "email") {
                        value = value.trim();
                      }
                      return [4, field.validate(value)];
                    case 1:
                      error = _b.sent();
                      if (error !== void 0) {
                        validationErrors.push({
                          error,
                          id: field.id
                        });
                      }
                      return [
                        2
                        /*return*/
                      ];
                  }
                });
              };
              i = 0;
              _a.label = 1;
            case 1:
              if (!(i < configFormFields.length)) return [3, 4];
              return [5, _loop_1(i)];
            case 2:
              _a.sent();
              _a.label = 3;
            case 3:
              i++;
              return [3, 1];
            case 4:
              return [2, validationErrors];
          }
        });
      });
    }
    function getCurrentNormalisedUrlPath() {
      return new NormalisedURLPath__default.default(
        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getPathName()
      );
    }
    function getCurrentNormalisedUrlPathWithQueryParamsAndFragments() {
      var normalisedUrlPath = getCurrentNormalisedUrlPath().getAsStringDangerous();
      return normalisedUrlPath + windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getSearch() + windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHash();
    }
    function appendQueryParamsToURL(stringUrl, queryParams) {
      if (queryParams === void 0) {
        return stringUrl;
      }
      try {
        var url_1 = new URL(stringUrl);
        Object.entries(queryParams).forEach(function(_a) {
          var key = _a[0], value = _a[1];
          url_1.searchParams.set(key, value);
        });
        return url_1.href;
      } catch (e) {
        var fakeDomain = stringUrl.startsWith("/") ? "http://localhost" : "http://localhost/";
        var url_2 = new URL("".concat(fakeDomain).concat(stringUrl));
        Object.entries(queryParams).forEach(function(_a) {
          var key = _a[0], value = _a[1];
          url_2.searchParams.set(key, value);
        });
        return "".concat(url_2.pathname).concat(url_2.search).concat(url_2.hash);
      }
    }
    function appendTrailingSlashToURL(stringUrl) {
      return stringUrl.endsWith("/") ? stringUrl : stringUrl + "/";
    }
    function matchRecipeIdUsingQueryParams(recipeId) {
      return function() {
        var recipeIdFromSearch = getRecipeIdFromSearch(
          windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getSearch()
        );
        return recipeIdFromSearch === recipeId;
      };
    }
    function redirectWithFullPageReload(to) {
      if (to.trim() === "") {
        to = "/";
      }
      windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.setHref(to);
    }
    function redirectWithNavigate(to, navigate) {
      if (to.trim() === "") {
        to = "/";
      }
      if ("push" in navigate) {
        navigate.push(to);
      } else {
        navigate(to);
      }
    }
    function getOriginOfPage() {
      return new NormalisedURLDomain__default.default(
        windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getOrigin()
      );
    }
    function getLocalStorage(key) {
      return __awaiter(this, void 0, void 0, function() {
        var res;
        return __generator(this, function(_a) {
          res = windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.getItem(key);
          if (res === null || res === void 0) {
            return [2, null];
          }
          return [2, res];
        });
      });
    }
    function setLocalStorage(key, value) {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              return [
                4,
                windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.setItem(
                  key,
                  value
                )
              ];
            case 1:
              _a.sent();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }
    function removeFromLocalStorage(key) {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              return [
                4,
                windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.localStorage.removeItem(
                  key
                )
              ];
            case 1:
              _a.sent();
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }
    function mergeObjects(obj1, obj2) {
      var res = exports.__assign({}, obj1);
      for (var key in obj2) {
        if (typeof res[key] === "object" && typeof obj2[key] === "object") {
          res[key] = mergeObjects(res[key], obj2[key]);
        } else {
          res[key] = obj2[key];
        }
      }
      return res;
    }
    function normaliseCookieScopeOrThrowError(cookieScope) {
      function helper(cookieScope2) {
        cookieScope2 = cookieScope2.trim().toLowerCase();
        if (cookieScope2.startsWith(".")) {
          cookieScope2 = cookieScope2.substr(1);
        }
        if (!cookieScope2.startsWith("http://") && !cookieScope2.startsWith("https://")) {
          cookieScope2 = "http://" + cookieScope2;
        }
        try {
          var urlObj = new URL(cookieScope2);
          cookieScope2 = urlObj.hostname;
          if (cookieScope2.startsWith(".")) {
            cookieScope2 = cookieScope2.substr(1);
          }
          return cookieScope2;
        } catch (err) {
          throw new Error("Please provide a valid cookie scope");
        }
      }
      function isAnIpAddress(ipaddress) {
        return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(
          ipaddress
        );
      }
      var noDotNormalised = helper(cookieScope);
      if (noDotNormalised === "localhost" || isAnIpAddress(noDotNormalised)) {
        return noDotNormalised;
      }
      if (cookieScope.startsWith(".")) {
        return "." + noDotNormalised;
      }
      return noDotNormalised;
    }
    function getDefaultCookieScope() {
      try {
        return normaliseCookieScopeOrThrowError(
          windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHostName()
        );
      } catch (_a) {
        return void 0;
      }
    }
    function getCookieValue(name) {
      return __awaiter(this, void 0, void 0, function() {
        var value, _a, parts, last, temp;
        return __generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              _a = "; ";
              return [
                4,
                cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.getCookie()
              ];
            case 1:
              value = _a + _b.sent();
              parts = value.split("; " + name + "=");
              if (parts.length >= 2) {
                last = parts.pop();
                if (last !== void 0) {
                  temp = last.split(";").shift();
                  if (temp === void 0) {
                    return [2, null];
                  }
                  return [2, temp];
                }
              }
              return [2, null];
          }
        });
      });
    }
    function setFrontendCookie(name, value, scope) {
      return __awaiter(this, void 0, void 0, function() {
        var expires, cookieVal;
        return __generator(this, function(_a) {
          switch (_a.label) {
            case 0:
              expires = "Thu, 01 Jan 1970 00:00:01 GMT";
              cookieVal = "";
              if (value !== void 0) {
                cookieVal = value;
                expires = void 0;
              }
              if (!(scope === "localhost" || scope === windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHostName() || scope === void 0))
                return [3, 5];
              if (!(expires !== void 0)) return [3, 2];
              return [
                4,
                cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(
                  "".concat(name, "=").concat(cookieVal, ";expires=").concat(expires, ";path=/;samesite=lax")
                )
              ];
            case 1:
              _a.sent();
              return [3, 4];
            case 2:
              return [
                4,
                cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(
                  "".concat(name, "=").concat(cookieVal, ";expires=Fri, 31 Dec 9999 23:59:59 GMT;path=/;samesite=lax")
                )
              ];
            case 3:
              _a.sent();
              _a.label = 4;
            case 4:
              return [3, 9];
            case 5:
              if (!(expires !== void 0)) return [3, 7];
              return [
                4,
                cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(
                  "".concat(name, "=").concat(cookieVal, ";expires=").concat(expires, ";domain=").concat(scope, ";path=/;samesite=lax")
                )
              ];
            case 6:
              _a.sent();
              return [3, 9];
            case 7:
              return [
                4,
                cookieHandler.CookieHandlerReference.getReferenceOrThrow().cookieHandler.setCookie(
                  "".concat(name, "=").concat(cookieVal, ";domain=").concat(scope, ";expires=Fri, 31 Dec 9999 23:59:59 GMT;path=/;samesite=lax")
                )
              ];
            case 8:
              _a.sent();
              _a.label = 9;
            case 9:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }
    function getNormalisedUserContext(userContext) {
      return userContext === void 0 ? {} : userContext;
    }
    var useOnMountAPICall = function(fetch2, handleResponse, handleError, startLoading) {
      if (startLoading === void 0) {
        startLoading = true;
      }
      var consumeReq = React.useRef();
      var _a = React.useState(void 0), error = _a[0], setError = _a[1];
      React.useEffect(
        function() {
          var effect = function(signal) {
            return __awaiter(void 0, void 0, void 0, function() {
              var resp, err_1, err_2;
              return __generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    _a2.trys.push([0, 2, , 9]);
                    if (consumeReq.current === void 0) {
                      consumeReq.current = fetch2();
                    }
                    return [4, consumeReq.current];
                  case 1:
                    resp = _a2.sent();
                    if (!signal.aborted) {
                      void handleResponse(resp);
                    }
                    return [3, 9];
                  case 2:
                    err_1 = _a2.sent();
                    if (!!signal.aborted) return [3, 8];
                    if (!(handleError !== void 0)) return [3, 7];
                    _a2.label = 3;
                  case 3:
                    _a2.trys.push([3, 5, , 6]);
                    return [4, handleError(err_1, resp)];
                  case 4:
                    _a2.sent();
                    return [3, 6];
                  case 5:
                    err_2 = _a2.sent();
                    setError(err_2);
                    return [3, 6];
                  case 6:
                    return [3, 8];
                  case 7:
                    setError(err_1);
                    _a2.label = 8;
                  case 8:
                    return [3, 9];
                  case 9:
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          };
          if (startLoading) {
            var ctrl_1 = new AbortController();
            void effect(ctrl_1.signal);
            return function() {
              ctrl_1.abort();
            };
          }
          return;
        },
        [setError, consumeReq, fetch2, handleResponse, handleError, startLoading]
      );
      if (error) {
        throw error;
      }
    };
    function useRethrowInRender() {
      var _a = React.useState(void 0), error = _a[0], setError = _a[1];
      if (error) {
        throw error;
      }
      return setError;
    }
    var handleCallAPI = function(_a) {
      var apiFields = _a.apiFields, fieldUpdates = _a.fieldUpdates, callAPI = _a.callAPI;
      return __awaiter(void 0, void 0, void 0, function() {
        var result, generalError, fetchError, e_1;
        return __generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              _b.trys.push([0, 2, , 3]);
              return [
                4,
                callAPI(apiFields || [], function(id, value) {
                  return fieldUpdates.push({ id, value });
                })
              ];
            case 1:
              result = _b.sent();
              return [3, 3];
            case 2:
              e_1 = _b.sent();
              if (STGeneralError__default.default.isThisError(e_1)) {
                generalError = e_1;
              } else if (e_1 instanceof Response) {
                fetchError = e_1;
              } else {
                throw e_1;
              }
              return [3, 3];
            case 3:
              return [
                2,
                {
                  result,
                  generalError,
                  fetchError
                }
              ];
          }
        });
      });
    };
    var BaseRecipeModule = (
      /** @class */
      /* @__PURE__ */ function() {
        function BaseRecipeModule2(config) {
          this.config = config;
        }
        return BaseRecipeModule2;
      }()
    );
    function normaliseRecipeModuleConfig(config) {
      var _this = this;
      if (config === void 0) {
        config = {};
      }
      var onHandleEvent = config.onHandleEvent, getRedirectionURL = config.getRedirectionURL, preAPIHook = config.preAPIHook, postAPIHook = config.postAPIHook;
      if (onHandleEvent === void 0) {
        onHandleEvent = function(_) {
        };
      }
      if (getRedirectionURL === void 0) {
        getRedirectionURL = function(_) {
          return __awaiter(_this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, void 0];
            });
          });
        };
      }
      if (preAPIHook === void 0) {
        preAPIHook = function(context) {
          return __awaiter(_this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [2, context];
            });
          });
        };
      }
      if (postAPIHook === void 0) {
        postAPIHook = function() {
          return __awaiter(_this, void 0, void 0, function() {
            return __generator(this, function(_a) {
              return [
                2
                /*return*/
              ];
            });
          });
        };
      }
      var rootStyle = config.style === void 0 ? "" : config.style;
      return exports.__assign(exports.__assign({}, config), {
        getRedirectionURL,
        onHandleEvent,
        preAPIHook,
        postAPIHook,
        recipeRootStyle: rootStyle
      });
    }
    function normaliseMultitenancyConfig(config) {
      return exports.__assign(exports.__assign({}, normaliseRecipeModuleConfig(config)), {
        override: exports.__assign(
          {
            functions: function(originalImplementation) {
              return originalImplementation;
            }
          },
          config === null || config === void 0 ? void 0 : config.override
        )
      });
    }
    function hasIntersectingRecipes(tenantMethods, recipeList) {
      return tenantMethods.firstFactors.some(function(factorId) {
        return recipeList.some(function(r) {
          return r.firstFactorIds.includes(factorId);
        });
      });
    }
    var Multitenancy = (
      /** @class */
      function(_super) {
        __extends(Multitenancy2, _super);
        function Multitenancy2(config, webJSRecipe) {
          if (webJSRecipe === void 0) {
            webJSRecipe = MultitenancyWebJS__default.default;
          }
          var _this = _super.call(this, config) || this;
          _this.webJSRecipe = webJSRecipe;
          _this.recipeID = Multitenancy2.RECIPE_ID;
          _this.dynamicLoginMethodsCache = {};
          return _this;
        }
        Multitenancy2.prototype.getCurrentDynamicLoginMethods = function(input) {
          var _a;
          return __awaiter(this, void 0, void 0, function() {
            var userContext, tenantId, tenantMethods;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  if (SuperTokens.usesDynamicLoginMethods === false) {
                    return [2, void 0];
                  }
                  userContext = utils.getNormalisedUserContext(input.userContext);
                  return [4, Multitenancy2.getInstanceOrThrow().webJSRecipe.getTenantId()];
                case 1:
                  tenantId = (_a = _b.sent()) !== null && _a !== void 0 ? _a : "public";
                  if (this.dynamicLoginMethodsCache[tenantId] === void 0) {
                    this.dynamicLoginMethodsCache[tenantId] = Multitenancy2.getDynamicLoginMethods({
                      tenantId,
                      userContext
                    });
                  }
                  return [4, this.dynamicLoginMethodsCache[tenantId]];
                case 2:
                  tenantMethods = _b.sent();
                  if (!hasIntersectingRecipes(
                    tenantMethods,
                    SuperTokens.getInstanceOrThrow().recipeList.filter(function(recipe) {
                      return "firstFactorIds" in recipe;
                    })
                  )) {
                    throw new Error(
                      "Initialized recipes have no overlap with core recipes or could not load login methods"
                    );
                  }
                  return [2, tenantMethods];
              }
            });
          });
        };
        Multitenancy2.getDynamicLoginMethods = function(input) {
          return __awaiter(this, void 0, void 0, function() {
            var _a, thirdParty, firstFactors;
            return __generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  return [4, MultitenancyWebJS__default.default.getLoginMethods(input)];
                case 1:
                  _a = _b.sent(), thirdParty = _a.thirdParty, firstFactors = _a.firstFactors;
                  return [
                    2,
                    {
                      thirdparty: thirdParty,
                      firstFactors
                    }
                  ];
              }
            });
          });
        };
        Multitenancy2.init = function(config) {
          var normalisedConfig = normaliseMultitenancyConfig(config);
          return {
            recipeID: Multitenancy2.RECIPE_ID,
            authReact: function(appInfo) {
              Multitenancy2.instance = new Multitenancy2(
                exports.__assign(exports.__assign({}, normalisedConfig), {
                  appInfo,
                  recipeId: Multitenancy2.RECIPE_ID
                })
              );
              return Multitenancy2.instance;
            },
            webJS: MultitenancyWebJS__default.default.init(exports.__assign({}, normalisedConfig))
          };
        };
        Multitenancy2.getInstanceOrThrow = function() {
          if (Multitenancy2.instance === void 0) {
            var error = "No instance of Multitenancy found. Make sure to call the Multitenancy.init method.See https://supertokens.io/docs/multitenancy/quick-setup/frontend";
            if (typeof window === "undefined") {
              error = error + SSR_ERROR;
            }
            throw Error(error);
          }
          return Multitenancy2.instance;
        };
        Multitenancy2.reset = function() {
          if (!isTest()) {
            return;
          }
          Multitenancy2.instance = void 0;
          return;
        };
        Multitenancy2.RECIPE_ID = "multitenancy";
        return Multitenancy2;
      }(BaseRecipeModule)
    );
    var TranslationController = (
      /** @class */
      function() {
        function TranslationController2() {
          this.handlers = /* @__PURE__ */ new Map();
        }
        TranslationController2.prototype.emit = function(event, detail) {
          var handlerList = this.handlers.get(event) || [];
          for (var _i = 0, handlerList_1 = handlerList; _i < handlerList_1.length; _i++) {
            var h = handlerList_1[_i];
            h(event, detail);
          }
        };
        TranslationController2.prototype.on = function(event, handler) {
          var handlerList = this.handlers.get(event) || [];
          this.handlers.set(event, handlerList.concat(handler));
        };
        TranslationController2.prototype.off = function(event, handler) {
          var handlerList = this.handlers.get(event) || [];
          this.handlers.set(
            event,
            handlerList.filter(function(h) {
              return h !== handler;
            })
          );
        };
        return TranslationController2;
      }()
    );
    var CURRENT_LANGUAGE_COOKIE_NAME = "sCurrLanguage";
    function saveCurrentLanguage(language, cookieDomain) {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              _b.trys.push([0, 2, , 3]);
              return [4, setFrontendCookie(CURRENT_LANGUAGE_COOKIE_NAME, language, cookieDomain)];
            case 1:
              _b.sent();
              return [3, 3];
            case 2:
              _b.sent();
              return [3, 3];
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }
    function getCurrentLanguageFromCookie() {
      return __awaiter(this, void 0, void 0, function() {
        return __generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              _b.trys.push([0, 2, , 3]);
              return [4, getCookieValue(CURRENT_LANGUAGE_COOKIE_NAME)];
            case 1:
              return [2, _b.sent()];
            case 2:
              _b.sent();
              return [2, null];
            case 3:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }
    var SuperTokens = (
      /** @class */
      function() {
        function SuperTokens2(config) {
          var _this = this;
          var _a, _b, _c, _d;
          this.recipeList = [];
          this.changeLanguage = function(lang) {
            return __awaiter(_this, void 0, void 0, function() {
              return __generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [
                      4,
                      saveCurrentLanguage(lang, this.languageTranslations.currentLanguageCookieScope)
                    ];
                  case 1:
                    _a2.sent();
                    this.languageTranslations.translationEventSource.emit("LanguageChange", lang);
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          };
          this.redirectToAuth = function(options) {
            return __awaiter(_this, void 0, void 0, function() {
              var queryParams, redirectUrl;
              return __generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    queryParams = options.queryParams === void 0 ? {} : options.queryParams;
                    if (options.show !== void 0) {
                      queryParams.show = options.show;
                    }
                    if (options.redirectBack === true) {
                      queryParams.redirectToPath = getCurrentNormalisedUrlPathWithQueryParamsAndFragments();
                    }
                    return [
                      4,
                      this.getRedirectUrl(
                        {
                          action: "TO_AUTH",
                          showSignIn: options.show === "signin",
                          tenantIdFromQueryParams: getTenantIdFromQueryParams()
                        },
                        options.userContext
                      )
                    ];
                  case 1:
                    redirectUrl = _a2.sent();
                    if (redirectUrl === null) {
                      logDebugMessage("Skipping redirection because the user override returned null");
                      return [
                        2
                        /*return*/
                      ];
                    }
                    redirectUrl = appendQueryParamsToURL(redirectUrl, queryParams);
                    return [2, this.redirectToUrl(redirectUrl, options.navigate)];
                }
              });
            });
          };
          this.redirectToUrl = function(redirectUrl, navigate) {
            return __awaiter(_this, void 0, void 0, function() {
              return __generator(this, function(_a2) {
                doRedirection(this.appInfo, redirectUrl, navigate);
                return [
                  2
                  /*return*/
                ];
              });
            });
          };
          this.redirect = function(context, navigate, queryParams, userContext) {
            return __awaiter(_this, void 0, void 0, function() {
              var redirectUrl;
              return __generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, this.getRedirectUrl(context, getNormalisedUserContext(userContext))];
                  case 1:
                    redirectUrl = _a2.sent();
                    if (redirectUrl === null) {
                      logDebugMessage(
                        "Skipping redirection because the user override returned null for context ".concat(
                          JSON.stringify(context, null, 2)
                        )
                      );
                      return [
                        2
                        /*return*/
                      ];
                    }
                    redirectUrl = appendQueryParamsToURL(redirectUrl, queryParams);
                    return [
                      2,
                      SuperTokens2.getInstanceOrThrow().redirectToUrl(redirectUrl, navigate)
                    ];
                }
              });
            });
          };
          this.appInfo = normaliseInputAppInfoOrThrowError(config.appInfo);
          if (config.recipeList === void 0 || config.recipeList.length === 0) {
            throw new Error(
              "Please provide at least one recipe to the supertokens.init function call. See https://supertokens.io/docs/emailpassword/quick-setup/frontend"
            );
          }
          var translationConfig = config.languageTranslations === void 0 ? {} : config.languageTranslations;
          this.languageTranslations = {
            defaultLanguage: translationConfig.defaultLanguage === void 0 ? "en" : translationConfig.defaultLanguage,
            currentLanguageCookieScope: translationConfig.currentLanguageCookieScope !== void 0 ? normaliseCookieScopeOrThrowError(translationConfig.currentLanguageCookieScope) : getDefaultCookieScope(),
            userTranslationStore: translationConfig.translations !== void 0 ? translationConfig.translations : {},
            translationEventSource: new TranslationController(),
            userTranslationFunc: translationConfig.translationFunc
          };
          var enableDebugLogs = Boolean(config === null || config === void 0 ? void 0 : config.enableDebugLogs);
          if (enableDebugLogs) {
            enableLogging();
          }
          this.userGetRedirectionURL = config.getRedirectionURL;
          this.recipeList = config.recipeList.map(function(_a2) {
            var authReact = _a2.authReact;
            return authReact(_this.appInfo, enableDebugLogs);
          });
          this.rootStyle = (_a = config.style) !== null && _a !== void 0 ? _a : "";
          this.privacyPolicyLink = config.privacyPolicyLink;
          this.termsOfServiceLink = config.termsOfServiceLink;
          this.useShadowDom = (_b = config.useShadowDom) !== null && _b !== void 0 ? _b : true;
          this.defaultToSignUp = (_c = config.defaultToSignUp) !== null && _c !== void 0 ? _c : false;
          this.disableAuthRoute = (_d = config.disableAuthRoute) !== null && _d !== void 0 ? _d : false;
        }
        SuperTokens2.init = function(config) {
          var _a;
          cookieHandler.CookieHandlerReference.init(config.cookieHandler);
          windowHandler.WindowHandlerReference.init(config.windowHandler);
          if (SuperTokens2.instance !== void 0) {
            console.warn("SuperTokens was already initialized");
            return;
          }
          SuperTokens2.usesDynamicLoginMethods = (_a = config.usesDynamicLoginMethods) !== null && _a !== void 0 ? _a : false;
          var recipes = config.recipeList.find(function(recipe) {
            return recipe.recipeID === Multitenancy.RECIPE_ID;
          }) !== void 0 ? config.recipeList : config.recipeList.concat(Multitenancy.init({}));
          SuperTokensWebJS__default.default.init(
            exports.__assign(exports.__assign({}, config), {
              recipeList: recipes.map(function(_a2) {
                var webJS = _a2.webJS;
                return webJS;
              })
            })
          );
          SuperTokens2.instance = new SuperTokens2(exports.__assign(exports.__assign({}, config), { recipeList: recipes }));
          postSuperTokensInitCallbacks.PostSuperTokensInitCallbacks.runPostInitCallbacks();
        };
        SuperTokens2.getInstanceOrThrow = function() {
          if (SuperTokens2.instance === void 0) {
            var error = "SuperTokens must be initialized before calling this method.";
            if (typeof window === "undefined") {
              error = error + SSR_ERROR;
            }
            throw new Error(error);
          }
          return SuperTokens2.instance;
        };
        SuperTokens2.prototype.getRecipeOrThrow = function(recipeId) {
          var recipe = this.recipeList.find(function(recipe2) {
            return recipe2.config.recipeId === recipeId;
          });
          if (recipe === void 0) {
            throw new Error("Missing recipe: ".concat(recipeId));
          }
          return recipe;
        };
        SuperTokens2.prototype.loadTranslation = function(store) {
          this.languageTranslations.translationEventSource.emit("TranslationLoaded", store);
        };
        SuperTokens2.prototype.getRedirectUrl = function(context, userContext) {
          var _a;
          return __awaiter(this, void 0, void 0, function() {
            var userRes, redirectUrl, basePath;
            var _b;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  if (!this.userGetRedirectionURL) return [3, 2];
                  return [4, this.userGetRedirectionURL(context, userContext)];
                case 1:
                  userRes = _c.sent();
                  if (userRes !== void 0) {
                    return [2, userRes];
                  }
                  _c.label = 2;
                case 2:
                  if (context.action === "TO_AUTH") {
                    redirectUrl = this.appInfo.websiteBasePath.getAsStringDangerous();
                    basePath = appendTrailingSlashToURL(redirectUrl);
                    if (context.tenantIdFromQueryParams) {
                      return [
                        2,
                        appendQueryParamsToURL(
                          basePath,
                          (_b = {}, _b[TENANT_ID_QUERY_PARAM] = context.tenantIdFromQueryParams, _b)
                        )
                      ];
                    }
                    return [2, basePath];
                  } else if (context.action === "SUCCESS") {
                    return [2, (_a = context.redirectToPath) !== null && _a !== void 0 ? _a : "/"];
                  }
                  throw new Error("Should never come here: unexpected redirection context");
              }
            });
          });
        };
        SuperTokens2.reset = function() {
          if (!isTest()) {
            return;
          }
          SuperTokens2.instance = void 0;
          return;
        };
        SuperTokens2.usesDynamicLoginMethods = false;
        return SuperTokens2;
      }()
    );
    function doRedirection(appInfo, redirectUrl, navigate) {
      try {
        new URL(redirectUrl);
      } catch (e) {
        var origin_1 = getOriginOfPage().getAsStringDangerous();
        if (origin_1 !== appInfo.websiteDomain.getAsStringDangerous()) {
          redirectUrl = "".concat(appInfo.websiteDomain.getAsStringDangerous()).concat(redirectUrl);
          redirectWithFullPageReload(redirectUrl);
          return;
        }
        if (navigate !== void 0) {
          redirectWithNavigate(redirectUrl, navigate);
          return;
        }
      }
      redirectWithFullPageReload(redirectUrl);
    }
    var createGenericComponentsOverrideContext = function(v) {
      if (v === void 0) {
        v = {};
      }
      var genericContext = React__default.default.createContext(v);
      var useComponentsOverrideContext = function() {
        return React__default.default.useContext(genericContext);
      };
      var Provider = function(_a) {
        var children = _a.children, components = _a.components;
        return jsxRuntime.jsx(genericContext.Provider, exports.__assign({ value: components }, { children }));
      };
      return [useComponentsOverrideContext, Provider, genericContext.Consumer];
    };
    exports.BaseRecipeModule = BaseRecipeModule;
    exports.Multitenancy = Multitenancy;
    exports.SSR_ERROR = SSR_ERROR;
    exports.ST_ROOT_ID = ST_ROOT_ID;
    exports.SuperTokens = SuperTokens;
    exports.__awaiter = __awaiter;
    exports.__extends = __extends;
    exports.__generator = __generator;
    exports.__rest = __rest;
    exports.__spreadArray = __spreadArray;
    exports.appendQueryParamsToURL = appendQueryParamsToURL;
    exports.clearErrorQueryParam = clearErrorQueryParam;
    exports.clearQueryParams = clearQueryParams;
    exports.createGenericComponentsOverrideContext = createGenericComponentsOverrideContext;
    exports.getCurrentLanguageFromCookie = getCurrentLanguageFromCookie;
    exports.getCurrentNormalisedUrlPath = getCurrentNormalisedUrlPath;
    exports.getCurrentNormalisedUrlPathWithQueryParamsAndFragments = getCurrentNormalisedUrlPathWithQueryParamsAndFragments;
    exports.getDefaultRedirectionURLForPath = getDefaultRedirectionURLForPath;
    exports.getLocalStorage = getLocalStorage;
    exports.getNormalisedUserContext = getNormalisedUserContext;
    exports.getQueryParams = getQueryParams;
    exports.getRedirectToPathFromURL = getRedirectToPathFromURL;
    exports.getTenantIdFromQueryParams = getTenantIdFromQueryParams;
    exports.getURLHash = getURLHash;
    exports.handleCallAPI = handleCallAPI;
    exports.isTest = isTest;
    exports.logDebugMessage = logDebugMessage;
    exports.matchRecipeIdUsingQueryParams = matchRecipeIdUsingQueryParams;
    exports.mergeObjects = mergeObjects;
    exports.normaliseRecipeModuleConfig = normaliseRecipeModuleConfig;
    exports.redirectWithFullPageReload = redirectWithFullPageReload;
    exports.removeFromLocalStorage = removeFromLocalStorage;
    exports.setLocalStorage = setLocalStorage;
    exports.updateQueryParam = updateQueryParam;
    exports.useOnMountAPICall = useOnMountAPICall;
    exports.useRethrowInRender = useRethrowInRender;
    exports.validateForm = validateForm;
  }
});

// node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js
var require_recipeModule_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/recipeModule-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var RecipeModule = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(RecipeModule2, _super);
        function RecipeModule2() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.redirect = function(context, navigate, queryParams, userContext) {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              var redirectUrl;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [
                      4,
                      this.getRedirectUrl(
                        context,
                        genericComponentOverrideContext.getNormalisedUserContext(userContext)
                      )
                    ];
                  case 1:
                    redirectUrl = _a.sent();
                    if (redirectUrl === null) {
                      genericComponentOverrideContext.logDebugMessage(
                        "Skipping redirection because the user override returned null for context ".concat(
                          JSON.stringify(context, null, 2)
                        )
                      );
                      return [
                        2
                        /*return*/
                      ];
                    }
                    redirectUrl = genericComponentOverrideContext.appendQueryParamsToURL(
                      redirectUrl,
                      queryParams
                    );
                    return [
                      2,
                      genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToUrl(
                        redirectUrl,
                        navigate
                      )
                    ];
                }
              });
            });
          };
          _this.getRedirectUrl = function(context, userContext) {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              var redirectUrl;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [4, this.config.getRedirectionURL(context, userContext)];
                  case 1:
                    redirectUrl = _a.sent();
                    if (redirectUrl !== void 0) {
                      return [2, redirectUrl];
                    }
                    return [4, this.getDefaultRedirectionURL(context, userContext)];
                  case 2:
                    return [2, _a.sent()];
                }
              });
            });
          };
          return _this;
        }
        RecipeModule2.prototype.getDefaultRedirectionURL = function(_, _userContext) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              throw new Error("getDefaultRedirectionURL is not implemented.");
            });
          });
        };
        return RecipeModule2;
      }(genericComponentOverrideContext.BaseRecipeModule)
    );
    exports.RecipeModule = RecipeModule;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/utils.js
var require_utils6 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/utils.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normaliseUserInput = void 0;
    var utils_1 = require_utils3();
    function normaliseUserInput(config) {
      var override = __assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return __assign(__assign({}, (0, utils_1.normaliseAuthRecipe)(config)), { override });
    }
    exports.normaliseUserInput = normaliseUserInput;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/recipeImplementation.js
var require_recipeImplementation2 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/recipeImplementation.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getRecipeImplementation = void 0;
    var querier_1 = require_querier();
    var recipe_1 = require_recipe2();
    function getRecipeImplementation(recipeImplInput) {
      var querier = new querier_1.default(recipeImplInput.recipeId, recipeImplInput.appInfo);
      return {
        getLoginChallengeInfo: function(_a) {
          var loginChallenge = _a.loginChallenge, options = _a.options, userContext = _a.userContext;
          return __awaiter(this, void 0, void 0, function() {
            var queryParams, _b, jsonBody, fetchResponse, _c, _d;
            return __generator(this, function(_e) {
              switch (_e.label) {
                case 0:
                  queryParams = {
                    loginChallenge
                  };
                  _d = (_c = querier).get;
                  return [
                    4,
                    recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({ userContext })
                  ];
                case 1:
                  return [
                    4,
                    _d.apply(_c, [
                      _e.sent(),
                      "/oauth/login/info",
                      {},
                      queryParams,
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "GET_LOGIN_CHALLENGE_INFO",
                        options,
                        userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "GET_LOGIN_CHALLENGE_INFO",
                        userContext
                      })
                    ])
                  ];
                case 2:
                  _b = _e.sent(), jsonBody = _b.jsonBody, fetchResponse = _b.fetchResponse;
                  return [
                    2,
                    {
                      status: "OK",
                      info: jsonBody.info,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        getRedirectURLToContinueOAuthFlow: function(_a) {
          var loginChallenge = _a.loginChallenge, options = _a.options, userContext = _a.userContext;
          return __awaiter(this, void 0, void 0, function() {
            var _b, jsonBody, fetchResponse, _c, _d;
            return __generator(this, function(_e) {
              switch (_e.label) {
                case 0:
                  _d = (_c = querier).get;
                  return [
                    4,
                    recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({ userContext })
                  ];
                case 1:
                  return [
                    4,
                    _d.apply(_c, [
                      _e.sent(),
                      "/oauth/login",
                      {},
                      {
                        loginChallenge
                      },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "GET_REDIRECT_URL_TO_CONTINUE_OAUTH_FLOW",
                        options,
                        userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "GET_REDIRECT_URL_TO_CONTINUE_OAUTH_FLOW",
                        userContext
                      })
                    ])
                  ];
                case 2:
                  _b = _e.sent(), jsonBody = _b.jsonBody, fetchResponse = _b.fetchResponse;
                  return [
                    2,
                    {
                      status: "OK",
                      frontendRedirectTo: jsonBody.frontendRedirectTo,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        logOut: function(_a) {
          var logoutChallenge = _a.logoutChallenge, options = _a.options, userContext = _a.userContext;
          return __awaiter(this, void 0, void 0, function() {
            var _b, jsonBody, fetchResponse, _c, _d;
            return __generator(this, function(_e) {
              switch (_e.label) {
                case 0:
                  _d = (_c = querier).post;
                  return [
                    4,
                    recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantId({ userContext })
                  ];
                case 1:
                  return [
                    4,
                    _d.apply(_c, [
                      _e.sent(),
                      "/oauth/logout",
                      {
                        body: JSON.stringify({ logoutChallenge })
                      },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImplInput.preAPIHook,
                        action: "LOG_OUT",
                        options,
                        userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImplInput.postAPIHook,
                        action: "LOG_OUT",
                        userContext
                      })
                    ])
                  ];
                case 2:
                  _b = _e.sent(), jsonBody = _b.jsonBody, fetchResponse = _b.fetchResponse;
                  return [
                    2,
                    {
                      status: "OK",
                      frontendRedirectTo: jsonBody.frontendRedirectTo,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        }
      };
    }
    exports.default = getRecipeImplementation;
    exports.getRecipeImplementation = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/recipe.js
var require_recipe3 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/recipe.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Recipe = void 0;
    var utils_1 = require_utils6();
    var supertokens_js_override_1 = require_build();
    var recipeImplementation_1 = require_recipeImplementation2();
    var utils_2 = require_utils();
    var authRecipe_1 = require_authRecipe();
    var Recipe = (
      /** @class */
      function(_super) {
        __extends(Recipe2, _super);
        function Recipe2(config) {
          var _this = _super.call(this, (0, utils_1.normaliseUserInput)(config)) || this;
          var builder = new supertokens_js_override_1.default(
            (0, recipeImplementation_1.default)({
              recipeId: _this.config.recipeId,
              appInfo: _this.config.appInfo,
              clientType: _this.config.clientType,
              preAPIHook: _this.config.preAPIHook,
              postAPIHook: _this.config.postAPIHook
            })
          );
          _this.recipeImplementation = builder.override(_this.config.override.functions).build();
          return _this;
        }
        Recipe2.init = function(config) {
          return function(appInfo, clientType) {
            Recipe2.instance = new Recipe2(
              __assign(__assign({}, config), { recipeId: Recipe2.RECIPE_ID, appInfo, clientType })
            );
            return Recipe2.instance;
          };
        };
        Recipe2.getInstanceOrThrow = function() {
          if (Recipe2.instance === void 0) {
            var error = "No instance of OAuth2Provider found. Ensure that the 'OAuth2Provider.init' method is called within the 'SuperTokens.init' recipeList.";
            error = (0, utils_2.checkForSSRErrorAndAppendIfNeeded)(error);
            throw Error(error);
          }
          return Recipe2.instance;
        };
        Recipe2.reset = function() {
          if (!(0, utils_2.isTest)()) {
            return;
          }
          Recipe2.instance = void 0;
          return;
        };
        Recipe2.RECIPE_ID = "oauth2provider";
        return Recipe2;
      }(authRecipe_1.default)
    );
    exports.Recipe = Recipe;
    exports.default = Recipe;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/index.js
var require_oauth2provider = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/oauth2provider/index.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.logOut = exports.getRedirectURLToContinueOAuthFlow = exports.getLoginChallengeInfo = exports.init = void 0;
    var utils_1 = require_utils();
    var recipe_1 = require_recipe3();
    var RecipeWrapper = (
      /** @class */
      function() {
        function RecipeWrapper2() {
        }
        RecipeWrapper2.init = function(config) {
          return recipe_1.default.init(config);
        };
        RecipeWrapper2.getLoginChallengeInfo = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.getLoginChallengeInfo(
            __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })
          );
        };
        RecipeWrapper2.getRedirectURLToContinueOAuthFlow = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.getRedirectURLToContinueOAuthFlow(
            __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })
          );
        };
        RecipeWrapper2.logOut = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.logOut(
            __assign(__assign({}, input), { userContext: (0, utils_1.getNormalisedUserContext)(input.userContext) })
          );
        };
        return RecipeWrapper2;
      }()
    );
    exports.default = RecipeWrapper;
    var init = RecipeWrapper.init;
    exports.init = init;
    var getLoginChallengeInfo = RecipeWrapper.getLoginChallengeInfo;
    exports.getLoginChallengeInfo = getLoginChallengeInfo;
    var getRedirectURLToContinueOAuthFlow = RecipeWrapper.getRedirectURLToContinueOAuthFlow;
    exports.getRedirectURLToContinueOAuthFlow = getRedirectURLToContinueOAuthFlow;
    var logOut = RecipeWrapper.logOut;
    exports.logOut = logOut;
  }
});

// node_modules/supertokens-web-js/recipe/oauth2provider/index.js
var require_oauth2provider2 = __commonJS({
  "node_modules/supertokens-web-js/recipe/oauth2provider/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_oauth2provider());
  }
});

// node_modules/supertokens-auth-react/lib/build/oauth2provider-shared.js
var require_oauth2provider_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/oauth2provider-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var OAuth2WebJS = require_oauth2provider2();
    var index = require_recipeModule_shared();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var OAuth2WebJS__default = _interopDefault(OAuth2WebJS);
    var getFunctionOverrides = function(onHandleEvent) {
      return function(originalImp) {
        return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, originalImp), {
          getLoginChallengeInfo: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [4, originalImp.getLoginChallengeInfo(input)];
                  case 1:
                    response = _a.sent();
                    onHandleEvent({
                      action: "LOADED_LOGIN_CHALLENGE",
                      loginChallenge: input.loginChallenge,
                      loginInfo: response.info,
                      userContext: input.userContext
                    });
                    return [2, response];
                }
              });
            });
          },
          logOut: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [4, originalImp.logOut(input)];
                  case 1:
                    response = _a.sent();
                    onHandleEvent({
                      action: "OAUTH2_LOGOUT_SUCCESS",
                      frontendRedirectTo: response.frontendRedirectTo,
                      userContext: input.userContext
                    });
                    return [2, response];
                }
              });
            });
          }
        });
      };
    };
    function normaliseOAuth2Config(config) {
      var _a;
      return genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign(
          {},
          genericComponentOverrideContext.normaliseRecipeModuleConfig(config)
        ),
        {
          disableDefaultUI: (_a = config === null || config === void 0 ? void 0 : config.disableDefaultUI) !== null && _a !== void 0 ? _a : false,
          tryRefreshPage: genericComponentOverrideContext.__assign(
            { disableDefaultUI: false },
            config === null || config === void 0 ? void 0 : config.tryRefreshPage
          ),
          oauth2LogoutScreen: genericComponentOverrideContext.__assign(
            { disableDefaultUI: false, style: "" },
            config === null || config === void 0 ? void 0 : config.oauth2LogoutScreen
          ),
          override: genericComponentOverrideContext.__assign(
            {
              functions: function(originalImplementation) {
                return originalImplementation;
              }
            },
            config === null || config === void 0 ? void 0 : config.override
          )
        }
      );
    }
    var OAuth2Provider = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(OAuth2Provider2, _super);
        function OAuth2Provider2(config, webJSRecipe) {
          if (webJSRecipe === void 0) {
            webJSRecipe = OAuth2WebJS__default.default;
          }
          var _this = _super.call(this, config) || this;
          _this.webJSRecipe = webJSRecipe;
          _this.recipeID = OAuth2Provider2.RECIPE_ID;
          return _this;
        }
        OAuth2Provider2.init = function(config) {
          var normalisedConfig = normaliseOAuth2Config(config);
          return {
            recipeID: OAuth2Provider2.RECIPE_ID,
            authReact: function(appInfo) {
              OAuth2Provider2.instance = new OAuth2Provider2(
                genericComponentOverrideContext.__assign(
                  genericComponentOverrideContext.__assign({}, normalisedConfig),
                  { appInfo, recipeId: OAuth2Provider2.RECIPE_ID }
                )
              );
              return OAuth2Provider2.instance;
            },
            webJS: OAuth2WebJS__default.default.init(
              genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, normalisedConfig),
                {
                  override: {
                    functions: function(originalImpl, builder) {
                      var functions = getFunctionOverrides(normalisedConfig.onHandleEvent);
                      builder.override(functions);
                      builder.override(normalisedConfig.override.functions);
                      return originalImpl;
                    }
                  }
                }
              )
            )
          };
        };
        OAuth2Provider2.getInstanceOrThrow = function() {
          if (OAuth2Provider2.instance === void 0) {
            var error = "No instance of OAuth2Provider found. Make sure to call the OAuth2Provider.init method.See https://supertokens.io/docs/oauth2/quick-setup/frontend";
            if (typeof window === "undefined") {
              error = error + genericComponentOverrideContext.SSR_ERROR;
            }
            throw Error(error);
          }
          return OAuth2Provider2.instance;
        };
        OAuth2Provider2.getInstance = function() {
          return OAuth2Provider2.instance;
        };
        OAuth2Provider2.prototype.getDefaultRedirectionURL = function(ctx) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              if (ctx.action === "SUCCESS_OAUTH2" || ctx.action === "CONTINUE_OAUTH2_AFTER_REFRESH" || ctx.action === "POST_OAUTH2_LOGOUT_REDIRECT") {
                return [2, ctx.frontendRedirectTo];
              } else {
                throw new Error(
                  "Should never come here: unknown action in OAuth2Provider.getDefaultRedirectionURL"
                );
              }
            });
          });
        };
        OAuth2Provider2.reset = function() {
          if (!genericComponentOverrideContext.isTest()) {
            return;
          }
          OAuth2Provider2.instance = void 0;
          return;
        };
        OAuth2Provider2.RECIPE_ID = "oauth2provider";
        return OAuth2Provider2;
      }(index.RecipeModule)
    );
    exports.OAuth2Provider = OAuth2Provider;
  }
});

// node_modules/supertokens-auth-react/lib/build/multifactorauth-shared.js
var require_multifactorauth_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/multifactorauth-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var WebJSSessionRecipe = require_session2();
    var recipe = require_oauth2provider_shared();
    var index = require_recipeModule_shared();
    var utils = require_utils5();
    var windowHandler = require_windowHandler3();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var WebJSSessionRecipe__default = _interopDefault(WebJSSessionRecipe);
    function normaliseSessionConfig(config) {
      var _a, _b, _c;
      if (config === void 0) {
        config = {};
      }
      var accessDeniedScreenStyle = (_b = (_a = config.accessDeniedScreen) === null || _a === void 0 ? void 0 : _a.style) !== null && _b !== void 0 ? _b : "";
      var accessDeniedScreen = {
        style: accessDeniedScreenStyle
      };
      var override = genericComponentOverrideContext.__assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign(
          {},
          genericComponentOverrideContext.normaliseRecipeModuleConfig(config)
        ),
        {
          // TODO: ideally we'd get the default (or normalized) value from supertokens-website
          invalidClaimStatusCode: (_c = config.invalidClaimStatusCode) !== null && _c !== void 0 ? _c : 403,
          accessDeniedScreen,
          override
        }
      );
    }
    var getFailureRedirectionInfo = function(_a) {
      var invalidClaims = _a.invalidClaims, overrideGlobalClaimValidators = _a.overrideGlobalClaimValidators, userContext = _a.userContext;
      return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
        var globalValidators, failedClaim, _loop_1, _i, globalValidators_1, validator, state_1;
        return genericComponentOverrideContext.__generator(this, function(_b) {
          switch (_b.label) {
            case 0:
              globalValidators = utils.getGlobalClaimValidators({
                overrideGlobalClaimValidators,
                userContext
              });
              failedClaim = void 0;
              _loop_1 = function(validator2) {
                var claim, failureCallback, redirectPath;
                return genericComponentOverrideContext.__generator(this, function(_c) {
                  switch (_c.label) {
                    case 0:
                      claim = invalidClaims.find(function(c) {
                        return c.id === validator2.id;
                      });
                      if (!(claim !== void 0)) return [3, 2];
                      failureCallback = validator2.onFailureRedirection;
                      if (!failureCallback) return [3, 2];
                      return [
                        4,
                        failureCallback({ reason: claim.reason, userContext })
                      ];
                    case 1:
                      redirectPath = _c.sent();
                      if (redirectPath !== void 0) {
                        return [
                          2,
                          {
                            value: {
                              redirectPath,
                              failedClaim: claim
                            }
                          }
                        ];
                      }
                      _c.label = 2;
                    case 2:
                      if (validator2.showAccessDeniedOnFailure !== false && failedClaim === void 0) {
                        failedClaim = claim;
                      }
                      return [
                        2
                        /*return*/
                      ];
                  }
                });
              };
              _i = 0, globalValidators_1 = globalValidators;
              _b.label = 1;
            case 1:
              if (!(_i < globalValidators_1.length)) return [3, 4];
              validator = globalValidators_1[_i];
              return [5, _loop_1(validator)];
            case 2:
              state_1 = _b.sent();
              if (typeof state_1 === "object") return [2, state_1.value];
              _b.label = 3;
            case 3:
              _i++;
              return [3, 1];
            case 4:
              return [
                2,
                {
                  redirectPath: void 0,
                  failedClaim
                }
              ];
          }
        });
      });
    };
    function validateAndCompareOnFailureRedirectionURLToCurrent(redirectURL) {
      var currentUrl = windowHandler.WindowHandlerReference.getReferenceOrThrow().windowHandler.location.getHref();
      var fullRedirectURL;
      try {
        new URL(redirectURL);
        fullRedirectURL = redirectURL;
      } catch (_a) {
        if (!redirectURL.startsWith("/")) {
          throw new Error("onFailureRedirectionURL returned a relative url: ".concat(redirectURL));
        }
        var appInfo = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().appInfo;
        fullRedirectURL = "".concat(appInfo.websiteDomain.getAsStringDangerous()).concat(redirectURL);
      }
      return currentUrl === fullRedirectURL;
    }
    var Session = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(Session2, _super);
        function Session2(config, webJSRecipe) {
          if (webJSRecipe === void 0) {
            webJSRecipe = WebJSSessionRecipe__default.default;
          }
          var _this = _super.call(this, config) || this;
          _this.webJSRecipe = webJSRecipe;
          _this.recipeID = Session2.RECIPE_ID;
          _this.eventListeners = /* @__PURE__ */ new Set();
          _this.getUserId = function(input) {
            return _this.webJSRecipe.getUserId(input);
          };
          _this.getAccessToken = function(input) {
            return _this.webJSRecipe.getAccessToken(input);
          };
          _this.getClaimValue = function(input) {
            return _this.webJSRecipe.getClaimValue(input);
          };
          _this.getAccessTokenPayloadSecurely = function(input) {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              return genericComponentOverrideContext.__generator(this, function(_a) {
                return [2, this.webJSRecipe.getAccessTokenPayloadSecurely(input)];
              });
            });
          };
          _this.doesSessionExist = function(input) {
            return _this.webJSRecipe.doesSessionExist(input);
          };
          _this.signOut = function(input) {
            return _this.webJSRecipe.signOut(input);
          };
          _this.attemptRefreshingSession = function() {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              return genericComponentOverrideContext.__generator(this, function(_a) {
                return [2, this.webJSRecipe.attemptRefreshingSession()];
              });
            });
          };
          _this.validateClaims = function(input) {
            return _this.webJSRecipe.validateClaims(input);
          };
          _this.getInvalidClaimsFromResponse = function(input) {
            return _this.webJSRecipe.getInvalidClaimsFromResponse(input);
          };
          _this.addEventListener = function(listener) {
            _this.eventListeners.add(listener);
            return function() {
              return _this.eventListeners.delete(listener);
            };
          };
          _this.validateGlobalClaimsAndHandleSuccessRedirection = function(successRedirectContext, fallbackRecipeId, redirectToPath, userContext, navigate) {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              var invalidClaims, jsonContext, failureRedirectInfo, successContextStr, storedContext;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    userContext = genericComponentOverrideContext.getNormalisedUserContext(userContext);
                    return [4, this.doesSessionExist({ userContext })];
                  case 1:
                    if (!_a.sent()) {
                      return [
                        2,
                        genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
                          navigate,
                          redirectBack: false,
                          userContext
                        })
                      ];
                    }
                    return [4, this.validateClaims({ userContext })];
                  case 2:
                    invalidClaims = _a.sent();
                    if (!(invalidClaims.length > 0)) return [3, 6];
                    if (!(successRedirectContext !== void 0)) return [3, 4];
                    jsonContext = JSON.stringify({
                      successRedirectContext,
                      redirectToPath
                    });
                    return [
                      4,
                      genericComponentOverrideContext.setLocalStorage(
                        "supertokens-success-redirection-context",
                        jsonContext
                      )
                    ];
                  case 3:
                    _a.sent();
                    _a.label = 4;
                  case 4:
                    return [
                      4,
                      getFailureRedirectionInfo({
                        invalidClaims,
                        userContext
                      })
                    ];
                  case 5:
                    failureRedirectInfo = _a.sent();
                    if (failureRedirectInfo.redirectPath !== void 0) {
                      if (validateAndCompareOnFailureRedirectionURLToCurrent(failureRedirectInfo.redirectPath)) {
                        throw new Error(
                          "onFailureRedirectionURL returned the current URL (".concat(
                            failureRedirectInfo.redirectPath,
                            ") during success redirection. This indicates that the user is in a stuck state."
                          )
                        );
                      }
                      return [
                        2,
                        genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToUrl(
                          failureRedirectInfo.redirectPath,
                          navigate
                        )
                      ];
                    }
                    _a.label = 6;
                  case 6:
                    if (!(successRedirectContext === void 0)) return [3, 13];
                    return [
                      4,
                      genericComponentOverrideContext.getLocalStorage(
                        "supertokens-success-redirection-context"
                      )
                    ];
                  case 7:
                    successContextStr = _a.sent();
                    if (!(successContextStr !== null)) return [3, 12];
                    _a.label = 8;
                  case 8:
                    _a.trys.push([8, , 9, 11]);
                    storedContext = JSON.parse(successContextStr);
                    successRedirectContext = storedContext.successRedirectContext;
                    if (redirectToPath === void 0) {
                      redirectToPath = storedContext.redirectToPath;
                    }
                    return [3, 11];
                  case 9:
                    return [
                      4,
                      genericComponentOverrideContext.removeFromLocalStorage(
                        "supertokens-success-redirection-context"
                      )
                    ];
                  case 10:
                    _a.sent();
                    return [
                      7
                      /*endfinally*/
                    ];
                  case 11:
                    return [3, 13];
                  case 12:
                    successRedirectContext = {
                      recipeId: fallbackRecipeId,
                      action: "SUCCESS",
                      createdNewUser: false,
                      isNewRecipeUser: false,
                      newSessionCreated: false,
                      tenantIdFromQueryParams: genericComponentOverrideContext.getTenantIdFromQueryParams()
                    };
                    _a.label = 13;
                  case 13:
                    if (successRedirectContext === void 0) {
                      throw new Error("This should never happen: successRedirectContext undefined ");
                    }
                    if (successRedirectContext.action === "SUCCESS_OAUTH2") {
                      return [
                        2,
                        recipe.OAuth2Provider.getInstanceOrThrow().redirect(
                          successRedirectContext,
                          navigate,
                          {},
                          userContext
                        )
                      ];
                    }
                    if (successRedirectContext.action === "SUCCESS" && redirectToPath !== void 0) {
                      successRedirectContext.redirectToPath = redirectToPath;
                    }
                    return [
                      2,
                      genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirect(
                        successRedirectContext,
                        navigate,
                        {},
                        userContext
                      )
                    ];
                }
              });
            });
          };
          _this.getDefaultRedirectionURL = function() {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              return genericComponentOverrideContext.__generator(this, function(_a) {
                return [2, "/"];
              });
            });
          };
          _this.notifyListeners = function(event) {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              var sessionContext;
              return genericComponentOverrideContext.__generator(this, function(_a) {
                switch (_a.label) {
                  case 0:
                    return [4, this.getSessionContext(event)];
                  case 1:
                    sessionContext = _a.sent();
                    Array.from(this.eventListeners).forEach(function(listener) {
                      return listener(
                        genericComponentOverrideContext.__assign({ sessionContext }, event)
                      );
                    });
                    return [
                      2
                      /*return*/
                    ];
                }
              });
            });
          };
          return _this;
        }
        Session2.prototype.getSessionContext = function(_a) {
          var action = _a.action, userContext = _a.userContext;
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            var _b, userId, accessTokenPayload;
            return genericComponentOverrideContext.__generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  if (!(action === "SESSION_CREATED" || action === "REFRESH_SESSION" || action === "API_INVALID_CLAIM" || action === "ACCESS_TOKEN_PAYLOAD_UPDATED"))
                    return [3, 2];
                  return [
                    4,
                    Promise.all([
                      this.getUserId({
                        userContext
                      }),
                      this.getAccessTokenPayloadSecurely({
                        userContext
                      })
                    ])
                  ];
                case 1:
                  _b = _c.sent(), userId = _b[0], accessTokenPayload = _b[1];
                  return [
                    2,
                    {
                      doesSessionExist: true,
                      accessTokenPayload,
                      userId
                    }
                  ];
                case 2:
                  if (action === "SIGN_OUT" || action === "UNAUTHORISED") {
                    return [
                      2,
                      {
                        doesSessionExist: false,
                        accessTokenPayload: {},
                        userId: ""
                      }
                    ];
                  }
                  throw new Error("Unhandled recipe event: ".concat(action));
              }
            });
          });
        };
        Session2.addAxiosInterceptors = function(axiosInstance, userContext) {
          return WebJSSessionRecipe__default.default.addAxiosInterceptors(axiosInstance, userContext);
        };
        Session2.init = function(config) {
          var _this = this;
          var normalisedConfig = normaliseSessionConfig(config);
          return {
            recipeID: Session2.RECIPE_ID,
            authReact: function(appInfo) {
              Session2.instance = new Session2(
                genericComponentOverrideContext.__assign(
                  genericComponentOverrideContext.__assign({}, normalisedConfig),
                  { appInfo, recipeId: Session2.RECIPE_ID }
                )
              );
              return Session2.instance;
            },
            webJS: WebJSSessionRecipe__default.default.init(
              genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, normalisedConfig),
                {
                  onHandleEvent: function(event) {
                    if (normalisedConfig.onHandleEvent !== void 0) {
                      normalisedConfig.onHandleEvent(event);
                    }
                    void Session2.getInstanceOrThrow().notifyListeners(event);
                  },
                  preAPIHook: function(context) {
                    return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
                      var response;
                      return genericComponentOverrideContext.__generator(this, function(_a) {
                        response = genericComponentOverrideContext.__assign(
                          genericComponentOverrideContext.__assign({}, context),
                          {
                            requestInit: genericComponentOverrideContext.__assign(
                              genericComponentOverrideContext.__assign({}, context.requestInit),
                              {
                                headers: genericComponentOverrideContext.__assign(
                                  genericComponentOverrideContext.__assign(
                                    {},
                                    context.requestInit.headers
                                  ),
                                  { rid: Session2.RECIPE_ID }
                                )
                              }
                            )
                          }
                        );
                        if (normalisedConfig.preAPIHook === void 0) {
                          return [2, response];
                        } else {
                          return [2, normalisedConfig.preAPIHook(context)];
                        }
                      });
                    });
                  }
                }
              )
            )
          };
        };
        Session2.getInstanceOrThrow = function() {
          if (Session2.instance === void 0) {
            throw Error(
              "No instance of Session found. Make sure to call the Session.init method. See https://supertokens.io/docs/emailpassword/quick-setup/frontend"
            );
          }
          return Session2.instance;
        };
        Session2.getInstance = function() {
          return Session2.instance;
        };
        Session2.reset = function() {
          if (!genericComponentOverrideContext.isTest()) {
            return;
          }
          Session2.instance = void 0;
          return;
        };
        Session2.RECIPE_ID = "session";
        return Session2;
      }(index.RecipeModule)
    );
    var FactorIds = {
      EMAILPASSWORD: "emailpassword",
      OTP_EMAIL: "otp-email",
      OTP_PHONE: "otp-phone",
      LINK_EMAIL: "link-email",
      LINK_PHONE: "link-phone",
      THIRDPARTY: "thirdparty",
      TOTP: "totp",
      WEBAUTHN: "webauthn"
    };
    exports.FactorIds = FactorIds;
    exports.Session = Session;
    exports.getFailureRedirectionInfo = getFailureRedirectionInfo;
    exports.validateAndCompareOnFailureRedirectionURLToCurrent = validateAndCompareOnFailureRedirectionURLToCurrent;
  }
});

// node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js
var require_authRecipe_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/authRecipe-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    function normaliseAuthRecipe(config) {
      return genericComponentOverrideContext.normaliseRecipeModuleConfig(config);
    }
    function selectComponentsToCoverAllFirstFactors(comps, firstFactorIds) {
      if (firstFactorIds.length === 0) {
        return void 0;
      }
      var _loop_1 = function(i2) {
        var c = comps[i2];
        var factorIdsLeft = firstFactorIds.filter(function(id) {
          return !c.factorIds.includes(id);
        });
        if (factorIdsLeft.length === 0) {
          return { value: [c] };
        }
        var componentsLeft = comps.filter(function(c2) {
          return c2.factorIds.every(function(id) {
            return factorIdsLeft.includes(id);
          });
        });
        if (componentsLeft.length !== 0) {
          var nextComps = selectComponentsToCoverAllFirstFactors(componentsLeft, factorIdsLeft);
          if (nextComps !== void 0) {
            return { value: genericComponentOverrideContext.__spreadArray([c], nextComps, true) };
          }
        }
      };
      for (var i = 0; i < comps.length; ++i) {
        var state_1 = _loop_1(i);
        if (typeof state_1 === "object") return state_1.value;
      }
      return void 0;
    }
    exports.normaliseAuthRecipe = normaliseAuthRecipe;
    exports.selectComponentsToCoverAllFirstFactors = selectComponentsToCoverAllFirstFactors;
  }
});

export {
  require_postSuperTokensInitCallbacks,
  require_utils2 as require_utils,
  require_utils3 as require_utils2,
  require_error3 as require_error,
  require_querier,
  require_authRecipe,
  require_recipe2 as require_recipe,
  require_dateProvider2 as require_dateProvider,
  require_supertokens_web_js,
  require_cookieHandler4 as require_cookieHandler,
  require_postSuperTokensInitCallbacks2,
  require_windowHandler3 as require_windowHandler,
  require_multitenancy2 as require_multitenancy,
  require_utils5 as require_utils3,
  require_normalisedURLDomain2 as require_normalisedURLDomain,
  require_normalisedURLPath2 as require_normalisedURLPath,
  require_genericComponentOverrideContext,
  require_recipeModule_shared,
  require_oauth2provider2 as require_oauth2provider,
  require_oauth2provider_shared,
  require_multifactorauth_shared,
  require_authRecipe_shared
};
//# sourceMappingURL=chunk-CDLFNTOO.js.map
