import {
  require_session as require_session3,
  require_session_shared
} from "./chunk-BE4MTO2C.js";
import {
  require_authRecipe_shared2,
  require_emailpassword,
  require_emailpassword_shared2,
  require_emailpassword_shared3,
  require_emailpassword_shared4,
  require_emailpassword_shared5
} from "./chunk-7F2ZPGBK.js";
import {
  require_index2,
  require_multifactorauth,
  require_multifactorauth_shared2,
  require_multitenancy_shared,
  require_sessionClaimValidatorStore,
  require_sessionClaimValidatorStore2,
  require_translationContext
} from "./chunk-2LZGK6WB.js";
import {
  require_authRecipe_shared,
  require_cookieHandler,
  require_dateProvider,
  require_error,
  require_genericComponentOverrideContext,
  require_multifactorauth_shared,
  require_multitenancy,
  require_normalisedURLDomain,
  require_normalisedURLPath as require_normalisedURLPath2,
  require_oauth2provider,
  require_oauth2provider_shared,
  require_postSuperTokensInitCallbacks,
  require_postSuperTokensInitCallbacks2,
  require_querier,
  require_recipeModule_shared,
  require_supertokens_web_js,
  require_utils as require_utils2,
  require_utils3,
  require_windowHandler
} from "./chunk-CDLFNTOO.js";
import {
  require_build,
  require_constants,
  require_normalisedURLPath,
  require_session,
  require_session2,
  require_utils
} from "./chunk-VTGDAHUI.js";
import {
  require_react_dom
} from "./chunk-HE4GKDYE.js";
import {
  require_jsx_runtime
} from "./chunk-MJNCUEZK.js";
import {
  require_react
} from "./chunk-UGC3UZ7L.js";
import {
  __commonJS
} from "./chunk-G3PMV62Z.js";

// node_modules/supertokens-auth-react/lib/build/multifactorauth-shared3.js
var require_multifactorauth_shared3 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/multifactorauth-shared3.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var _a = genericComponentOverrideContext.createGenericComponentsOverrideContext();
    var useContext = _a[0];
    var Provider = _a[1];
    exports.Provider = Provider;
    exports.useContext = useContext;
  }
});

// node_modules/supertokens-auth-react/lib/build/multifactorauth.js
var require_multifactorauth2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/multifactorauth.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var componentOverrideContext = require_multifactorauth_shared3();
    var recipe = require_multifactorauth_shared2();
    var types = require_multifactorauth_shared();
    require_supertokens_web_js();
    require_cookieHandler();
    require_postSuperTokensInitCallbacks2();
    require_windowHandler();
    require_multitenancy();
    require_utils3();
    require_react();
    require_error();
    require_normalisedURLDomain();
    require_normalisedURLPath2();
    require_jsx_runtime();
    require_multifactorauth();
    require_sessionClaimValidatorStore2();
    require_recipeModule_shared();
    require_session2();
    require_oauth2provider_shared();
    require_oauth2provider();
    var Wrapper = (
      /** @class */
      function() {
        function Wrapper2() {
        }
        Wrapper2.init = function(config) {
          return recipe.MultiFactorAuth.init(config);
        };
        Wrapper2.resyncSessionAndFetchMFAInfo = function(input) {
          return recipe.MultiFactorAuth.getInstanceOrThrow().webJSRecipe.resyncSessionAndFetchMFAInfo(
            genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
              userContext: genericComponentOverrideContext.getNormalisedUserContext(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        Wrapper2.redirectToFactor = function(input) {
          var _a, _b, _c;
          return recipe.MultiFactorAuth.getInstanceOrThrow().redirectToFactor({
            factorId: input.factorId,
            forceSetup: (_a = input.forceSetup) !== null && _a !== void 0 ? _a : false,
            redirectBack: (_b = input.redirectBack) !== null && _b !== void 0 ? _b : true,
            stepUp: (_c = input.stepUp) !== null && _c !== void 0 ? _c : false,
            navigate: input.navigate,
            userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext)
          });
        };
        Wrapper2.redirectToFactorChooser = function(input) {
          var _a, _b, _c;
          return recipe.MultiFactorAuth.getInstanceOrThrow().redirectToFactorChooser({
            nextFactorOptions: (_a = input.nextFactorOptions) !== null && _a !== void 0 ? _a : [],
            redirectBack: (_b = input.redirectBack) !== null && _b !== void 0 ? _b : true,
            stepUp: (_c = input.stepUp) !== null && _c !== void 0 ? _c : false,
            navigate: input.navigate,
            userContext: genericComponentOverrideContext.getNormalisedUserContext(input.userContext)
          });
        };
        Wrapper2.MultiFactorAuthClaim = recipe.MultiFactorAuth.MultiFactorAuthClaim;
        Wrapper2.FactorIds = types.FactorIds;
        Wrapper2.ComponentsOverrideProvider = componentOverrideContext.Provider;
        return Wrapper2;
      }()
    );
    var init = Wrapper.init;
    var resyncSessionAndFetchMFAInfo = Wrapper.resyncSessionAndFetchMFAInfo;
    var redirectToFactor = Wrapper.redirectToFactor;
    var redirectToFactorChooser = Wrapper.redirectToFactorChooser;
    var MultiFactorAuthComponentsOverrideProvider = Wrapper.ComponentsOverrideProvider;
    var MultiFactorAuthClaim = recipe.MultiFactorAuth.MultiFactorAuthClaim;
    exports.FactorIds = types.FactorIds;
    exports.MultiFactorAuthClaim = MultiFactorAuthClaim;
    exports.MultiFactorAuthComponentsOverrideProvider = MultiFactorAuthComponentsOverrideProvider;
    exports.default = Wrapper;
    exports.init = init;
    exports.redirectToFactor = redirectToFactor;
    exports.redirectToFactorChooser = redirectToFactorChooser;
    exports.resyncSessionAndFetchMFAInfo = resyncSessionAndFetchMFAInfo;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailverification-shared2.js
var require_emailverification_shared2 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailverification-shared2.js"(exports) {
    "use strict";
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var uiEntry = require_index2();
    var styles = '/* Copyright (c) 2021, VRAI Labs and/or its affiliates. All rights reserved.\n *\n * This software is licensed under the Apache License, Version 2.0 (the\n * "License") as published by the Apache Software Foundation.\n *\n * You may not use this file except in compliance with the License. You may\n * obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations\n * under the License.\n */\n\n[data-supertokens~="container"] {\n    --palette-background: 255, 255, 255;\n    --palette-inputBackground: 250, 250, 250;\n    --palette-inputBorder: 224, 224, 224;\n    --palette-primary: 28, 34, 42;\n    --palette-primaryBorder: 45, 54, 68;\n    --palette-success: 65, 167, 0;\n    --palette-successBackground: 217, 255, 191;\n    --palette-error: 255, 23, 23;\n    --palette-errorBackground: 255, 241, 235;\n    --palette-textTitle: 0, 0, 0;\n    --palette-textLabel: 0, 0, 0;\n    --palette-textInput: 0, 0, 0;\n    --palette-textPrimary: 128, 128, 128;\n    --palette-textLink: 0, 122, 255;\n    --palette-buttonText: 255, 255, 255;\n    --palette-textGray: 54, 54, 54;\n    --palette-superTokensBrandingBackground: 242, 245, 246;\n    --palette-superTokensBrandingText: 173, 189, 196;\n    --palette-buttonGreyedOut: 221, 221, 221;\n    --palette-caution: 124, 96, 62;\n    --palette-errorDark: 207, 54, 68;\n\n    --font-size-0: 12px;\n    --font-size-1: 14px;\n    --font-size-2: 16px;\n    --font-size-3: 19px;\n    --font-size-4: 24px;\n    --font-size-5: 28px;\n}\n\n/*\n * Default styles.\n */\n\n@keyframes slideTop {\n    0% {\n        transform: translateY(-5px);\n    }\n    100% {\n        transform: translateY(0px);\n    }\n}\n\n@keyframes swing-in-top-fwd {\n    0% {\n        transform: rotateX(-100deg);\n        transform-origin: top;\n        opacity: 0;\n    }\n    100% {\n        transform: rotateX(0deg);\n        transform-origin: top;\n        opacity: 1;\n    }\n}\n\n[data-supertokens~="container"] {\n    font-family: "Arial", sans-serif;\n    margin: 12px auto;\n    margin-top: 26px;\n    margin-bottom: 26px;\n    width: 420px;\n    text-align: center;\n    border-radius: 8px;\n    box-shadow: 1px 1px 10px rgba(0, 0, 0, 0.16);\n    background-color: rgb(var(--palette-background));\n}\n\n@media (max-width: 440px) {\n    [data-supertokens~="container"] {\n        width: 95vw;\n    }\n}\n\n[data-supertokens~="row"] {\n    margin: 0 auto;\n    width: 76%;\n    padding-top: 30px;\n    padding-bottom: 10px;\n}\n\n[data-supertokens~="superTokensBranding"] {\n    display: block;\n    margin: 10px auto 0;\n    background: rgb(var(--palette-superTokensBrandingBackground));\n    color: rgb(var(--palette-superTokensBrandingText));\n    text-decoration: none;\n    width: -webkit-fit-content;\n    width: fit-content;\n    border-radius: 6px 6px 0 0;\n    padding: 4px 9px;\n    font-weight: 400;\n    font-size: var(--font-size-0);\n    letter-spacing: 0.4px;\n}\n\n[data-supertokens~="generalError"] {\n    background: rgb(var(--palette-errorBackground));\n    padding-top: 10px;\n    padding-bottom: 10px;\n    margin-bottom: 10px;\n    margin-top: 24px;\n    padding-left: 18px;\n    padding-right: 18px;\n    letter-spacing: 0.2px;\n    font-size: var(--font-size-1);\n    border-radius: 8px;\n    color: rgb(var(--palette-error));\n    animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    word-wrap: break-word;\n}\n\n[data-supertokens~="headerTitle"] {\n    font-size: var(--font-size-4);\n    line-height: 27.6px;\n    letter-spacing: 0.58px;\n    font-weight: 700;\n    margin-bottom: 20px;\n    color: rgb(var(--palette-textTitle));\n}\n\n[data-supertokens~="headerSubtitle"] {\n    font-weight: 400;\n    color: rgb(var(--palette-textGray));\n    margin-bottom: 21px;\n}\n\n[data-supertokens~="headerSubtitle"][data-supertokens~="secondaryText"] {\n    color: rgb(var(--palette-textGray));\n    font-weight: 400;\n}\n\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] {\n    max-width: 300px;\n    margin-top: 10px;\n}\n\n[data-supertokens~="privacyPolicyAndTermsAndConditions"] a {\n    line-height: 21px;\n}\n\n/* TODO: split the link style into separate things*/\n\n/* We add this before primary and secondary text, because if they are applied to the same element the other ones take priority */\n\n[data-supertokens~="link"] {\n    padding-left: 3px;\n    padding-right: 3px;\n    color: rgb(var(--palette-textLink));\n    font-size: var(--font-size-1);\n    cursor: pointer;\n    letter-spacing: 0.16px;\n    line-height: 26px;\n}\n\n[data-supertokens~="primaryText"] {\n    font-size: var(--font-size-2);\n    font-weight: 400;\n    letter-spacing: 0.4px;\n    line-height: 21px;\n    color: rgb(var(--palette-textLabel));\n}\n\n[data-supertokens~="secondaryText"] {\n    font-size: var(--font-size-1);\n    font-weight: 400;\n    letter-spacing: 0.4px;\n    color: rgb(var(--palette-textPrimary));\n}\n\n[data-supertokens~="secondaryText"] strong {\n    font-weight: 600;\n}\n\n[data-supertokens~="divider"] {\n    margin-top: 1.5em;\n    margin-bottom: 1.5em;\n    border-bottom: 0.3px solid #dddddd;\n    align-items: center;\n    padding-bottom: 5px;\n    flex: 3 3;\n}\n\n[data-supertokens~="headerTinyTitle"] {\n    margin-top: 24px;\n    font-size: var(--font-size-5);\n    letter-spacing: 1.1px;\n    font-weight: 700;\n    line-height: 28px;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithArrow"]:hover {\n    position: relative;\n    left: 2px;\n    word-spacing: 4px;\n}\n\n[data-supertokens~="generalSuccess"] {\n    color: rgb(var(--palette-success));\n    font-size: var(--font-size-1);\n    background: rgb(var(--palette-successBackground));\n    animation: swing-in-top-fwd 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) both;\n    padding: 9px 15px 9px 15px;\n    border-radius: 6px;\n    display: inline-block;\n}\n\n[data-supertokens~="spinner"] {\n    width: 80px;\n    height: auto;\n    padding-top: 20px;\n    padding-bottom: 40px;\n    margin: 0 auto;\n}\n\n[data-supertokens~="error"] {\n    color: rgb(var(--palette-error));\n}\n\n[data-supertokens~="linkButton"] {\n    font-family: "Arial", sans-serif;\n    background-color: transparent;\n    border: 0;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"] {\n    color: rgb(var(--palette-textGray));\n    font-weight: 400;\n    margin-top: 10px;\n    margin-bottom: 40px;\n    cursor: pointer;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    margin-right: 0.3em;\n}\n\n[data-supertokens~="secondaryLinkWithLeftArrow"]:hover svg {\n    position: relative;\n    left: -4px;\n}\n\n[data-supertokens~="button"] {\n    font-family: "Arial", sans-serif;\n    background-color: rgb(var(--palette-primary));\n    color: rgb(var(--palette-buttonText));\n    width: 100%;\n    height: 34px;\n    font-weight: 600;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: 6px;\n    border-color: rgb(var(--palette-primaryBorder));\n    background-position: center;\n    transition: all 0.4s;\n    background-size: 12000%;\n    cursor: pointer;\n}\n\n[data-supertokens~="buttonGreyedOut"] {\n    background-color: rgb(var(--palette-buttonGreyedOut));\n    border-color: rgb(var(--palette-buttonGreyedOut));\n}\n\n[data-supertokens~="buttonWithIcon"] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 8px;\n}\n\n[data-supertokens~="button"]:disabled {\n    border: none;\n    cursor: no-drop;\n}\n\n[data-supertokens~="button"]:active {\n    outline: none;\n    transition: all 0s;\n    background-size: 100%;\n    filter: brightness(0.85);\n}\n\n[data-supertokens~="button"]:focus {\n    outline: none;\n}\n\n[data-supertokens~="backButtonCommon"] {\n    width: 16px;\n    height: 13px;\n}\n\n[data-supertokens~="backButton"] {\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n    padding: 0px;\n}\n\n[data-supertokens~="backButtonPlaceholder"] {\n    display: block;\n}\n\n[data-supertokens~="delayedRender"] {\n    animation-duration: 0.1s;\n    animation-name: animate-fade;\n    animation-delay: 0.2s;\n    animation-fill-mode: backwards;\n}\n\n@keyframes animate-fade {\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n}\n\n[data-supertokens~="footerLinkGroupVert"] {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    gap: 24px;\n}\n\n[data-supertokens~="footerLinkGroupVert"] > div {\n    cursor: pointer;\n    margin: 0;\n}\n\n[data-supertokens~="footerLinkGroupVert"] [data-supertokens~="secondaryText"] {\n    font-weight: 400;\n}\n\n[data-supertokens~="footerLinkGroupVert"] [data-supertokens~="secondaryLinkWithLeftArrow"] {\n    font-weight: 400;\n    position: relative;\n    left: -6px; /* half the width of the left arrow */\n}\n\n@media (max-width: 360px) {\n    [data-supertokens~="footerLinkGroupVert"] {\n        flex-direction: column;\n    }\n    [data-supertokens~="footerLinkGroupVert"] > div {\n        margin: 0 auto;\n    }\n}\n\n[data-supertokens~="footerLinkGroupVert"] div:only-child {\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 14px;\n}\n\n[data-supertokens~="withBackButton"] {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n[data-supertokens~="dividerWithOr"] {\n    padding-top: 5px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    color: rgb(var(--palette-textPrimary));\n}\n\n[data-supertokens~="dividerText"] {\n    flex: 1 1;\n    font-weight: 400;\n    font-size: var(--font-size-1);\n}\n\n[data-supertokens~="formLabelWithLinkWrapper"] {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n[data-supertokens~="formLabelLinkBtn"] {\n    width: auto;\n    margin-top: 0;\n    line-height: 24px;\n    font-size: var(--font-size-0);\n}\n\n[data-supertokens~="formLabelLinkBtn"]:hover {\n    text-decoration: underline;\n}\n\n[data-supertokens~="formLabelLinkBtn"]:disabled {\n    color: rgb(var(--palette-textPrimary));\n    cursor: default;\n    text-decoration: none;\n}\n\n[data-supertokens~="authComponentList"] {\n    padding-bottom: 20px;\n}\n\n[data-supertokens~="authPageTitleOAuthClient"] {\n    color: rgb(var(--palette-textGray));\n    font-size: var(--font-size-1);\n    font-weight: 400;\n    margin: 10px 0 25px;\n}\n\n[data-supertokens~="authPageTitleOAuthClientUrl"] {\n    text-decoration: none;\n}\n\n[data-supertokens~="authPageTitleOAuthClientLogo"] {\n    width: 44px;\n    height: 44px;\n    margin-bottom: 10px;\n}\n\n[data-supertokens~="authPageTitleOAuthClient"] [data-supertokens~="authPageTitleOAuthClientName"] {\n    color: rgb(var(--palette-textTitle));\n}\n\n[data-supertokens~="buttonWithArrow"] {\n    border-radius: 6px;\n    border: 1px solid #d0d5dd;\n    width: 100%;\n    color: rgb(var(--palette-textGray));\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    margin: 24px 0;\n    min-height: 48px;\n    cursor: pointer;\n}\n\n[data-supertokens~="buttonWithArrow"]:hover {\n    background-color: rgb(var(--palette-inputBackground));\n}\n\n[data-supertokens~="buttonWithArrow"] [data-supertokens~="secondaryText"] {\n    font-weight: 700;\n    font-size: var(--font-size-2);\n    color: rgb(var(--palette-textGray));\n    margin: 0;\n}\n\n[data-supertokens~="buttonWithArrow"]:hover [data-supertokens~="secondaryLinkWithRightArrow"] ~ svg {\n    position: relative;\n    left: 2px;\n}\n\n[data-supertokens~="buttonWithArrow"]:hover [data-supertokens~="secondaryLinkWithLeftArrow"] svg {\n    position: relative;\n    left: -2px;\n}\n\n[data-supertokens~="buttonWithArrow"] [data-supertokens~="secondaryLinkWithLeftArrow"] {\n    display: flex;\n    align-items: center;\n}\n\n[data-supertokens~="inputContainer"] {\n    margin-top: 6px;\n}\n\n[data-supertokens~="inputWrapper"] {\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    background-color: rgb(var(--palette-inputBackground));\n    height: 34px;\n    border-radius: 6px;\n    border: 1px solid rgb(var(--palette-inputBorder));\n}\n\n[data-supertokens~="inputWrapper"][focus-within] {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputWrapper"]:focus-within {\n    background-color: rgba(var(--palette-inputBackground), 0.25);\n    border: 1px solid rgb(var(--palette-primary));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-primary), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"][focus-within] {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="inputError"]:focus-within {\n    border: 1px solid rgb(var(--palette-error));\n    box-shadow: 0 0 0 0.2rem rgba(var(--palette-error), 0.25);\n    outline: none;\n}\n\n[data-supertokens~="input"] {\n    box-sizing: border-box;\n    padding-left: 15px;\n    filter: none;\n    color: rgb(var(--palette-textInput));\n    background-color: transparent;\n    border-radius: 6px;\n    font-size: var(--font-size-1);\n    border: none;\n    padding-right: 25px;\n    letter-spacing: 1.2px;\n    flex: 9 1 75%;\n    width: 75%;\n    height: 32px;\n}\n\n[data-supertokens~="input"]:focus {\n    border: none;\n    outline: none;\n}\n\n[data-supertokens~="input"]:-webkit-autofill,\n[data-supertokens~="input"]:-webkit-autofill:hover,\n[data-supertokens~="input"]:-webkit-autofill:focus,\n[data-supertokens~="input"]:-webkit-autofill:active {\n    -webkit-text-fill-color: rgb(var(--palette-textInput));\n    box-shadow: 0 0 0 30px rgb(var(--palette-inputBackground)) inset;\n}\n\n[data-supertokens~="inputAdornment"] {\n    justify-content: center;\n    margin-right: 5px;\n}\n\n[data-supertokens~="showPassword"] {\n    cursor: pointer;\n}\n\n[data-supertokens~="enterEmailSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n    word-break: break-word;\n}\n\n[data-supertokens~="submitNewPasswordSuccessMessage"] {\n    margin-top: 15px;\n    margin-bottom: 15px;\n}\n\n[data-supertokens~="inputErrorMessage"] {\n    padding-top: 5px;\n    padding-bottom: 5px;\n    color: rgb(var(--palette-error));\n    line-height: 24px;\n    font-weight: 400;\n    font-size: var(--font-size-1);\n    text-align: left;\n    animation: slideTop 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\n    max-width: 330px;\n}\n\n@media (max-width: 440px) {\n    [data-supertokens~="inputErrorMessage"] {\n        max-width: 250px;\n    }\n}\n\n[data-supertokens~="inputErrorSymbol"] {\n    margin-right: 5px;\n    top: 1px;\n    position: relative;\n    left: 2px;\n}\n\n[data-supertokens~="label"] {\n    text-align: left;\n    font-weight: 700;\n    font-size: var(--font-size-0);\n    line-height: 24px;\n    color: rgb(var(--palette-textLabel));\n}\n\n[data-supertokens~="formRow"] {\n    display: flex;\n    flex-direction: column;\n    padding-top: 0px;\n    padding-bottom: 20px;\n}\n\n[data-supertokens~="formRow"][data-supertokens~="hasError"] {\n    padding-bottom: 0;\n}\n\n[data-supertokens~="formRow"]:last-child {\n    padding-bottom: 0;\n}\n\n[data-supertokens~="sendVerifyEmailIcon"] {\n    margin-top: 11px;\n}\n\n[data-supertokens~="primaryText"][data-supertokens~="sendVerifyEmailText"] {\n    text-align: center;\n    letter-spacing: 0.8px;\n    color: rgb(var(--palette-textPrimary));\n}\n\n[data-supertokens~="secondaryLinkWithArrow"] {\n    margin-top: 10px;\n    margin-bottom: 30px;\n    cursor: pointer;\n    font-weight: 700;\n}\n\n[data-supertokens~="sendVerifyEmailResend"] {\n    margin-top: 13px;\n    font-weight: 400;\n}\n\n[data-supertokens~="sendVerifyEmailResend"]:hover {\n    text-decoration: underline;\n}\n\n[data-supertokens~="noFormRow"] {\n    padding-bottom: 25px;\n}\n\n[data-supertokens~="emailVerificationButtonWrapper"] {\n    padding-top: 25px;\n    max-width: 96px;\n    margin: 0 auto;\n}\n\n[data-supertokens~="resendEmailLink"] {\n    display: inline-block;\n}\n\n[data-supertokens~="resetPasswordEmailForm"] {\n    padding-bottom: 20px;\n}\n\n[data-supertokens~="resetPasswordPasswordForm"] {\n    padding-bottom: 20px;\n}\n';
    var ThemeBase = function(_a) {
      var children = _a.children, userStyles = _a.userStyles;
      return jsxRuntime.jsxs(React.Fragment, {
        children: [children, jsxRuntime.jsxs("style", { children: [styles, userStyles.join("\n")] })]
      });
    };
    var defaultTranslationsEmailVerification = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign({}, uiEntry.defaultTranslationsCommon.en),
        {
          EMAIL_VERIFICATION_RESEND_SUCCESS: "Email resent",
          EMAIL_VERIFICATION_SEND_TITLE: "Verify your email!",
          EMAIL_VERIFICATION_SEND_DESC_START: "",
          EMAIL_VERIFICATION_SEND_DESC_STRONG: "Please click on the link",
          EMAIL_VERIFICATION_SEND_DESC_END: " in the email we just sent you to confirm your email address.",
          EMAIL_VERIFICATION_RESEND_BTN: "Resend Email",
          EMAIL_VERIFICATION_LOGOUT: "Logout ",
          EMAIL_VERIFICATION_SUCCESS: "Email verification successful!",
          EMAIL_VERIFICATION_CONTINUE_BTN: "CONTINUE",
          EMAIL_VERIFICATION_CONTINUE_LINK: "Continue",
          EMAIL_VERIFICATION_EXPIRED: "The email verification link has expired",
          EMAIL_VERIFICATION_ERROR_TITLE: "Something went wrong",
          EMAIL_VERIFICATION_ERROR_DESC: "We encountered an unexpected error. Please contact support for assistance",
          EMAIL_VERIFICATION_LINK_CLICKED_HEADER: "Verify your email address",
          EMAIL_VERIFICATION_LINK_CLICKED_DESC: "Please click on the button below to verify your email address",
          EMAIL_VERIFICATION_LINK_CLICKED_CONTINUE_BUTTON: "CONTINUE"
        }
      )
    };
    exports.ThemeBase = ThemeBase;
    exports.defaultTranslationsEmailVerification = defaultTranslationsEmailVerification;
  }
});

// node_modules/supertokens-auth-react/lib/build/arrowLeftIcon.js
var require_arrowLeftIcon = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/arrowLeftIcon.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    function ArrowLeftIcon(_a) {
      var color = _a.color;
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          { width: "6", height: "8", viewBox: "0 0 6 8", fill: "none", xmlns: "http://www.w3.org/2000/svg" },
          {
            children: jsxRuntime.jsx("path", {
              d: "M0.372871 3.24407C-0.0875903 3.64284 -0.0875899 4.35716 0.372872 4.75593L3.84535 7.76318C4.49299 8.32406 5.5 7.864 5.5 7.00725L5.5 0.992749C5.5 0.135997 4.49299 -0.324056 3.84535 0.23682L0.372871 3.24407Z",
              fill: "".concat(color)
            })
          }
        )
      );
    }
    exports.ArrowLeftIcon = ArrowLeftIcon;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared.js
var require_emailpassword_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    require_index2();
    var translationContext = require_translationContext();
    function Button(_a) {
      var type = _a.type, label = _a.label, disabled = _a.disabled, isLoading = _a.isLoading, onClick = _a.onClick, isGreyedOut = _a.isGreyedOut, icon = _a.icon;
      var t = translationContext.useTranslation();
      if (disabled === void 0) {
        disabled = false;
      }
      var dataSupertokens = "button";
      if (isGreyedOut) {
        dataSupertokens += " buttonGreyedOut";
      }
      if (icon) {
        dataSupertokens += " buttonWithIcon";
      }
      return jsxRuntime.jsxs(
        "button",
        genericComponentOverrideContext.__assign(
          { type, disabled, onClick, "data-supertokens": dataSupertokens },
          {
            children: [
              icon && jsxRuntime.jsx("div", { children: icon() }),
              jsxRuntime.jsxs("div", { children: [t(label), isLoading && "..."] })
            ]
          }
        )
      );
    }
    exports.Button = Button;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpassword-shared6.js
var require_emailpassword_shared6 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpassword-shared6.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var React = require_react();
    var constants = require_emailpassword_shared4();
    var button = require_emailpassword_shared();
    require_index2();
    var translationContext = require_translationContext();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var React__default = _interopDefault(React);
    function FormRow(_a) {
      var children = _a.children, hasError = _a.hasError;
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": ["formRow", hasError ? "hasError" : ""].join(" ") },
          { children }
        )
      );
    }
    function CheckedIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "14.862",
            height: "12.033",
            viewBox: "0 0 14.862 12.033",
            "data-supertokens": "checkedIcon"
          },
          {
            children: jsxRuntime.jsx("path", {
              fill: "rgb(var(--palette-primary))",
              d: "M12.629 49L5.06 56.572l-2.829-2.829L0 55.977l5.057 5.057.654-.651 9.152-9.152z",
              transform: "translate(0 -49)"
            })
          }
        )
      );
    }
    function ErrorIcon() {
      return jsxRuntime.jsx(
        "svg",
        genericComponentOverrideContext.__assign(
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "17",
            height: "15",
            viewBox: "0 0 17 15",
            "data-supertokens": "errorIcon"
          },
          {
            children: jsxRuntime.jsxs("g", {
              children: [
                jsxRuntime.jsx(
                  "g",
                  genericComponentOverrideContext.__assign(
                    { className: "Asdf", fill: "rgb(var(--palette-error))" },
                    {
                      children: jsxRuntime.jsx("path", {
                        d: "M13.568 14.75H3.432c-.63 0-1.195-.325-1.512-.869-.317-.544-.32-1.196-.01-1.744l5.067-8.943c.315-.556.884-.887 1.523-.887.639 0 1.208.331 1.523.887l5.067 8.943c.31.548.307 1.2-.01 1.744s-.882.869-1.512.869z",
                        transform: "translate(-824.894 -352.829) translate(824.894 352.829)"
                      })
                    }
                  )
                ),
                jsxRuntime.jsx(
                  "text",
                  genericComponentOverrideContext.__assign(
                    {
                      fill: "#fff",
                      fontSize: "10px",
                      fontWeight: "700",
                      transform: "translate(-824.894 -352.829) translate(832.014 365.198)"
                    },
                    {
                      children: jsxRuntime.jsx(
                        "tspan",
                        genericComponentOverrideContext.__assign({ x: "0", y: "0" }, { children: "!" })
                      )
                    }
                  )
                )
              ]
            })
          }
        )
      );
    }
    function ShowPasswordIcon(_a) {
      var showPassword = _a.showPassword;
      if (showPassword === true) {
        return jsxRuntime.jsx("div", {
          children: jsxRuntime.jsx(
            "svg",
            genericComponentOverrideContext.__assign(
              {
                xmlns: "http://www.w3.org/2000/svg",
                width: "18.391",
                height: "16.276",
                viewBox: "0 0 18.391 16.276",
                "data-supertokens": "showPasswordIcon show"
              },
              {
                children: jsxRuntime.jsxs("g", {
                  children: [
                    jsxRuntime.jsx("g", {
                      children: jsxRuntime.jsx("g", {
                        children: jsxRuntime.jsx("g", {
                          children: jsxRuntime.jsx("path", {
                            fill: "rgb(var(--palette-textPrimary))",
                            d: "M29.289 100.33c-2.4-3.63-5.619-5.63-9.069-5.63s-6.67 2-9.069 5.63a.767.767 0 0 0 0 .845c2.4 3.63 5.619 5.63 9.069 5.63s6.67-2 9.069-5.63a.767.767 0 0 0 0-.845zm-9.069 4.944c-2.785 0-5.435-1.6-7.5-4.519 2.065-2.92 4.715-4.519 7.5-4.519s5.435 1.6 7.5 4.519c-2.064 2.92-4.711 4.519-7.5 4.519z",
                            transform: "translate(-822 -420.048) translate(822 422.035) translate(-11.025 -94.7)"
                          })
                        })
                      })
                    }),
                    jsxRuntime.jsxs(
                      "g",
                      genericComponentOverrideContext.__assign(
                        {
                          fill: "rgb(var(--palette-textPrimary))",
                          stroke: "rgb(var(--palette-inputBackground))",
                          transform: "translate(-822 -420.048) translate(827.164 424.055)"
                        },
                        {
                          children: [
                            jsxRuntime.jsx("circle", {
                              cx: "4.036",
                              cy: "4.036",
                              r: "4.036",
                              stroke: "none"
                            }),
                            jsxRuntime.jsx("circle", {
                              cx: "4.036",
                              cy: "4.036",
                              r: "3.536",
                              fill: "none"
                            })
                          ]
                        }
                      )
                    ),
                    jsxRuntime.jsx("path", {
                      fill: "none",
                      stroke: "#707070",
                      strokeLinecap: "round",
                      strokeWidth: "2.25px",
                      d: "M11.981 0L0 11.981",
                      transform: "translate(-822 -420.048) translate(825.084 421.639)"
                    }),
                    jsxRuntime.jsx("path", {
                      fill: "none",
                      stroke: "rgb(var(--palette-inputBackground))",
                      strokeLinecap: "round",
                      d: "M13.978 0L0 13.978",
                      transform: "translate(-822 -420.048) translate(825.084 421.639)"
                    })
                  ]
                })
              }
            )
          )
        });
      }
      return jsxRuntime.jsx("div", {
        children: jsxRuntime.jsx(
          "svg",
          genericComponentOverrideContext.__assign(
            {
              xmlns: "http://www.w3.org/2000/svg",
              width: "18.281",
              height: "12.033",
              viewBox: "0 0 18.281 12.033",
              "data-supertokens": "showPasswordIcon hide"
            },
            {
              children: jsxRuntime.jsxs("g", {
                children: [
                  jsxRuntime.jsx("g", {
                    children: jsxRuntime.jsx("g", {
                      children: jsxRuntime.jsx("g", {
                        children: jsxRuntime.jsx("path", {
                          fill: "rgb(var(--palette-textPrimary))",
                          d: "M29.18 100.3c-2.384-3.608-5.586-5.6-9.015-5.6s-6.63 1.989-9.015 5.6a.763.763 0 0 0 0 .84c2.384 3.608 5.586 5.6 9.015 5.6s6.63-1.989 9.015-5.6a.763.763 0 0 0 0-.84zm-9.015 4.914c-2.769 0-5.4-1.589-7.459-4.492 2.052-2.9 4.686-4.492 7.459-4.492s5.4 1.589 7.459 4.492c-2.056 2.899-4.686 4.489-7.458 4.489z",
                          transform: "translate(-822 -422.088) translate(822 422.088) translate(-11.025 -94.7)"
                        })
                      })
                    })
                  }),
                  jsxRuntime.jsxs(
                    "g",
                    genericComponentOverrideContext.__assign(
                      {
                        fill: "rgb(var(--palette-textPrimary))",
                        stroke: "rgb(var(--palette-inputBackground))",
                        transform: "translate(-822 -422.088) translate(827.133 424.096)"
                      },
                      {
                        children: [
                          jsxRuntime.jsx("circle", {
                            cx: "4.012",
                            cy: "4.012",
                            r: "4.012",
                            stroke: "none"
                          }),
                          jsxRuntime.jsx("circle", {
                            cx: "4.012",
                            cy: "4.012",
                            r: "3.512",
                            fill: "none"
                          })
                        ]
                      }
                    )
                  )
                ]
              })
            }
          )
        )
      });
    }
    var Input = function(_a) {
      var type = _a.type, name = _a.name, hasError = _a.hasError, autoComplete = _a.autoComplete, onInputFocus = _a.onInputFocus, onInputBlur = _a.onInputBlur, onChange = _a.onChange, value = _a.value, placeholder = _a.placeholder, validated = _a.validated, autofocus = _a.autofocus;
      var t = translationContext.useTranslation();
      var _b = React.useState(false), showPassword = _b[0], setShowPassword = _b[1];
      function handleFocus() {
        if (onInputFocus !== void 0) {
          onInputFocus(value);
        }
      }
      function handleBlur() {
        if (onInputBlur !== void 0) {
          onInputBlur(value);
        }
      }
      function handleChange(event) {
        if (onChange) {
          onChange(event.target.value);
        }
      }
      if (autoComplete === void 0) {
        autoComplete = "off";
      }
      var inputType = type;
      if (type === "password" && showPassword === true) {
        inputType = "text";
      }
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "inputContainer" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": ["inputWrapper", hasError ? "inputError" : ""].join(" ") },
                {
                  children: [
                    jsxRuntime.jsx("input", {
                      autoFocus: autofocus,
                      autoComplete,
                      "data-supertokens": "input input-".concat(name),
                      className: "supertokens-input",
                      onFocus: handleFocus,
                      onBlur: handleBlur,
                      type: inputType,
                      name,
                      placeholder: t(placeholder),
                      onChange: handleChange,
                      value
                    }),
                    hasError === true && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "inputAdornment inputAdornmentError" },
                        { children: jsxRuntime.jsx(ErrorIcon, {}) }
                      )
                    ),
                    validated === true && hasError === false && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "inputAdornment inputAdornmentSuccess" },
                        { children: jsxRuntime.jsx(CheckedIcon, {}) }
                      )
                    ),
                    type === "password" && value.length > 0 && jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        {
                          onClick: function() {
                            return setShowPassword(showPassword === false);
                          },
                          "data-supertokens": "inputAdornment showPassword"
                        },
                        {
                          children: jsxRuntime.jsx(ShowPasswordIcon, {
                            showPassword
                          })
                        }
                      )
                    )
                  ]
                }
              )
            )
          }
        )
      );
    };
    function InputError(_a) {
      var error = _a.error;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign({ "data-supertokens": "inputErrorMessage" }, { children: t(error) })
      );
    }
    function Label(_a) {
      var value = _a.value, showIsRequired = _a.showIsRequired;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "label" },
          { children: [t(value), showIsRequired && value && value.trim() !== "" && " *"] }
        )
      );
    }
    var fetchDefaultValue = function(field) {
      if (field.getDefaultValue !== void 0) {
        var defaultValue = field.getDefaultValue();
        if (typeof defaultValue !== "string") {
          throw new Error("getDefaultValue for ".concat(field.id, " must return a string"));
        } else {
          return defaultValue;
        }
      }
      return "";
    };
    function InputComponentWrapper(props) {
      var field = props.field, type = props.type, fstate = props.fstate, onInputFocus = props.onInputFocus, onInputBlur = props.onInputBlur, onInputChange = props.onInputChange;
      var useCallbackOnInputFocus = React.useCallback(
        function(value) {
          onInputFocus({
            id: field.id,
            value
          });
        },
        [onInputFocus, field.id]
      );
      var useCallbackOnInputBlur = React.useCallback(
        function(value) {
          onInputBlur({
            id: field.id,
            value
          });
        },
        [onInputBlur, field.id]
      );
      var useCallbackOnInputChange = React.useCallback(
        function(value) {
          onInputChange({
            id: field.id,
            value
          });
        },
        [onInputChange, field.id]
      );
      return field.inputComponent !== void 0 ? jsxRuntime.jsx(
        field.inputComponent,
        {
          type,
          name: field.id,
          validated: fstate.validated === true,
          placeholder: field.placeholder,
          value: fstate.value,
          autoComplete: field.autoComplete,
          autofocus: field.autofocus,
          onInputFocus: useCallbackOnInputFocus,
          onInputBlur: useCallbackOnInputBlur,
          onChange: useCallbackOnInputChange,
          hasError: fstate.error !== void 0
        },
        field.id
      ) : jsxRuntime.jsx(
        Input,
        {
          type,
          name: field.id,
          validated: fstate.validated === true,
          placeholder: field.placeholder,
          value: fstate.value,
          autoComplete: field.autoComplete,
          onInputFocus: useCallbackOnInputFocus,
          onInputBlur: useCallbackOnInputBlur,
          onChange: useCallbackOnInputChange,
          autofocus: field.autofocus,
          hasError: fstate.error !== void 0
        },
        field.id
      );
    }
    var FormBase = function(props) {
      var footer = props.footer, buttonLabel = props.buttonLabel, showLabels = props.showLabels, validateOnBlur = props.validateOnBlur, formFields = props.formFields;
      var unmounting = React.useRef(new AbortController());
      React.useEffect(
        function() {
          unmounting.current = new AbortController();
          return function() {
            unmounting.current.abort();
          };
        },
        [unmounting]
      );
      var _a = React.useState(
        props.formFields.map(function(f) {
          return { id: f.id, value: fetchDefaultValue(f) };
        })
      ), fieldStates = _a[0], setFieldStates = _a[1];
      React.useEffect(
        function() {
          setFieldStates(function(fs) {
            var ret = fs;
            var fieldsWithoutState = props.formFields.filter(function(f) {
              return !fieldStates.some(function(s) {
                return f.id === s.id;
              });
            });
            if (fieldsWithoutState.length > 0) {
              fs = genericComponentOverrideContext.__spreadArray(
                genericComponentOverrideContext.__spreadArray([], fs, true),
                fieldsWithoutState.map(function(f) {
                  return { id: f.id, value: fetchDefaultValue(f) };
                }),
                true
              );
            }
            if (fieldStates.some(function(s) {
              return !props.formFields.some(function(f) {
                return f.id === s.id;
              });
            })) {
              ret = fs.filter(function(s) {
                return props.formFields.some(function(f) {
                  return f.id === s.id;
                });
              });
            }
            return ret;
          });
        },
        [props.formFields, setFieldStates]
      );
      var _b = React.useState(false), isLoading = _b[0], setIsLoading = _b[1];
      var updateFieldState = React.useCallback(
        function(id, update) {
          setFieldStates(function(os) {
            var field = os.find(function(f) {
              return f.id === id;
            });
            if (field === void 0) {
              return genericComponentOverrideContext.__spreadArray(
                genericComponentOverrideContext.__spreadArray([], os, true),
                [update({ id, value: "" })],
                false
              );
            }
            return os.filter(function(f) {
              return f.id !== field.id;
            }).concat(update(field));
          });
        },
        [setFieldStates]
      );
      var onInputFocus = React.useCallback(
        function(field) {
          updateFieldState(field.id, function(os) {
            return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, os), {
              validated: false
            });
          });
        },
        [updateFieldState]
      );
      var onInputBlur = React.useCallback(
        function(field) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var fieldConfig, error, _a2;
            return genericComponentOverrideContext.__generator(this, function(_b2) {
              switch (_b2.label) {
                case 0:
                  if (!validateOnBlur) {
                    return [
                      2
                      /*return*/
                    ];
                  }
                  fieldConfig = props.formFields.find(function(f) {
                    return f.id === field.id;
                  });
                  if (!(fieldConfig && field.value !== "")) return [3, 2];
                  return [4, fieldConfig.validate(field.value)];
                case 1:
                  _a2 = _b2.sent();
                  return [3, 3];
                case 2:
                  _a2 = void 0;
                  _b2.label = 3;
                case 3:
                  error = _a2;
                  updateFieldState(field.id, function(os) {
                    return genericComponentOverrideContext.__assign(
                      genericComponentOverrideContext.__assign({}, os),
                      { error, validated: error === void 0 && field.value.length !== 0 }
                    );
                  });
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        },
        [validateOnBlur, updateFieldState, props.formFields]
      );
      var onInputChange = React.useCallback(
        function(field) {
          if (typeof field.value !== "string") {
            throw new Error("".concat(field.id, " value must be a string"));
          }
          updateFieldState(field.id, function(os) {
            return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, os), {
              value: field.value,
              error: void 0
            });
          });
          props.clearError();
        },
        [updateFieldState]
      );
      var onFormSubmit = React.useCallback(
        function(e) {
          return genericComponentOverrideContext.__awaiter(void 0, void 0, void 0, function() {
            var apiFields, fieldUpdates, _a2, result, generalError, fetchError, _loop_1, _i, _b2, field, errorFields_1, getErrorMessage_1;
            return genericComponentOverrideContext.__generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  e.preventDefault();
                  setIsLoading(true);
                  setFieldStates(function(os) {
                    return os.map(function(fs) {
                      return genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, fs),
                        { error: void 0 }
                      );
                    });
                  });
                  apiFields = formFields === null || formFields === void 0 ? void 0 : formFields.map(function(field2) {
                    var fieldState = fieldStates === null || fieldStates === void 0 ? void 0 : fieldStates.find(function(fs) {
                      return fs.id === field2.id;
                    });
                    return {
                      id: field2.id,
                      value: fieldState === void 0 ? "" : fieldState.value
                    };
                  });
                  fieldUpdates = [];
                  _c.label = 1;
                case 1:
                  _c.trys.push([1, 3, 4, 5]);
                  return [
                    4,
                    genericComponentOverrideContext.handleCallAPI({
                      apiFields,
                      fieldUpdates,
                      callAPI: props.callAPI
                    })
                  ];
                case 2:
                  _a2 = _c.sent(), result = _a2.result, generalError = _a2.generalError, fetchError = _a2.fetchError;
                  if (unmounting === null || unmounting === void 0 ? void 0 : unmounting.current.signal.aborted) {
                    return [
                      2
                      /*return*/
                    ];
                  }
                  if (generalError !== void 0 || result !== void 0 && result.status !== "OK") {
                    _loop_1 = function(field2) {
                      var update = fieldUpdates.find(function(f) {
                        return f.id === field2.id;
                      });
                      if ((update || field2.clearOnSubmit === true) && updateFieldState) {
                        updateFieldState(field2.id, function(os) {
                          return genericComponentOverrideContext.__assign(
                            genericComponentOverrideContext.__assign({}, os),
                            { value: update ? update.value : "" }
                          );
                        });
                      }
                    };
                    for (_i = 0, _b2 = formFields || []; _i < _b2.length; _i++) {
                      field = _b2[_i];
                      _loop_1(field);
                    }
                  }
                  if (generalError !== void 0) {
                    props.onError(generalError.message);
                  } else if (fetchError !== void 0) {
                    if (props.onFetchError) {
                      props.onFetchError(fetchError);
                    } else {
                      throw fetchError;
                    }
                  } else {
                    if (result.status === "OK") {
                      setIsLoading(false);
                      props.clearError();
                      if (props.onSuccess !== void 0) {
                        props.onSuccess(result);
                      }
                    }
                    if (unmounting === null || unmounting === void 0 ? void 0 : unmounting.current.signal.aborted) {
                      return [
                        2
                        /*return*/
                      ];
                    }
                    if (result.status === "FIELD_ERROR") {
                      errorFields_1 = result.formFields;
                      getErrorMessage_1 = function(fs) {
                        var _a3;
                        var errorMessage = (_a3 = errorFields_1.find(function(ef) {
                          return ef.id === fs.id;
                        })) === null || _a3 === void 0 ? void 0 : _a3.error;
                        if (errorMessage === "Field is not optional") {
                          var fieldConfigData = formFields === null || formFields === void 0 ? void 0 : formFields.find(function(f) {
                            return f.id === fs.id;
                          });
                          if ((fieldConfigData === null || fieldConfigData === void 0 ? void 0 : fieldConfigData.nonOptionalErrorMsg) !== void 0) {
                            return fieldConfigData === null || fieldConfigData === void 0 ? void 0 : fieldConfigData.nonOptionalErrorMsg;
                          }
                        }
                        return errorMessage;
                      };
                      setFieldStates(function(os) {
                        return os.map(function(fs) {
                          return genericComponentOverrideContext.__assign(
                            genericComponentOverrideContext.__assign({}, fs),
                            { error: getErrorMessage_1(fs) }
                          );
                        });
                      });
                    }
                  }
                  return [3, 5];
                case 3:
                  _c.sent();
                  props.onError("SOMETHING_WENT_WRONG_ERROR");
                  return [3, 5];
                case 4:
                  setIsLoading(false);
                  return [
                    7
                    /*endfinally*/
                  ];
                case 5:
                  return [
                    2
                    /*return*/
                  ];
              }
            });
          });
        },
        [setIsLoading, setFieldStates, props, formFields, fieldStates, updateFieldState]
      );
      return jsxRuntime.jsx(
        FormStateContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: fieldStates },
          {
            children: jsxRuntime.jsxs(
              "form",
              genericComponentOverrideContext.__assign(
                {
                  autoComplete: "on",
                  noValidate: true,
                  onSubmit: onFormSubmit,
                  "data-supertokens": props.formDataSupertokens
                },
                {
                  children: [
                    formFields.filter(function(f) {
                      return f.hidden !== true;
                    }).map(function(field) {
                      var type = "text";
                      if (constants.MANDATORY_FORM_FIELDS_ID_ARRAY.includes(field.id)) {
                        type = field.id;
                      }
                      if (field.id === "confirm-password") {
                        type = "password";
                      }
                      var fstate = fieldStates.find(function(s) {
                        return s.id === field.id;
                      }) || {
                        id: field.id,
                        value: fetchDefaultValue(field)
                      };
                      return jsxRuntime.jsx(
                        FormRow,
                        genericComponentOverrideContext.__assign(
                          { hasError: fstate.error !== void 0 },
                          {
                            children: jsxRuntime.jsxs(React.Fragment, {
                              children: [
                                showLabels && (field.labelComponent !== void 0 ? field.labelComponent : jsxRuntime.jsx(Label, {
                                  value: field.label,
                                  showIsRequired: field.showIsRequired
                                })),
                                jsxRuntime.jsx(InputComponentWrapper, {
                                  type,
                                  field,
                                  fstate,
                                  onInputFocus,
                                  onInputBlur,
                                  onInputChange
                                }),
                                fstate.error && jsxRuntime.jsx(InputError, { error: fstate.error })
                              ]
                            })
                          }
                        ),
                        field.id
                      );
                    }),
                    jsxRuntime.jsx(
                      FormRow,
                      {
                        children: jsxRuntime.jsxs(React.Fragment, {
                          children: [
                            jsxRuntime.jsx(button.Button, {
                              disabled: isLoading,
                              isLoading,
                              type: "submit",
                              label: buttonLabel
                            }),
                            footer
                          ]
                        })
                      },
                      "form-button"
                    )
                  ]
                }
              )
            )
          }
        )
      );
    };
    var FormStateContext = React__default.default.createContext(void 0);
    var useFormFields = function() {
      var ctx = React.useContext(FormStateContext);
      if (ctx === void 0) {
        throw new Error("useFormState used outside FormBase");
      }
      return ctx;
    };
    exports.ErrorIcon = ErrorIcon;
    exports.FormBase = FormBase;
    exports.FormRow = FormRow;
    exports.Label = Label;
    exports.useFormFields = useFormFields;
  }
});

// node_modules/supertokens-web-js/utils/error.js
var require_error2 = __commonJS({
  "node_modules/supertokens-web-js/utils/error.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    var d = require_error();
    if (d.default !== void 0) {
      __export(d);
    } else {
      __export({
        default: d,
        ...d
      });
    }
  }
});

// node_modules/supertokens-auth-react/lib/build/authCompWrapper.js
var require_authCompWrapper = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/authCompWrapper.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var uiEntry = require_index2();
    function AuthComponentWrapper(_a) {
      var children = _a.children, recipeComponentOverrides = _a.recipeComponentOverrides;
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign({ value: recipeComponentOverrides }, { children })
      );
    }
    exports.AuthComponentWrapper = AuthComponentWrapper;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/emailverification/utils.js
var require_utils4 = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/emailverification/utils.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.normaliseUserInput = void 0;
    var utils_1 = require_utils2();
    function normaliseUserInput(config) {
      var override = __assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return __assign(__assign({}, (0, utils_1.normaliseRecipeModuleConfig)(config)), { override });
    }
    exports.normaliseUserInput = normaliseUserInput;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/emailverification/recipeImplementation.js
var require_recipeImplementation = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/emailverification/recipeImplementation.js"(exports) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getRecipeImplementation = void 0;
    var querier_1 = require_querier();
    var utils_1 = require_utils();
    function getRecipeImplementation(recipeImpleInput) {
      var querier = new querier_1.default(recipeImpleInput.recipeId, recipeImpleInput.appInfo);
      return {
        verifyEmail: function(_a) {
          var options = _a.options, userContext = _a.userContext;
          return __awaiter(this, void 0, void 0, function() {
            var token, tenantId, _b, jsonBody, fetchResponse;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  token = this.getEmailVerificationTokenFromURL({
                    userContext
                  });
                  tenantId = this.getTenantIdFromURL({
                    userContext
                  });
                  return [
                    4,
                    querier.post(
                      tenantId,
                      "/user/email/verify",
                      {
                        body: JSON.stringify({
                          method: "token",
                          token
                        })
                      },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImpleInput.preAPIHook,
                        action: "VERIFY_EMAIL",
                        options,
                        userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImpleInput.postAPIHook,
                        userContext,
                        action: "VERIFY_EMAIL"
                      })
                    )
                  ];
                case 1:
                  _b = _c.sent(), jsonBody = _b.jsonBody, fetchResponse = _b.fetchResponse;
                  return [
                    2,
                    {
                      status: jsonBody.status,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        isEmailVerified: function(_a) {
          var options = _a.options, userContext = _a.userContext;
          return __awaiter(this, void 0, void 0, function() {
            var _b, jsonBody, fetchResponse;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  return [
                    4,
                    querier.get(
                      void 0,
                      "/user/email/verify",
                      {},
                      void 0,
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImpleInput.preAPIHook,
                        action: "IS_EMAIL_VERIFIED",
                        options,
                        userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImpleInput.postAPIHook,
                        userContext,
                        action: "IS_EMAIL_VERIFIED"
                      })
                    )
                  ];
                case 1:
                  _b = _c.sent(), jsonBody = _b.jsonBody, fetchResponse = _b.fetchResponse;
                  return [
                    2,
                    {
                      status: "OK",
                      isVerified: jsonBody.isVerified,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        sendVerificationEmail: function(_a) {
          var options = _a.options, userContext = _a.userContext;
          return __awaiter(this, void 0, void 0, function() {
            var _b, jsonBody, fetchResponse;
            return __generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  return [
                    4,
                    querier.post(
                      void 0,
                      "/user/email/verify/token",
                      { body: JSON.stringify({}) },
                      querier_1.default.preparePreAPIHook({
                        recipePreAPIHook: recipeImpleInput.preAPIHook,
                        action: "SEND_VERIFY_EMAIL",
                        options,
                        userContext
                      }),
                      querier_1.default.preparePostAPIHook({
                        recipePostAPIHook: recipeImpleInput.postAPIHook,
                        userContext,
                        action: "SEND_VERIFY_EMAIL"
                      })
                    )
                  ];
                case 1:
                  _b = _c.sent(), jsonBody = _b.jsonBody, fetchResponse = _b.fetchResponse;
                  return [
                    2,
                    {
                      status: jsonBody.status,
                      fetchResponse
                    }
                  ];
              }
            });
          });
        },
        getEmailVerificationTokenFromURL: function() {
          var token = (0, utils_1.getQueryParams)("token");
          if (token === void 0) {
            return "";
          }
          return token;
        },
        getTenantIdFromURL: function() {
          return (0, utils_1.getQueryParams)("tenantId");
        }
      };
    }
    exports.default = getRecipeImplementation;
    exports.getRecipeImplementation = getRecipeImplementation;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/emailverification/emailVerificationClaim.js
var require_emailVerificationClaim = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/emailverification/emailVerificationClaim.js"(exports) {
    "use strict";
    var __extends = exports && exports.__extends || /* @__PURE__ */ function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2) if (Object.prototype.hasOwnProperty.call(b2, p)) d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
          resolve(value);
        });
      }
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __generator = exports && exports.__generator || function(thisArg, body) {
      var _ = {
        label: 0,
        sent: function() {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      }, f, y, t, g;
      return g = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
      }), g;
      function verb(n) {
        return function(v) {
          return step([n, v]);
        };
      }
      function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_)
          try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
              return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return { value: op[1], done: false };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
        if (op[0] & 5) throw op[1];
        return { value: op[0] ? op[1] : void 0, done: true };
      }
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EmailVerificationClaimClass = void 0;
    var dateProvider_1 = require_dateProvider();
    var session_1 = require_session();
    var constants_1 = require_constants();
    function getThresholdAwareDefaultValue(defaultVal) {
      return Math.max(
        defaultVal,
        dateProvider_1.DateProviderReference.getReferenceOrThrow().dateProvider.getThresholdInSeconds()
      );
    }
    var EmailVerificationClaimClass = (
      /** @class */
      function(_super) {
        __extends(EmailVerificationClaimClass2, _super);
        function EmailVerificationClaimClass2(getRecipeImpl) {
          var _this = _super.call(this, {
            id: constants_1.EMAILVERIFICATION_CLAIM_ID,
            refresh: function(userContext) {
              return __awaiter(_this, void 0, void 0, function() {
                return __generator(this, function(_a) {
                  switch (_a.label) {
                    case 0:
                      return [
                        4,
                        getRecipeImpl().isEmailVerified({
                          userContext
                        })
                      ];
                    case 1:
                      _a.sent();
                      return [
                        2
                        /*return*/
                      ];
                  }
                });
              });
            }
          }) || this;
          _this.validators = __assign(__assign({}, _this.validators), {
            isVerified: function(refetchTimeOnFalseInSeconds, maxAgeInSeconds) {
              return {
                id: _this.id,
                refresh: _this.refresh,
                shouldRefresh: function(payload, userContext) {
                  var DateProvider = dateProvider_1.DateProviderReference.getReferenceOrThrow().dateProvider;
                  refetchTimeOnFalseInSeconds = refetchTimeOnFalseInSeconds !== null && refetchTimeOnFalseInSeconds !== void 0 ? refetchTimeOnFalseInSeconds : getThresholdAwareDefaultValue(10);
                  if (maxAgeInSeconds !== void 0 && maxAgeInSeconds < DateProvider.getThresholdInSeconds()) {
                    throw new Error(
                      "maxAgeInSeconds must be greater than or equal to the DateProvider threshold value -> ".concat(
                        DateProvider.getThresholdInSeconds()
                      )
                    );
                  }
                  if (refetchTimeOnFalseInSeconds < DateProvider.getThresholdInSeconds()) {
                    throw new Error(
                      "refetchTimeOnFalseInSeconds must be greater than or equal to the DateProvider threshold value -> ".concat(
                        DateProvider.getThresholdInSeconds()
                      )
                    );
                  }
                  var value = _this.getValueFromPayload(payload, userContext);
                  if (value === void 0) {
                    return true;
                  }
                  var currentTime = DateProvider.now();
                  var lastRefetchTime = _this.getLastFetchedTime(payload, userContext);
                  if (maxAgeInSeconds !== void 0) {
                    if (lastRefetchTime < currentTime - maxAgeInSeconds * 1e3) {
                      return true;
                    }
                  }
                  if (value === false) {
                    if (lastRefetchTime < currentTime - refetchTimeOnFalseInSeconds * 1e3) {
                      return true;
                    }
                  }
                  return false;
                },
                validate: function(payload, userContext) {
                  return __awaiter(_this, void 0, void 0, function() {
                    var value;
                    return __generator(this, function(_a) {
                      value = this.getValueFromPayload(payload, userContext);
                      return [
                        2,
                        value === true ? { isValid: true } : {
                          isValid: false,
                          reason: {
                            message: "wrong value",
                            expectedValue: true,
                            actualValue: value
                          }
                        }
                      ];
                    });
                  });
                }
              };
            }
          });
          return _this;
        }
        return EmailVerificationClaimClass2;
      }(session_1.BooleanClaim)
    );
    exports.EmailVerificationClaimClass = EmailVerificationClaimClass;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/emailverification/recipe.js
var require_recipe = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/emailverification/recipe.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Recipe = void 0;
    var sessionClaimValidatorStore_1 = require_sessionClaimValidatorStore();
    var utils_1 = require_utils4();
    var recipeImplementation_1 = require_recipeImplementation();
    var supertokens_js_override_1 = require_build();
    var utils_2 = require_utils();
    var emailVerificationClaim_1 = require_emailVerificationClaim();
    var postSuperTokensInitCallbacks_1 = require_postSuperTokensInitCallbacks();
    var Recipe = (
      /** @class */
      function() {
        function Recipe2(config) {
          this.config = (0, utils_1.normaliseUserInput)(config);
          var builder = new supertokens_js_override_1.default(
            (0, recipeImplementation_1.default)({
              recipeId: this.config.recipeId,
              appInfo: this.config.appInfo,
              clientType: this.config.clientType,
              preAPIHook: this.config.preAPIHook,
              postAPIHook: this.config.postAPIHook
            })
          );
          this.recipeImplementation = builder.override(this.config.override.functions).build();
          postSuperTokensInitCallbacks_1.PostSuperTokensInitCallbacks.addPostInitCallback(function() {
            sessionClaimValidatorStore_1.SessionClaimValidatorStore.addClaimValidatorFromOtherRecipe(
              Recipe2.EmailVerificationClaim.validators.isVerified(10)
            );
          });
        }
        Recipe2.init = function(config) {
          return function(appInfo, clientType) {
            Recipe2.instance = new Recipe2(
              __assign(__assign({}, config), { appInfo, clientType, recipeId: Recipe2.RECIPE_ID })
            );
            return Recipe2.instance;
          };
        };
        Recipe2.getInstanceOrThrow = function() {
          if (Recipe2.instance === void 0) {
            var error = "No instance of EmailVerification found. Ensure that the 'EmailVerification.init' method is called within the 'SuperTokens.init' recipeList.";
            error = (0, utils_2.checkForSSRErrorAndAppendIfNeeded)(error);
            throw Error(error);
          }
          return Recipe2.instance;
        };
        Recipe2.reset = function() {
          if (!(0, utils_2.isTest)()) {
            return;
          }
          Recipe2.instance = void 0;
          return;
        };
        Recipe2.RECIPE_ID = "emailverification";
        Recipe2.EmailVerificationClaim = new emailVerificationClaim_1.EmailVerificationClaimClass(function() {
          return Recipe2.getInstanceOrThrow().recipeImplementation;
        });
        return Recipe2;
      }()
    );
    exports.Recipe = Recipe;
    exports.default = Recipe;
  }
});

// node_modules/supertokens-web-js/lib/build/recipe/emailverification/index.js
var require_emailverification = __commonJS({
  "node_modules/supertokens-web-js/lib/build/recipe/emailverification/index.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.EmailVerificationClaimClass = exports.EmailVerificationClaim = exports.getTenantIdFromURL = exports.getEmailVerificationTokenFromURL = exports.isEmailVerified = exports.sendVerificationEmail = exports.verifyEmail = exports.init = void 0;
    var recipe_1 = require_recipe();
    var utils_1 = require_utils();
    var emailVerificationClaim_1 = require_emailVerificationClaim();
    Object.defineProperty(exports, "EmailVerificationClaimClass", {
      enumerable: true,
      get: function() {
        return emailVerificationClaim_1.EmailVerificationClaimClass;
      }
    });
    var RecipeWrapper = (
      /** @class */
      function() {
        function RecipeWrapper2() {
        }
        RecipeWrapper2.init = function(config) {
          return recipe_1.default.init(config);
        };
        RecipeWrapper2.verifyEmail = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.verifyEmail(
            __assign(__assign({}, input), {
              userContext: (0, utils_1.getNormalisedUserContext)(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        RecipeWrapper2.sendVerificationEmail = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.sendVerificationEmail(
            __assign(__assign({}, input), {
              userContext: (0, utils_1.getNormalisedUserContext)(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        RecipeWrapper2.isEmailVerified = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.isEmailVerified(
            __assign(__assign({}, input), {
              userContext: (0, utils_1.getNormalisedUserContext)(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        RecipeWrapper2.getEmailVerificationTokenFromURL = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.getEmailVerificationTokenFromURL(
            __assign(__assign({}, input), {
              userContext: (0, utils_1.getNormalisedUserContext)(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        RecipeWrapper2.getTenantIdFromURL = function(input) {
          return recipe_1.default.getInstanceOrThrow().recipeImplementation.getTenantIdFromURL(
            __assign(__assign({}, input), {
              userContext: (0, utils_1.getNormalisedUserContext)(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        RecipeWrapper2.EmailVerificationClaim = recipe_1.default.EmailVerificationClaim;
        return RecipeWrapper2;
      }()
    );
    exports.default = RecipeWrapper;
    var init = RecipeWrapper.init;
    exports.init = init;
    var verifyEmail = RecipeWrapper.verifyEmail;
    exports.verifyEmail = verifyEmail;
    var sendVerificationEmail = RecipeWrapper.sendVerificationEmail;
    exports.sendVerificationEmail = sendVerificationEmail;
    var isEmailVerified = RecipeWrapper.isEmailVerified;
    exports.isEmailVerified = isEmailVerified;
    var getEmailVerificationTokenFromURL = RecipeWrapper.getEmailVerificationTokenFromURL;
    exports.getEmailVerificationTokenFromURL = getEmailVerificationTokenFromURL;
    var getTenantIdFromURL = RecipeWrapper.getTenantIdFromURL;
    exports.getTenantIdFromURL = getTenantIdFromURL;
    var EmailVerificationClaim = RecipeWrapper.EmailVerificationClaim;
    exports.EmailVerificationClaim = EmailVerificationClaim;
  }
});

// node_modules/supertokens-web-js/recipe/emailverification/index.js
var require_emailverification2 = __commonJS({
  "node_modules/supertokens-web-js/recipe/emailverification/index.js"(exports) {
    "use strict";
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_emailverification());
  }
});

// node_modules/supertokens-auth-react/lib/build/emailverification-shared.js
var require_emailverification_shared = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailverification-shared.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var EmailVerificationWebJS = require_emailverification2();
    var postSuperTokensInitCallbacks = require_postSuperTokensInitCallbacks2();
    var sessionClaimValidatorStore = require_sessionClaimValidatorStore2();
    var index = require_recipeModule_shared();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var EmailVerificationWebJS__default = _interopDefault(EmailVerificationWebJS);
    var _a = genericComponentOverrideContext.createGenericComponentsOverrideContext();
    var useContext = _a[0];
    var Provider = _a[1];
    var DEFAULT_VERIFY_EMAIL_PATH = "/verify-email";
    var EmailVerificationClaimClass = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(EmailVerificationClaimClass2, _super);
        function EmailVerificationClaimClass2(getRecipeImpl, onFailureRedirection) {
          var _this = _super.call(this, getRecipeImpl) || this;
          var validatorsWithCallbacks = genericComponentOverrideContext.__assign({}, _this.validators);
          var _loop_1 = function(key2) {
            var validator = validatorsWithCallbacks[key2];
            validatorsWithCallbacks[key2] = function() {
              var args = [];
              for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
              }
              return genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, validator.apply(void 0, args)),
                {
                  onFailureRedirection: function(args2) {
                    if (onFailureRedirection !== void 0) {
                      return onFailureRedirection(args2);
                    }
                    var recipe = EmailVerification.getInstanceOrThrow();
                    if (recipe.config.mode === "REQUIRED") {
                      return recipe.getRedirectUrl(
                        {
                          action: "VERIFY_EMAIL",
                          tenantIdFromQueryParams: genericComponentOverrideContext.getTenantIdFromQueryParams()
                        },
                        args2.userContext
                      );
                    }
                    return void 0;
                  },
                  showAccessDeniedOnFailure: false
                }
              );
            };
          };
          for (var key in validatorsWithCallbacks) {
            _loop_1(key);
          }
          _this.validators = validatorsWithCallbacks;
          return _this;
        }
        return EmailVerificationClaimClass2;
      }(EmailVerificationWebJS.EmailVerificationClaimClass)
    );
    var getFunctionOverrides = function(onHandleEvent) {
      return function(originalImp) {
        return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, originalImp), {
          verifyEmail: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, originalImp.verifyEmail(input)];
                  case 1:
                    response = _a2.sent();
                    if (response.status === "OK") {
                      onHandleEvent({
                        action: "EMAIL_VERIFIED_SUCCESSFUL",
                        userContext: input.userContext
                      });
                    }
                    return [2, response];
                }
              });
            });
          },
          sendVerificationEmail: function(input) {
            return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
              var response;
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                switch (_a2.label) {
                  case 0:
                    return [4, originalImp.sendVerificationEmail(input)];
                  case 1:
                    response = _a2.sent();
                    if (response.status === "OK") {
                      onHandleEvent({
                        action: "VERIFY_EMAIL_SENT",
                        userContext: input.userContext
                      });
                    }
                    return [2, response];
                }
              });
            });
          }
        });
      };
    };
    function normaliseEmailVerificationFeature(config) {
      if (config === void 0) {
        config = {};
      }
      var disableDefaultUI = config.disableDefaultUI === true;
      var mode = config.mode === void 0 ? "REQUIRED" : config.mode;
      var sendVerifyEmailScreenStyle = config.sendVerifyEmailScreen !== void 0 && config.sendVerifyEmailScreen.style !== void 0 ? config.sendVerifyEmailScreen.style : "";
      var sendVerifyEmailScreen = {
        style: sendVerifyEmailScreenStyle
      };
      var verifyEmailLinkClickedScreenStyle = config.verifyEmailLinkClickedScreen !== void 0 && config.verifyEmailLinkClickedScreen.style !== void 0 ? config.verifyEmailLinkClickedScreen.style : "";
      var verifyEmailLinkClickedScreen = {
        style: verifyEmailLinkClickedScreenStyle
      };
      var override = genericComponentOverrideContext.__assign(
        {
          functions: function(originalImplementation) {
            return originalImplementation;
          }
        },
        config.override
      );
      return genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign(
          {},
          genericComponentOverrideContext.normaliseRecipeModuleConfig(config)
        ),
        {
          disableDefaultUI,
          mode,
          sendVerifyEmailScreen,
          verifyEmailLinkClickedScreen,
          override
        }
      );
    }
    var EmailVerification = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(EmailVerification2, _super);
        function EmailVerification2(config, webJSRecipe) {
          if (webJSRecipe === void 0) {
            webJSRecipe = EmailVerificationWebJS__default.default;
          }
          var _this = _super.call(this, config) || this;
          _this.webJSRecipe = webJSRecipe;
          _this.recipeID = EmailVerification2.RECIPE_ID;
          _this.getDefaultRedirectionURL = function(context) {
            return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
              return genericComponentOverrideContext.__generator(this, function(_a2) {
                if (context.action === "VERIFY_EMAIL") {
                  return [
                    2,
                    genericComponentOverrideContext.getDefaultRedirectionURLForPath(
                      this.config,
                      DEFAULT_VERIFY_EMAIL_PATH,
                      context
                    )
                  ];
                } else {
                  return [2, "/"];
                }
              });
            });
          };
          postSuperTokensInitCallbacks.PostSuperTokensInitCallbacks.addPostInitCallback(function() {
            var isVerifiedValidator = EmailVerification2.EmailVerificationClaim.validators.isVerified(10);
            sessionClaimValidatorStore.SessionClaimValidatorStore.addClaimValidatorFromOtherRecipe(isVerifiedValidator);
          });
          return _this;
        }
        EmailVerification2.init = function(config) {
          var normalisedConfig = normaliseEmailVerificationFeature(config);
          return {
            recipeID: EmailVerification2.RECIPE_ID,
            authReact: function(appInfo) {
              EmailVerification2.instance = new EmailVerification2(
                genericComponentOverrideContext.__assign(
                  genericComponentOverrideContext.__assign({}, normalisedConfig),
                  { appInfo, recipeId: EmailVerification2.RECIPE_ID }
                )
              );
              return EmailVerification2.instance;
            },
            webJS: EmailVerificationWebJS__default.default.init(
              genericComponentOverrideContext.__assign(
                genericComponentOverrideContext.__assign({}, normalisedConfig),
                {
                  override: {
                    functions: function(originalImpl, builder) {
                      var functions = getFunctionOverrides(normalisedConfig.onHandleEvent);
                      builder.override(functions);
                      builder.override(normalisedConfig.override.functions);
                      return originalImpl;
                    }
                  }
                }
              )
            )
          };
        };
        EmailVerification2.getInstanceOrThrow = function() {
          if (EmailVerification2.instance === void 0) {
            var error = "No instance of EmailVerification found. Make sure to call the EmailVerification.init method.";
            if (typeof window === "undefined") {
              error = error + genericComponentOverrideContext.SSR_ERROR;
            }
            throw Error(error);
          }
          return EmailVerification2.instance;
        };
        EmailVerification2.prototype.isEmailVerified = function(userContext) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a2) {
              switch (_a2.label) {
                case 0:
                  return [
                    4,
                    this.webJSRecipe.isEmailVerified({
                      userContext
                    })
                  ];
                case 1:
                  return [2, _a2.sent()];
              }
            });
          });
        };
        EmailVerification2.reset = function() {
          if (!genericComponentOverrideContext.isTest()) {
            return;
          }
          EmailVerification2.instance = void 0;
          return;
        };
        EmailVerification2.RECIPE_ID = "emailverification";
        EmailVerification2.EmailVerificationClaim = new EmailVerificationClaimClass(function() {
          return EmailVerification2.getInstanceOrThrow().webJSRecipe;
        });
        return EmailVerification2;
      }(index.RecipeModule)
    );
    exports.DEFAULT_VERIFY_EMAIL_PATH = DEFAULT_VERIFY_EMAIL_PATH;
    exports.EmailVerification = EmailVerification;
    exports.Provider = Provider;
    exports.useContext = useContext;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailverification.js
var require_emailverification3 = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailverification.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var recipe = require_emailverification_shared();
    require_supertokens_web_js();
    require_cookieHandler();
    require_postSuperTokensInitCallbacks2();
    require_windowHandler();
    require_multitenancy();
    require_utils3();
    require_react();
    require_error();
    require_normalisedURLDomain();
    require_normalisedURLPath2();
    require_jsx_runtime();
    require_emailverification2();
    require_sessionClaimValidatorStore2();
    require_recipeModule_shared();
    var Wrapper = (
      /** @class */
      function() {
        function Wrapper2() {
        }
        Wrapper2.init = function(config) {
          return recipe.EmailVerification.init(config);
        };
        Wrapper2.isEmailVerified = function(input) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              return [
                2,
                recipe.EmailVerification.getInstanceOrThrow().webJSRecipe.isEmailVerified(
                  genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                    userContext: genericComponentOverrideContext.getNormalisedUserContext(
                      input === null || input === void 0 ? void 0 : input.userContext
                    )
                  })
                )
              ];
            });
          });
        };
        Wrapper2.verifyEmail = function(input) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              return [
                2,
                recipe.EmailVerification.getInstanceOrThrow().webJSRecipe.verifyEmail(
                  genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                    userContext: genericComponentOverrideContext.getNormalisedUserContext(
                      input === null || input === void 0 ? void 0 : input.userContext
                    )
                  })
                )
              ];
            });
          });
        };
        Wrapper2.sendVerificationEmail = function(input) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            return genericComponentOverrideContext.__generator(this, function(_a) {
              return [
                2,
                recipe.EmailVerification.getInstanceOrThrow().webJSRecipe.sendVerificationEmail(
                  genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
                    userContext: genericComponentOverrideContext.getNormalisedUserContext(
                      input === null || input === void 0 ? void 0 : input.userContext
                    )
                  })
                )
              ];
            });
          });
        };
        Wrapper2.getEmailVerificationTokenFromURL = function(input) {
          return recipe.EmailVerification.getInstanceOrThrow().webJSRecipe.getEmailVerificationTokenFromURL(
            genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, input), {
              userContext: genericComponentOverrideContext.getNormalisedUserContext(
                input === null || input === void 0 ? void 0 : input.userContext
              )
            })
          );
        };
        Wrapper2.EmailVerificationClaim = recipe.EmailVerification.EmailVerificationClaim;
        Wrapper2.ComponentsOverrideProvider = recipe.Provider;
        return Wrapper2;
      }()
    );
    var init = Wrapper.init;
    var isEmailVerified = Wrapper.isEmailVerified;
    var verifyEmail = Wrapper.verifyEmail;
    var sendVerificationEmail = Wrapper.sendVerificationEmail;
    var getEmailVerificationTokenFromURL = Wrapper.getEmailVerificationTokenFromURL;
    var EmailVerificationComponentsOverrideProvider = Wrapper.ComponentsOverrideProvider;
    var EmailVerificationClaim = recipe.EmailVerification.EmailVerificationClaim;
    exports.EmailVerificationClaim = EmailVerificationClaim;
    exports.EmailVerificationComponentsOverrideProvider = EmailVerificationComponentsOverrideProvider;
    exports.default = Wrapper;
    exports.getEmailVerificationTokenFromURL = getEmailVerificationTokenFromURL;
    exports.init = init;
    exports.isEmailVerified = isEmailVerified;
    exports.sendVerificationEmail = sendVerificationEmail;
    exports.verifyEmail = verifyEmail;
  }
});

// node_modules/supertokens-auth-react/lib/build/emailpasswordprebuiltui.js
var require_emailpasswordprebuiltui = __commonJS({
  "node_modules/supertokens-auth-react/lib/build/emailpasswordprebuiltui.js"(exports) {
    "use strict";
    var genericComponentOverrideContext = require_genericComponentOverrideContext();
    var jsxRuntime = require_jsx_runtime();
    var NormalisedURLPath = require_normalisedURLPath2();
    var uiEntry = require_index2();
    require_multifactorauth2();
    var componentOverrideContext = require_emailpassword_shared2();
    var React = require_react();
    var translations = require_emailverification_shared2();
    var translationContext = require_translationContext();
    var arrowLeftIcon = require_arrowLeftIcon();
    var formBase = require_emailpassword_shared6();
    var STGeneralError = require_error2();
    var button = require_emailpassword_shared();
    var authCompWrapper = require_authCompWrapper();
    var emailverification = require_emailverification3();
    var recipe$1 = require_emailverification_shared();
    var session = require_session3();
    var types = require_multifactorauth_shared();
    var recipe = require_emailpassword_shared3();
    var STGeneralError$1 = require_error();
    var constants = require_emailpassword_shared4();
    require_supertokens_web_js();
    require_cookieHandler();
    require_postSuperTokensInitCallbacks2();
    require_windowHandler();
    require_multitenancy();
    require_utils3();
    require_normalisedURLDomain();
    require_react_dom();
    require_multitenancy_shared();
    require_multifactorauth_shared2();
    require_multifactorauth();
    require_sessionClaimValidatorStore2();
    require_recipeModule_shared();
    require_oauth2provider_shared();
    require_oauth2provider();
    require_authRecipe_shared();
    require_normalisedURLPath();
    require_multifactorauth_shared3();
    require_emailverification2();
    require_session2();
    require_session_shared();
    require_emailpassword();
    require_authRecipe_shared2();
    require_emailpassword_shared5();
    function _interopDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    function _interopNamespace(e) {
      if (e && e.__esModule) return e;
      var n = /* @__PURE__ */ Object.create(null);
      if (e) {
        Object.keys(e).forEach(function(k) {
          if (k !== "default") {
            var d = Object.getOwnPropertyDescriptor(e, k);
            Object.defineProperty(
              n,
              k,
              d.get ? d : {
                enumerable: true,
                get: function() {
                  return e[k];
                }
              }
            );
          }
        });
      }
      n.default = e;
      return Object.freeze(n);
    }
    var NormalisedURLPath__default = _interopDefault(NormalisedURLPath);
    var React__namespace = _interopNamespace(React);
    var STGeneralError__default = _interopDefault(STGeneralError);
    var STGeneralError__default$1 = _interopDefault(STGeneralError$1);
    function BackToSignInButton(_a) {
      var onClick = _a.onClick;
      var t = translationContext.useTranslation();
      return jsxRuntime.jsxs(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "secondaryText secondaryLinkWithLeftArrow", onClick },
          {
            children: [
              jsxRuntime.jsx(arrowLeftIcon.ArrowLeftIcon, { color: "rgb(var(--palette-secondaryText))" }),
              t("EMAIL_PASSWORD_RESET_SIGN_IN_LINK")
            ]
          }
        )
      );
    }
    var EmailPasswordResetPasswordEmail = function(props) {
      var t = translationContext.useTranslation();
      var userContext = uiEntry.useUserContext();
      var _a = React.useState("READY"), status = _a[0], setStatus = _a[1];
      var _b = React.useState(""), emailFieldValue = _b[0], setEmailFieldValue = _b[1];
      var onSuccess = function() {
        setStatus("SENT");
      };
      var resend = function() {
        setStatus("READY");
      };
      var formFields = props.formFields;
      var emailSuccessText = t("EMAIL_PASSWORD_RESET_SEND_BEFORE_EMAIL") + (emailFieldValue !== void 0 && emailFieldValue.length > 0 ? emailFieldValue : t("EMAIL_PASSWORD_RESET_SEND_FALLBACK_EMAIL")) + t("EMAIL_PASSWORD_RESET_SEND_AFTER_EMAIL");
      if (status === "SENT") {
        return jsxRuntime.jsx(
          "div",
          genericComponentOverrideContext.__assign(
            { "data-supertokens": "container" },
            {
              children: jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsxs(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "primaryText enterEmailSuccessMessage" },
                          {
                            children: [
                              emailSuccessText,
                              jsxRuntime.jsx(
                                "span",
                                genericComponentOverrideContext.__assign(
                                  {
                                    "data-supertokens": "link resendEmailLink",
                                    onClick: resend
                                  },
                                  { children: t("EMAIL_PASSWORD_RESET_RESEND_LINK") }
                                )
                              )
                            ]
                          }
                        )
                      ),
                      jsxRuntime.jsx(BackToSignInButton, { onClick: props.onBackButtonClicked })
                    ]
                  }
                )
              )
            }
          )
        );
      }
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container resetPasswordEmailForm" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "row" },
                {
                  children: [
                    jsxRuntime.jsxs(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerTitle withBackButton" },
                        {
                          children: [
                            jsxRuntime.jsx(uiEntry.BackButton, {
                              onClick: props.onBackButtonClicked
                            }),
                            t("EMAIL_PASSWORD_RESET_HEADER_TITLE"),
                            jsxRuntime.jsx("span", {
                              "data-supertokens": "backButtonPlaceholder backButtonCommon"
                            })
                          ]
                        }
                      )
                    ),
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerSubtitle secondaryText" },
                        { children: t("EMAIL_PASSWORD_RESET_HEADER_SUBTITLE") }
                      )
                    ),
                    props.error !== void 0 && jsxRuntime.jsx(uiEntry.GeneralError, { error: props.error }),
                    jsxRuntime.jsx(formBase.FormBase, {
                      clearError: props.clearError,
                      onError: props.onError,
                      formFields,
                      buttonLabel: "EMAIL_PASSWORD_RESET_SEND_BTN",
                      onSuccess,
                      callAPI: function(formFields2) {
                        return genericComponentOverrideContext.__awaiter(
                          void 0,
                          void 0,
                          void 0,
                          function() {
                            var validationErrors, emailField, resp;
                            return genericComponentOverrideContext.__generator(this, function(_a2) {
                              switch (_a2.label) {
                                case 0:
                                  return [
                                    4,
                                    genericComponentOverrideContext.validateForm(
                                      formFields2,
                                      props.config.resetPasswordUsingTokenFeature.enterEmailForm.formFields
                                    )
                                  ];
                                case 1:
                                  validationErrors = _a2.sent();
                                  if (validationErrors.length > 0) {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: validationErrors
                                      }
                                    ];
                                  }
                                  emailField = formFields2.find(function(field) {
                                    return field.id === "email";
                                  });
                                  if (emailField !== void 0) {
                                    setEmailFieldValue(emailField.value);
                                  }
                                  return [
                                    4,
                                    props.recipeImplementation.sendPasswordResetEmail({
                                      formFields: formFields2,
                                      userContext
                                    })
                                  ];
                                case 2:
                                  resp = _a2.sent();
                                  if (resp.status === "PASSWORD_RESET_NOT_ALLOWED") {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: [
                                          { id: "email", error: resp.reason }
                                        ]
                                      }
                                    ];
                                  }
                                  return [2, resp];
                              }
                            });
                          }
                        );
                      },
                      showLabels: true,
                      validateOnBlur: true
                    })
                  ]
                }
              )
            )
          }
        )
      );
    };
    var ResetPasswordEmail = uiEntry.withOverride("EmailPasswordResetPasswordEmail", EmailPasswordResetPasswordEmail);
    var EmailPasswordSubmitNewPassword = function(props) {
      var t = translationContext.useTranslation();
      var userContext = uiEntry.useUserContext();
      var _a = React.useState("READY"), status = _a[0], setStatus = _a[1];
      var onSuccess = function() {
        setStatus("SUCCESS");
      };
      var formFields = props.formFields, onSignInClicked = props.onSignInClicked;
      if (status === "SUCCESS") {
        return jsxRuntime.jsx(
          "div",
          genericComponentOverrideContext.__assign(
            { "data-supertokens": "container" },
            {
              children: jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "row" },
                  {
                    children: [
                      jsxRuntime.jsx(
                        "div",
                        genericComponentOverrideContext.__assign(
                          { "data-supertokens": "headerTitle" },
                          { children: t("EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_HEADER_TITLE") }
                        )
                      ),
                      jsxRuntime.jsx(
                        formBase.FormRow,
                        {
                          children: jsxRuntime.jsxs(React.Fragment, {
                            children: [
                              jsxRuntime.jsx(
                                "div",
                                genericComponentOverrideContext.__assign(
                                  {
                                    "data-supertokens": "primaryText submitNewPasswordSuccessMessage"
                                  },
                                  {
                                    children: t(
                                      "EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_DESC"
                                    )
                                  }
                                )
                              ),
                              jsxRuntime.jsx(button.Button, {
                                disabled: false,
                                isLoading: false,
                                type: "button",
                                onClick: onSignInClicked,
                                label: "EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_SIGN_IN_BTN"
                              })
                            ]
                          })
                        },
                        "form-button"
                      )
                    ]
                  }
                )
              )
            }
          )
        );
      }
      return jsxRuntime.jsx(
        "div",
        genericComponentOverrideContext.__assign(
          { "data-supertokens": "container resetPasswordPasswordForm" },
          {
            children: jsxRuntime.jsxs(
              "div",
              genericComponentOverrideContext.__assign(
                { "data-supertokens": "row" },
                {
                  children: [
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerTitle" },
                        { children: t("EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_TITLE") }
                      )
                    ),
                    jsxRuntime.jsx(
                      "div",
                      genericComponentOverrideContext.__assign(
                        { "data-supertokens": "headerSubtitle secondaryText" },
                        { children: t("EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_SUBTITLE") }
                      )
                    ),
                    props.error !== void 0 && jsxRuntime.jsx(uiEntry.GeneralError, { error: props.error }),
                    jsxRuntime.jsx(formBase.FormBase, {
                      formFields,
                      clearError: props.clearError,
                      onError: props.onError,
                      buttonLabel: "EMAIL_PASSWORD_RESET_SUBMIT_PW_CHANGE_PW_BTN",
                      onSuccess,
                      validateOnBlur: true,
                      callAPI: function(fields) {
                        return genericComponentOverrideContext.__awaiter(
                          void 0,
                          void 0,
                          void 0,
                          function() {
                            var validationErrors, response;
                            return genericComponentOverrideContext.__generator(this, function(_a2) {
                              switch (_a2.label) {
                                case 0:
                                  return [
                                    4,
                                    genericComponentOverrideContext.validateForm(
                                      fields,
                                      props.config.resetPasswordUsingTokenFeature.submitNewPasswordForm.formFields
                                    )
                                  ];
                                case 1:
                                  validationErrors = _a2.sent();
                                  if (validationErrors.length > 0) {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: validationErrors
                                      }
                                    ];
                                  }
                                  if (fields[0].value !== fields[1].value) {
                                    return [
                                      2,
                                      {
                                        status: "FIELD_ERROR",
                                        formFields: [
                                          {
                                            id: fields[1].id,
                                            error: "ERROR_CONFIRM_PASSWORD_NO_MATCH"
                                          }
                                        ]
                                      }
                                    ];
                                  }
                                  return [
                                    4,
                                    props.recipeImplementation.submitNewPassword({
                                      formFields: fields,
                                      userContext
                                    })
                                  ];
                                case 2:
                                  response = _a2.sent();
                                  if (response.status === "RESET_PASSWORD_INVALID_TOKEN_ERROR") {
                                    throw new STGeneralError__default.default(
                                      "EMAIL_PASSWORD_RESET_PASSWORD_INVALID_TOKEN_ERROR"
                                    );
                                  }
                                  return [
                                    2,
                                    response.status === "FIELD_ERROR" ? response : {
                                      status: "OK"
                                    }
                                  ];
                              }
                            });
                          }
                        );
                      },
                      showLabels: true
                    })
                  ]
                }
              )
            )
          }
        )
      );
    };
    var SubmitNewPassword = uiEntry.withOverride("EmailPasswordSubmitNewPassword", EmailPasswordSubmitNewPassword);
    function ResetPasswordUsingTokenTheme(props) {
      if (props.submitNewPasswordForm !== void 0) {
        return jsxRuntime.jsx(
          SubmitNewPassword,
          genericComponentOverrideContext.__assign({}, props.submitNewPasswordForm)
        );
      }
      return jsxRuntime.jsx(ResetPasswordEmail, genericComponentOverrideContext.__assign({}, props.enterEmailForm));
    }
    function ResetPasswordUsingTokenThemeWrapper(props) {
      var rootStyle = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().rootStyle;
      var userStyles = props.submitNewPasswordForm ? props.config.resetPasswordUsingTokenFeature.submitNewPasswordForm.style : props.config.resetPasswordUsingTokenFeature.enterEmailForm.style;
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              translations.ThemeBase,
              genericComponentOverrideContext.__assign(
                { userStyles: [rootStyle, props.config.recipeRootStyle, userStyles] },
                {
                  children: jsxRuntime.jsx(
                    ResetPasswordUsingTokenTheme,
                    genericComponentOverrideContext.__assign({}, props)
                  )
                }
              )
            )
          }
        )
      );
    }
    var defaultTranslationsEmailPassword = {
      en: genericComponentOverrideContext.__assign(
        genericComponentOverrideContext.__assign(
          genericComponentOverrideContext.__assign({}, uiEntry.defaultTranslationsCommon.en),
          translations.defaultTranslationsEmailVerification.en
        ),
        {
          EMAIL_PASSWORD_EMAIL_LABEL: "Email",
          EMAIL_PASSWORD_EMAIL_PLACEHOLDER: "Email address",
          EMAIL_PASSWORD_PASSWORD_LABEL: "Password",
          EMAIL_PASSWORD_PASSWORD_PLACEHOLDER: "Password",
          EMAIL_PASSWORD_SIGN_IN_FORGOT_PW_LINK: "Forgot password?",
          EMAIL_PASSWORD_SIGN_IN_SUBMIT_BTN: "SIGN IN",
          EMAIL_PASSWORD_SIGN_IN_WRONG_CREDENTIALS_ERROR: "Incorrect email and password combination",
          EMAIL_PASSWORD_SIGN_UP_SUBMIT_BTN: "SIGN UP",
          EMAIL_PASSWORD_EMAIL_ALREADY_EXISTS: "This email already exists. Please sign in instead",
          EMAIL_PASSWORD_RESET_HEADER_TITLE: "Reset your password",
          EMAIL_PASSWORD_RESET_HEADER_SUBTITLE: "We will send you an email to reset your password",
          EMAIL_PASSWORD_RESET_SEND_FALLBACK_EMAIL: "your account",
          EMAIL_PASSWORD_RESET_SEND_BEFORE_EMAIL: "A password reset email has been sent to ",
          EMAIL_PASSWORD_RESET_SEND_AFTER_EMAIL: ", if it exists in our system. ",
          EMAIL_PASSWORD_RESET_RESEND_LINK: "Resend or change email",
          EMAIL_PASSWORD_RESET_SEND_BTN: "Email me",
          EMAIL_PASSWORD_RESET_SIGN_IN_LINK: "Sign In",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_HEADER_TITLE: "Success!",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_DESC: "Your password has been updated successfully",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_SUCCESS_SIGN_IN_BTN: "SIGN IN",
          EMAIL_PASSWORD_NEW_PASSWORD_LABEL: "New password",
          EMAIL_PASSWORD_NEW_PASSWORD_PLACEHOLDER: "New password",
          EMAIL_PASSWORD_CONFIRM_PASSWORD_LABEL: "Confirm password",
          EMAIL_PASSWORD_CONFIRM_PASSWORD_PLACEHOLDER: "Confirm your password",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_TITLE: "Change your password",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_HEADER_SUBTITLE: "Enter a new password below to change your password",
          EMAIL_PASSWORD_RESET_SUBMIT_PW_CHANGE_PW_BTN: "CHANGE PASSWORD",
          EMAIL_PASSWORD_RESET_PASSWORD_INVALID_TOKEN_ERROR: "Invalid password reset token",
          ERROR_EMAIL_NON_STRING: "Email must be of type string",
          ERROR_EMAIL_INVALID: "Email is invalid",
          ERROR_PASSWORD_NON_STRING: "Password must be of type string",
          ERROR_PASSWORD_TOO_SHORT: "Password must contain at least 8 characters, including a number",
          ERROR_PASSWORD_TOO_LONG: "Password's length must be lesser than 100 characters",
          ERROR_PASSWORD_NO_ALPHA: "Password must contain at least one alphabet",
          ERROR_PASSWORD_NO_NUM: "Password must contain at least one number",
          ERROR_CONFIRM_PASSWORD_NO_MATCH: "Confirmation password doesn't match",
          ERROR_NON_OPTIONAL: "Field is not optional",
          /*
           * The following are error messages from our backend SDK.
           * These are returned as full messages to preserver compatibilty, but they work just like the keys above.
           * They are shown as is by default (setting the value to undefined will display the raw translation key)
           */
          "This email already exists. Please sign in instead.": void 0,
          "Field is not optional": void 0,
          "Password must contain at least 8 characters, including a number": void 0,
          "Password's length must be lesser than 100 characters": void 0,
          "Password must contain at least one alphabet": void 0,
          "Password must contain at least one number": void 0,
          "Email is invalid": void 0,
          "Reset password link was not created because of account take over risk. Please contact support. (ERR_CODE_001)": void 0,
          "Cannot sign up due to security reasons. Please try logging in, use a different login method or contact support. (ERR_CODE_007)": void 0,
          "Cannot sign in due to security reasons. Please try resetting your password, use a different login method or contact support. (ERR_CODE_008)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_009)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_010)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_011)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_012)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_013)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_014)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_015)": void 0,
          "Cannot sign in / up due to security reasons. Please contact support. (ERR_CODE_016)": void 0
        }
      )
    };
    var ResetPasswordUsingToken$1 = function(props) {
      var token = genericComponentOverrideContext.getQueryParams("token");
      var userContext = uiEntry.useUserContext();
      if (props.userContext !== void 0) {
        userContext = props.userContext;
      }
      var _a = React__namespace.useState(), error = _a[0], setError = _a[1];
      var enterEmailFormFeature = props.recipe.config.resetPasswordUsingTokenFeature.enterEmailForm;
      var submitNewPasswordFormFeature = props.recipe.config.resetPasswordUsingTokenFeature.submitNewPasswordForm;
      var submitNewPasswordForm = token === void 0 || token === null ? void 0 : {
        error,
        onError: function(error2) {
          return setError(error2);
        },
        clearError: function() {
          return setError(void 0);
        },
        styleFromInit: submitNewPasswordFormFeature.style,
        formFields: submitNewPasswordFormFeature.formFields,
        recipeImplementation: props.recipe.webJSRecipe,
        config: props.recipe.config,
        onSignInClicked: function() {
          void genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
            show: "signin",
            navigate: props.navigate,
            redirectBack: false,
            userContext
          });
        },
        token
      };
      var enterEmailForm = {
        onBackButtonClicked: function() {
          return genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().redirectToAuth({
            show: "signin",
            navigate: props.navigate,
            redirectBack: false,
            userContext
          });
        },
        error,
        onError: function(error2) {
          return setError(error2);
        },
        clearError: function() {
          return setError(void 0);
        },
        styleFromInit: enterEmailFormFeature.style,
        formFields: enterEmailFormFeature.formFields,
        recipeImplementation: props.recipe.webJSRecipe,
        config: props.recipe.config
      };
      var childProps = {
        config: props.recipe.config,
        submitNewPasswordForm,
        enterEmailForm
      };
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        uiEntry.ComponentOverrideContext.Provider,
        genericComponentOverrideContext.__assign(
          { value: recipeComponentOverrides },
          {
            children: jsxRuntime.jsx(
              uiEntry.FeatureWrapper,
              genericComponentOverrideContext.__assign(
                {
                  useShadowDom: genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().useShadowDom,
                  defaultStore: defaultTranslationsEmailPassword
                },
                {
                  children: jsxRuntime.jsxs(React.Fragment, {
                    children: [
                      props.children === void 0 && jsxRuntime.jsx(
                        ResetPasswordUsingTokenThemeWrapper,
                        genericComponentOverrideContext.__assign({}, childProps)
                      ),
                      props.children && React__namespace.Children.map(props.children, function(child) {
                        if (React__namespace.isValidElement(child)) {
                          return React__namespace.cloneElement(child, childProps);
                        }
                        return child;
                      })
                    ]
                  })
                }
              )
            )
          }
        )
      );
    };
    var SignInForm = uiEntry.withOverride("EmailPasswordSignInForm", function EmailPasswordSignInForm(props) {
      var _this = this;
      var userContext = uiEntry.useUserContext();
      return jsxRuntime.jsx(formBase.FormBase, {
        formFields: props.formFields,
        clearError: props.clearError,
        onError: props.onError,
        onFetchError: props.onFetchError,
        buttonLabel: "EMAIL_PASSWORD_SIGN_IN_SUBMIT_BTN",
        onSuccess: props.onSuccess,
        callAPI: function(formFields) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var validationErrors, response;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    genericComponentOverrideContext.validateForm(
                      formFields,
                      props.config.signInAndUpFeature.signInForm.formFields
                    )
                  ];
                case 1:
                  validationErrors = _a.sent();
                  if (validationErrors.length > 0) {
                    return [
                      2,
                      {
                        status: "FIELD_ERROR",
                        formFields: validationErrors
                      }
                    ];
                  }
                  return [
                    4,
                    props.recipeImplementation.signIn({
                      formFields,
                      shouldTryLinkingWithSessionUser: false,
                      userContext
                    })
                  ];
                case 2:
                  response = _a.sent();
                  if (response.status === "WRONG_CREDENTIALS_ERROR") {
                    throw new STGeneralError__default.default(
                      "EMAIL_PASSWORD_SIGN_IN_WRONG_CREDENTIALS_ERROR"
                    );
                  } else if (response.status === "SIGN_IN_NOT_ALLOWED") {
                    throw new STGeneralError__default.default(response.reason);
                  } else {
                    return [2, response];
                  }
              }
            });
          });
        },
        validateOnBlur: false,
        showLabels: true,
        footer: props.footer
      });
    });
    function SignInTheme(props) {
      var rootStyle = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().rootStyle;
      var activeStyle = props.config.signInAndUpFeature.signInForm.style;
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              translations.ThemeBase,
              genericComponentOverrideContext.__assign(
                { userStyles: [rootStyle, props.config.recipeRootStyle, activeStyle] },
                { children: jsxRuntime.jsx(SignInForm, genericComponentOverrideContext.__assign({}, props)) }
              )
            )
          }
        )
      );
    }
    function useChildProps$1(recipe$2, onAuthSuccess, error, onError, clearError, userContext, navigate) {
      var _this = this;
      var session$1 = uiEntry.useSessionContext();
      var recipeImplementation = React.useMemo(
        function() {
          return getModifiedRecipeImplementation$1(recipe$2.webJSRecipe);
        },
        [recipe$2]
      );
      var rethrowInRender = genericComponentOverrideContext.useRethrowInRender();
      var t = translationContext.useTranslation();
      var onSignInSuccess = React.useCallback(
        function() {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var payloadAfterCall;
            return genericComponentOverrideContext.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  _b.trys.push([0, 2, , 3]);
                  return [
                    4,
                    types.Session.getInstanceOrThrow().getAccessTokenPayloadSecurely({
                      userContext
                    })
                  ];
                case 1:
                  payloadAfterCall = _b.sent();
                  return [3, 3];
                case 2:
                  _b.sent();
                  payloadAfterCall = void 0;
                  return [3, 3];
                case 3:
                  return [
                    2,
                    onAuthSuccess({
                      createdNewUser: false,
                      isNewRecipeUser: false,
                      newSessionCreated: session$1.loading || !session$1.doesSessionExist || payloadAfterCall !== void 0 && session$1.accessTokenPayload.sessionHandle !== payloadAfterCall.sessionHandle,
                      recipeId: recipe.EmailPassword.RECIPE_ID
                    }).catch(rethrowInRender)
                  ];
              }
            });
          });
        },
        [recipe$2, userContext, navigate]
      );
      return React.useMemo(
        function() {
          var onForgotPasswordClick = function() {
            return recipe$2.redirect(
              {
                action: "RESET_PASSWORD",
                tenantIdFromQueryParams: genericComponentOverrideContext.getTenantIdFromQueryParams()
              },
              navigate,
              void 0,
              userContext
            );
          };
          var signInAndUpFeature = recipe$2.config.signInAndUpFeature;
          var signInFeature = signInAndUpFeature.signInForm;
          var formFields = signInFeature.formFields.map(function(f) {
            return f.id !== "password" ? f : genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, f), {
              labelComponent: jsxRuntime.jsxs(
                "div",
                genericComponentOverrideContext.__assign(
                  { "data-supertokens": "formLabelWithLinkWrapper" },
                  {
                    children: [
                      jsxRuntime.jsx(formBase.Label, {
                        value: f.label,
                        "data-supertokens": "passwordInputLabel"
                      }),
                      jsxRuntime.jsx(
                        "a",
                        genericComponentOverrideContext.__assign(
                          {
                            onClick: onForgotPasswordClick,
                            "data-supertokens": "link linkButton formLabelLinkBtn forgotPasswordLink"
                          },
                          { children: t("EMAIL_PASSWORD_SIGN_IN_FORGOT_PW_LINK") }
                        )
                      )
                    ]
                  }
                )
              )
            });
          });
          return {
            recipeImplementation,
            config: recipe$2.config,
            styleFromInit: signInFeature.style,
            formFields,
            error,
            clearError,
            onError,
            onFetchError: function(err) {
              return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
                var invalidClaims, evInstance;
                return genericComponentOverrideContext.__generator(this, function(_b) {
                  switch (_b.label) {
                    case 0:
                      if (!(err.status === types.Session.getInstanceOrThrow().config.invalidClaimStatusCode))
                        return [3, 5];
                      return [
                        4,
                        session.getInvalidClaimsFromResponse({
                          response: err,
                          userContext
                        })
                      ];
                    case 1:
                      invalidClaims = _b.sent();
                      if (!invalidClaims.some(function(i) {
                        return i.id === emailverification.EmailVerificationClaim.id;
                      }))
                        return [3, 5];
                      _b.label = 2;
                    case 2:
                      _b.trys.push([2, 4, , 5]);
                      evInstance = recipe$1.EmailVerification.getInstanceOrThrow();
                      return [
                        4,
                        evInstance.redirect(
                          {
                            action: "VERIFY_EMAIL",
                            tenantIdFromQueryParams: genericComponentOverrideContext.getTenantIdFromQueryParams()
                          },
                          navigate,
                          void 0,
                          userContext
                        )
                      ];
                    case 3:
                      _b.sent();
                      return [
                        2
                        /*return*/
                      ];
                    case 4:
                      _b.sent();
                      return [3, 5];
                    case 5:
                      onError("SOMETHING_WENT_WRONG_ERROR");
                      return [
                        2
                        /*return*/
                      ];
                  }
                });
              });
            },
            onSuccess: onSignInSuccess,
            onForgotPasswordClick,
            userContext
          };
        },
        [recipe$2, error, userContext]
      );
    }
    var SignInFeature = function(props) {
      var childProps = useChildProps$1(
        props.recipe,
        props.onAuthSuccess,
        props.error,
        props.onError,
        props.clearError,
        props.userContext,
        props.navigate
      );
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        authCompWrapper.AuthComponentWrapper,
        genericComponentOverrideContext.__assign(
          { recipeComponentOverrides },
          {
            children: jsxRuntime.jsxs(React.Fragment, {
              children: [
                props.children === void 0 && jsxRuntime.jsx(SignInTheme, genericComponentOverrideContext.__assign({}, childProps)),
                props.children && React__namespace.Children.map(props.children, function(child) {
                  if (React__namespace.isValidElement(child)) {
                    return React__namespace.cloneElement(
                      child,
                      genericComponentOverrideContext.__assign({}, childProps)
                    );
                  }
                  return child;
                })
              ]
            })
          }
        )
      );
    };
    var getModifiedRecipeImplementation$1 = function(origImpl) {
      return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, origImpl), {
        signIn: function(input) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            var response;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    origImpl.signIn(
                      genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, input),
                        { shouldTryLinkingWithSessionUser: false }
                      )
                    )
                  ];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        },
        signUp: function(input) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            var response;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    origImpl.signUp(
                      genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, input),
                        { shouldTryLinkingWithSessionUser: false }
                      )
                    )
                  ];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        }
      });
    };
    var SignUpForm = uiEntry.withOverride("EmailPasswordSignUpForm", function EmailPasswordSignUpForm(props) {
      var _this = this;
      var userContext = uiEntry.useUserContext();
      return jsxRuntime.jsx(formBase.FormBase, {
        formFields: props.formFields,
        clearError: props.clearError,
        onError: props.onError,
        onFetchError: props.onFetchError,
        buttonLabel: "EMAIL_PASSWORD_SIGN_UP_SUBMIT_BTN",
        onSuccess: props.onSuccess,
        callAPI: function(formFields) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var validationErrors, res;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    genericComponentOverrideContext.validateForm(
                      formFields,
                      props.config.signInAndUpFeature.signUpForm.formFields
                    )
                  ];
                case 1:
                  validationErrors = _a.sent();
                  if (validationErrors.length > 0) {
                    return [
                      2,
                      {
                        status: "FIELD_ERROR",
                        formFields: validationErrors
                      }
                    ];
                  }
                  return [
                    4,
                    props.recipeImplementation.signUp({
                      formFields,
                      shouldTryLinkingWithSessionUser: false,
                      userContext
                    })
                  ];
                case 2:
                  res = _a.sent();
                  if (res.status === "SIGN_UP_NOT_ALLOWED") {
                    throw new STGeneralError__default$1.default(res.reason);
                  }
                  return [2, res];
              }
            });
          });
        },
        validateOnBlur: true,
        showLabels: true,
        footer: props.footer
      });
    });
    function SignUpTheme(props) {
      var rootStyle = genericComponentOverrideContext.SuperTokens.getInstanceOrThrow().rootStyle;
      var activeStyle = props.config.signInAndUpFeature.signUpForm.style;
      return jsxRuntime.jsx(
        uiEntry.UserContextWrapper,
        genericComponentOverrideContext.__assign(
          { userContext: props.userContext },
          {
            children: jsxRuntime.jsx(
              translations.ThemeBase,
              genericComponentOverrideContext.__assign(
                { userStyles: [rootStyle, props.config.recipeRootStyle, activeStyle] },
                { children: jsxRuntime.jsx(SignUpForm, genericComponentOverrideContext.__assign({}, props)) }
              )
            )
          }
        )
      );
    }
    function useChildProps(recipe2, onAuthSuccess, error, onError, clearError, userContext, navigate) {
      var _this = this;
      var session$1 = uiEntry.useSessionContext();
      var recipeImplementation = React.useMemo(
        function() {
          return recipe2 && getModifiedRecipeImplementation(recipe2.webJSRecipe);
        },
        [recipe2]
      );
      var rethrowInRender = genericComponentOverrideContext.useRethrowInRender();
      var onSignUpSuccess = React.useCallback(
        function(result) {
          return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
            var payloadAfterCall;
            return genericComponentOverrideContext.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  _b.trys.push([0, 2, , 3]);
                  return [
                    4,
                    types.Session.getInstanceOrThrow().getAccessTokenPayloadSecurely({
                      userContext
                    })
                  ];
                case 1:
                  payloadAfterCall = _b.sent();
                  return [3, 3];
                case 2:
                  _b.sent();
                  payloadAfterCall = void 0;
                  return [3, 3];
                case 3:
                  return [
                    2,
                    onAuthSuccess({
                      createdNewUser: result.user.loginMethods.length === 1,
                      isNewRecipeUser: true,
                      newSessionCreated: session$1.loading || !session$1.doesSessionExist || payloadAfterCall !== void 0 && session$1.accessTokenPayload.sessionHandle !== payloadAfterCall.sessionHandle,
                      recipeId: recipe2.recipeID
                    }).catch(rethrowInRender)
                  ];
              }
            });
          });
        },
        [recipe2, userContext, navigate]
      );
      return React.useMemo(
        function() {
          var signInAndUpFeature = recipe2.config.signInAndUpFeature;
          var signUpFeature = signInAndUpFeature.signUpForm;
          return {
            recipeImplementation,
            config: recipe2.config,
            styleFromInit: signUpFeature.style,
            formFields: getThemeSignUpFeatureFormFields(signUpFeature.formFields, recipe2, userContext),
            onFetchError: function(err) {
              return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
                var invalidClaims, evInstance;
                return genericComponentOverrideContext.__generator(this, function(_b) {
                  switch (_b.label) {
                    case 0:
                      if (!(err.status === types.Session.getInstanceOrThrow().config.invalidClaimStatusCode))
                        return [3, 5];
                      return [
                        4,
                        session.getInvalidClaimsFromResponse({
                          response: err,
                          userContext
                        })
                      ];
                    case 1:
                      invalidClaims = _b.sent();
                      if (!invalidClaims.some(function(i) {
                        return i.id === emailverification.EmailVerificationClaim.id;
                      }))
                        return [3, 5];
                      _b.label = 2;
                    case 2:
                      _b.trys.push([2, 4, , 5]);
                      evInstance = recipe$1.EmailVerification.getInstanceOrThrow();
                      return [
                        4,
                        evInstance.redirect(
                          {
                            action: "VERIFY_EMAIL",
                            tenantIdFromQueryParams: genericComponentOverrideContext.getTenantIdFromQueryParams()
                          },
                          navigate,
                          void 0,
                          userContext
                        )
                      ];
                    case 3:
                      _b.sent();
                      return [
                        2
                        /*return*/
                      ];
                    case 4:
                      _b.sent();
                      return [3, 5];
                    case 5:
                      onError("SOMETHING_WENT_WRONG_ERROR");
                      return [
                        2
                        /*return*/
                      ];
                  }
                });
              });
            },
            onSuccess: onSignUpSuccess,
            userContext,
            error,
            onError,
            clearError
          };
        },
        [recipe2, error, userContext]
      );
    }
    var SignUpFeature = function(props) {
      var userContext = uiEntry.useUserContext();
      if (props.userContext !== void 0) {
        userContext = props.userContext;
      }
      var childProps = useChildProps(
        props.recipe,
        props.onAuthSuccess,
        props.error,
        props.onError,
        props.clearError,
        userContext,
        props.navigate
      );
      var recipeComponentOverrides = props.useComponentOverrides();
      return jsxRuntime.jsx(
        authCompWrapper.AuthComponentWrapper,
        genericComponentOverrideContext.__assign(
          { recipeComponentOverrides },
          {
            children: jsxRuntime.jsxs(React.Fragment, {
              children: [
                props.children === void 0 && jsxRuntime.jsx(SignUpTheme, genericComponentOverrideContext.__assign({}, childProps)),
                props.children && React__namespace.Children.map(props.children, function(child) {
                  if (React__namespace.isValidElement(child)) {
                    return React__namespace.cloneElement(
                      child,
                      genericComponentOverrideContext.__assign({}, childProps)
                    );
                  }
                  return child;
                })
              ]
            })
          }
        )
      );
    };
    var getModifiedRecipeImplementation = function(origImpl) {
      return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, origImpl), {
        signIn: function(input) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            var response;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    origImpl.signIn(
                      genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, input),
                        { shouldTryLinkingWithSessionUser: false }
                      )
                    )
                  ];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        },
        signUp: function(input) {
          return genericComponentOverrideContext.__awaiter(this, void 0, void 0, function() {
            var response;
            return genericComponentOverrideContext.__generator(this, function(_a) {
              switch (_a.label) {
                case 0:
                  return [
                    4,
                    origImpl.signUp(
                      genericComponentOverrideContext.__assign(
                        genericComponentOverrideContext.__assign({}, input),
                        { shouldTryLinkingWithSessionUser: false }
                      )
                    )
                  ];
                case 1:
                  response = _a.sent();
                  return [2, response];
              }
            });
          });
        }
      });
    };
    function getThemeSignUpFeatureFormFields(formFields, recipe2, userContext) {
      var _this = this;
      var emailPasswordOnly = formFields.length === 2;
      return formFields.map(function(field) {
        return genericComponentOverrideContext.__assign(genericComponentOverrideContext.__assign({}, field), {
          showIsRequired: function() {
            if (emailPasswordOnly) {
              return false;
            }
            return field.optional === false;
          }(),
          validate: function() {
            if (field.id !== "email") {
              return field.validate;
            }
            return function(value) {
              return genericComponentOverrideContext.__awaiter(_this, void 0, void 0, function() {
                var error, emailExists, err_1;
                return genericComponentOverrideContext.__generator(this, function(_a) {
                  switch (_a.label) {
                    case 0:
                      return [4, field.validate(value)];
                    case 1:
                      error = _a.sent();
                      if (error !== void 0) {
                        return [2, error];
                      }
                      if (typeof value !== "string") {
                        return [2, "GENERAL_ERROR_EMAIL_NON_STRING"];
                      }
                      _a.label = 2;
                    case 2:
                      _a.trys.push([2, 4, , 5]);
                      return [
                        4,
                        recipe2.webJSRecipe.doesEmailExist({
                          email: value,
                          userContext
                        })
                      ];
                    case 3:
                      emailExists = _a.sent().doesExist;
                      if (emailExists) {
                        return [2, "EMAIL_PASSWORD_EMAIL_ALREADY_EXISTS"];
                      }
                      return [3, 5];
                    case 4:
                      err_1 = _a.sent();
                      if (STGeneralError__default.default.isThisError(err_1)) {
                        return [2, err_1.message];
                      }
                      return [3, 5];
                    case 5:
                      return [2, void 0];
                  }
                });
              });
            };
          }()
        });
      });
    }
    var EmailPasswordPreBuiltUI = (
      /** @class */
      function(_super) {
        genericComponentOverrideContext.__extends(EmailPasswordPreBuiltUI2, _super);
        function EmailPasswordPreBuiltUI2(recipeInstance) {
          var _this = _super.call(this) || this;
          _this.recipeInstance = recipeInstance;
          _this.languageTranslations = defaultTranslationsEmailPassword;
          _this.getFeatures = function(useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = componentOverrideContext.useContext;
            }
            var features = {};
            if (_this.recipeInstance.config.resetPasswordUsingTokenFeature.disableDefaultUI !== true) {
              var normalisedFullPath = _this.recipeInstance.config.appInfo.websiteBasePath.appendPath(
                new NormalisedURLPath__default.default(constants.DEFAULT_RESET_PASSWORD_PATH)
              );
              features[normalisedFullPath.getAsStringDangerous()] = {
                matches: genericComponentOverrideContext.matchRecipeIdUsingQueryParams(
                  _this.recipeInstance.config.recipeId
                ),
                component: function(props) {
                  return _this.getFeatureComponent("resetpassword", props, useComponentOverrides);
                },
                recipeID: recipe.EmailPassword.RECIPE_ID
              };
            }
            return features;
          };
          _this.getFeatureComponent = function(componentName, props, useComponentOverrides) {
            if (useComponentOverrides === void 0) {
              useComponentOverrides = componentOverrideContext.useContext;
            }
            if (componentName === "resetpassword") {
              return jsxRuntime.jsx(
                uiEntry.UserContextWrapper,
                genericComponentOverrideContext.__assign(
                  { userContext: props.userContext },
                  {
                    children: jsxRuntime.jsx(
                      ResetPasswordUsingToken$1,
                      genericComponentOverrideContext.__assign({ recipe: _this.recipeInstance }, props, {
                        useComponentOverrides
                      })
                    )
                  }
                )
              );
            } else {
              throw new Error("Should never come here.");
            }
          };
          _this.requiresSignUpPage = true;
          return _this;
        }
        EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance = function() {
          if (EmailPasswordPreBuiltUI2.instance === void 0) {
            var recipeInstance = recipe.EmailPassword.getInstanceOrThrow();
            EmailPasswordPreBuiltUI2.instance = new EmailPasswordPreBuiltUI2(recipeInstance);
          }
          return EmailPasswordPreBuiltUI2.instance;
        };
        EmailPasswordPreBuiltUI2.getFeatures = function(useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = componentOverrideContext.useContext;
          }
          return EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatures(useComponentOverrides);
        };
        EmailPasswordPreBuiltUI2.getFeatureComponent = function(componentName, props, useComponentOverrides) {
          if (useComponentOverrides === void 0) {
            useComponentOverrides = componentOverrideContext.useContext;
          }
          return EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent(
            componentName,
            props,
            useComponentOverrides
          );
        };
        EmailPasswordPreBuiltUI2.prototype.getAuthComponents = function() {
          var _this = this;
          return [
            {
              factorIds: [types.FactorIds.EMAILPASSWORD],
              displayOrder: 2,
              type: "SIGN_UP",
              component: function(props) {
                return jsxRuntime.jsx(
                  SignUpFeature,
                  genericComponentOverrideContext.__assign(
                    {
                      recipe: _this.recipeInstance,
                      useComponentOverrides: componentOverrideContext.useContext
                    },
                    props
                  ),
                  "emailpassword-sign-up"
                );
              }
            },
            {
              factorIds: [types.FactorIds.EMAILPASSWORD],
              displayOrder: 2,
              type: "SIGN_IN",
              component: function(props) {
                return jsxRuntime.jsx(
                  SignInFeature,
                  genericComponentOverrideContext.__assign(
                    {
                      recipe: _this.recipeInstance,
                      useComponentOverrides: componentOverrideContext.useContext
                    },
                    props
                  ),
                  "emailpassword-sign-in"
                );
              }
            }
          ];
        };
        EmailPasswordPreBuiltUI2.reset = function() {
          if (!genericComponentOverrideContext.isTest()) {
            return;
          }
          EmailPasswordPreBuiltUI2.instance = void 0;
          return;
        };
        EmailPasswordPreBuiltUI2.ResetPasswordUsingToken = function(prop) {
          return EmailPasswordPreBuiltUI2.getInstanceOrInitAndGetInstance().getFeatureComponent("resetpassword", prop);
        };
        EmailPasswordPreBuiltUI2.ResetPasswordUsingTokenTheme = ResetPasswordUsingTokenThemeWrapper;
        return EmailPasswordPreBuiltUI2;
      }(uiEntry.RecipeRouter)
    );
    var ResetPasswordUsingToken = EmailPasswordPreBuiltUI.ResetPasswordUsingToken;
    exports.EmailPasswordPreBuiltUI = EmailPasswordPreBuiltUI;
    exports.ResetPasswordUsingToken = ResetPasswordUsingToken;
    exports.ResetPasswordUsingTokenTheme = ResetPasswordUsingTokenThemeWrapper;
  }
});

// node_modules/supertokens-auth-react/recipe/emailpassword/prebuiltui.js
var require_prebuiltui = __commonJS({
  "node_modules/supertokens-auth-react/recipe/emailpassword/prebuiltui.js"(exports) {
    function __export(m) {
      for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }
    exports.__esModule = true;
    __export(require_emailpasswordprebuiltui());
  }
});
export default require_prebuiltui();
//# sourceMappingURL=supertokens-auth-react_recipe_emailpassword_prebuiltui.js.map
